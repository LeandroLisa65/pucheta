@model Gestion.EF.ItemProyecto_Actividades


<div class="row">
    <div class="col-md-5">
        <input type="hidden" asp-for="pp.Id" />
      
        @* <div class="form-group">
        <label asp-for="pp.Planificacion_Actividades_RubroId" class="control-label"></label>
        Html.DropDownListFor(model =>
        model.pp.Planificacion_Actividades_RubroId,
        new SelectList(Model.Planificacion_Actividades_Rubro, "Id", "Nombre")
        , new { @class = "form-control" }
        )
        </div>*@
        <div class="form-group">
            <label class="control-label">Rubros:</label>
            <input id="Planificacion_Actividades_RubroId" />
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group">
            @* <div class="form-group">
            <label class="control-label">Actividad</label>
            <div id="content_Actividades"></div>
            </div>*@
            <div class="form-group">
                <label class="control-label">Actividad</label>
                <input id="ddlActividades2" />

            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div style="margin-top:15px; margin-left:10px;">
            <br />
            <div class="icheck-primary d-inline">
                <input type="checkbox" id="inpChbxEsAdicional">
                <label for="inpChbxEsAdicional" class="control-label">Es Adicional</label>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label asp-for="pp.Proyecto_UbicacionesId" class="control-label"></label>
            @Html.DropDownListFor(model =>
            model.pp.Proyecto_UbicacionesId,
            new SelectList(Model.Proyecto_Ubicaciones, "Id", "Nombre")
            , new { @class = "form-control" }
            )
        </div>

    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label asp-for="pp.Incidencia" class="control-label"></label>
            <input asp-for="pp.Incidencia" type="text" class="form-control">
            <span asp-validation-for="pp.Incidencia" class="text-danger"></span>
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label asp-for="pp.Cantidad" class="control-label"></label>
            <input asp-for="pp.Cantidad" type="text" class="form-control">
            <span asp-validation-for="pp.Cantidad" class="text-danger"></span>
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            @{
                List<ItemSelectList> listItemsT = new List<ItemSelectList> {
            new ItemSelectList { Value = "Metros", Text = "Metros" },
            new ItemSelectList { Value = "Metros2", Text = "Metros2" },
            new ItemSelectList { Value = "Metros3", Text = "Metros3" },
            new ItemSelectList { Value = "Unidad", Text = "Unidad" },
            };
            }

            <label asp-for="pp.UnidadMedida" class="control-label"></label>
            @Html.DropDownListFor(model =>
            model.pp.UnidadMedida,
            new SelectList(listItemsT, "Value", "Text")
            , new { @class = "form-control" }
            )
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label class="control-label">Monto Unitario</label>
            <input asp-for="pp.Monto" type="text" class="form-control">
            <span asp-validation-for="pp.Monto" class="text-danger"></span>
        </div>
    </div>
</div>
@*GRILLA DE DETALLE DE NOTAS DE PEDIDO DE LA ACTIVIDAD*@

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label asp-for="pp.Fecha_Est_Incio" class="control-label"></label>
            <input id="dtpFechaInicio" asp-for="pp.Fecha_Est_Incio" type="date" name="partydate" class="form-control">
            <span asp-validation-for="pp.Fecha_Est_Incio" class="text-danger"></span>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label asp-for="pp.Fecha_Est_Fin" class="control-label"></label>
            <input id="dtpFechaFin" asp-for="pp.Fecha_Est_Fin" type="date" name="partydate" class="form-control">
            <span asp-validation-for="pp.Fecha_Est_Fin" class="text-danger"></span>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="row">
        <div class="col-md-12">
            <label asp-for="pp.Detalle" class="control-label"></label>
            @Html.TextAreaFor(model => model.pp.Detalle, new { @rows = "3", @class = "form-control" })
            <!--<textarea asp-for="pp.Detalle" class="form-control" rows="2" cols="20"></textarea>-->
            <span asp-validation-for="pp.Detalle" class="text-danger"></span>
        </div>
    </div>
</div>
<div class="form-group">
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="icheck-primary float-right">
                        <input type="checkbox" id="inpChbxSolapable"
                               @(Model.pp.Id == 0 ? "checked=\"checked\"" : (Model.pp.Solapable ? "checked=\"checked\"" : ""))>
                        <label for="inpChbxSolapable">@Html.DisplayNameFor(model => model.pp.Solapable)</label>
                    </div>
                    <h6>Actividad Precedente</h6>
                </div>
            </div>
            <div id="divFiltroActPrecedentes" class="row">
                <div class="col-md-4">
                    <label class="control-label">Rubro</label>
                    @Html.DropDownListFor(model =>
                    model.pp.Planificacion_Actividades_RubroId,
                    new SelectList(Model.Planificacion_Actividades_Rubro_Antecedente, "Id", "Nombre")
                    , new { @class = "form-control", @id = "slcRubrosActPrecedentes" }
                    )
                </div>
                <div class="col-md-4">
                    <label class="control-label">Actividad</label>
                    <select id="slcActividadesActPrecedentes" class="form-control"></select>
                </div>
                <div class="col-md-2">
                    <label class="control-label">Ubicación</label>
                    @Html.DropDownListFor(model => model.pp.Proyecto_UbicacionesId,
                    new SelectList(Model.Proyecto_Ubicaciones, "Id", "Nombre")
                    , new { @id = "slcUbicacionesActPrecedentes", @class = "form-control" }
                    )
                </div>
                <div class="col-md-2">
                    <button class="btn btn-default float-right" style="margin-top:1.9em"
                            onclick="get_PlanProyActPrecedentes()">
                        <i class="fas fa-search"></i>
                        Buscar
                    </button>
                </div>
            </div>
            <div id="divTblActPrecedentes" class="row">
                <div class="col-md-12">
                    <table id="tblActividadesPrecedentes" class="table" style="font-size:10pt"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-group">

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <input type="hidden" id="IdContratista" value="0" />
                    <div class="check-primary float-right myDIV">
                        <input type="checkbox" id="chkNotaPedido" onclick="DesbloquearNotaPedido()" />

                       @* <label>Generar Nota Pedido</label>*@

                    </div>
                    <div id="CartelNP" style="text-align:center" class="hide">Para generar una Nota de Pedido, seleccione el checkbox</div>
                    

                    <h6>Nota de Pedido</h6>
                </div>

            </div>
            <div class="row">

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Contratistas:</label>
                        <input id="ddlConten_Contratista" />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Indice:</label>
                        <input id="ddlConten_IndiceAjuste" />
                    </div>
                </div>
                <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Presenta Poliza</label>
                            <input id="dll_PresentaPoliza" />
                        </div>
                </div>
                 <div class="col-md-4">
                        <div id="GrupoPoliza">
                            <div class="form-group">
                                <label>Descripcion Poliza:</label>
                                <input id="dll_ComentarioPoliza" class="form-control" />
                            </div>
                        </div>
                 </div>
            </div>   @*Combos*@
            <div class="row">
                <div class="col-md-10">
                    <label class="control-label">Comentario para Nota de Pedido </label>
                    <textarea id="txtNotaPedido" class="form-control" rows="2" cols="20"></textarea>
                </div>
            </div> @*TEXTO BOX*@
            <div class="row">
               

            </div>
        </div>
    </div>
</div>
@* BUTTONS *@
<div class="form-group">
    <div class="row">
        <div class="col-md-2">
            @*<div class="btn-cerrar btn2 " type="button" onclick="GetBorrar()">
                <i class="far fa-times-circle"></i>
                Borrar
            </div>*@
        </div>
       @* <div class="col-md-2">
            @*<div class="btn-cancelar inline btn2" type="button" onclick="Cancelar()">
                <i class="far fa-times-circle"></i>
                Cancelar
            </div>
        </div>*@
        <div class="col-md-2">
            <div class="btn-volver" type="button" onclick="Volver()">
                <i class="fas fa-arrow-left"></i>
                Volver
            </div>
        </div>
        <div class="col-md-2">
            <div class="btn-copia" onclick="IrCopia()" type="button">
                Copiar Planificación
            </div>
        </div>
        <div class="col-md-2">
            <div class="btn-copia" onclick="_CopiarActividad()" type="button">
                Copiar Actividad
            </div>
        </div>
        <div class="col-md-2">
            <div class="btn-graba inline " type="button" onclick="grabarPlanProyActividad()">
                <i class="fas fa-check"></i>
                Grabar
            </div>
        </div>
        <div class="col-md-2">
        </div>
    </div>
</div>

<div class="modal fade  bd-example-modal-lg"
     id="CopiaUbicacionModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myLargeModalLabel"
     aria-hidden="true"
     data-backdrop="static">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header cabecera">
                <h5 id="ModalTitulo" class="modal-title"></h5>
                <button type="button" style="color:#ffffff" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>

        </div>
    </div>
</div>

<div class="modal fade bd-example-modal-xl"
     id="NotaPedidoModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myLargeModalLabel"
     aria-hidden="true"
     data-backdrop="static">
    <div class="modal-dialog  modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header cabecera">
                <h5 id="ModalTitulo" class="modal-title">NOTAS DE PEDIDOS RELACIONADAS</h5>
                <button type="button" style="color:#ffffff; " class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <br />
                <div class="row">
                    <div class="col-md-12" id="GrillaKendoDA"></div>
                </div>
                <br />
            </div>

        </div>
    </div>
</div>

<div class="modal fade  bd-example-modal-lg"
     id="divMdlArchivos2"
     tabindex="-1"
     role="dialog"
     aria-labelledby="myLargeModalLabel"
     aria-hidden="true"
     data-backdrop="static">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header cabecera">
                <h5 id="tituloMdlArchivos2" class="modal-title"></h5>
                <button type="button" style="color:#FFFFFF" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="divBodyMdlArchivos2">
            </div>

        </div>
    </div>
</div>
<style>
    .hide {
        display: none;
    }

    .check-primary.float-right.myDIV:hover + .hide {
        display: block;
        color: red;
    }
</style>
<script>

    //#region VARIABLES GLOBALES

    var oIPlanProyActividad = @Html.Raw(Json.Serialize(Model));
    var listadoActividades_plan = [];

    
    var _fechaInicioProyecto = (oIPlanProyActividad.fechaInicioProyecto).split("T")[0];

    controlMensajeNP();
    
    /********************************************************************************************************************* */
    //DEFINICIONES GENERALES EN NOTA PEDIDO
    var dataIndices = oIPlanProyActividad.indices;
    var dataContratista = oIPlanProyActividad.contratistas;

    var dataActividades = oIPlanProyActividad.planificacion_Actividades;
    var dataRubros = oIPlanProyActividad.planificacion_Actividades_Rubro;
    var dataUbicaciones = oIPlanProyActividad.proyecto_Ubicaciones;

    //FUnciones Para Nota de Pedido

    $('#chkNotaPedido').kendoCheckBox({
            label: "Generar Nota de Pedido"
        });

    $('#ddlConten_IndiceAjuste').attr('disabled', true);
    $('#ddlConten_Contratista').attr('disabled', true);

    $('#dll_PresentaPoliza').attr('disabled', true);
    $('#dll_ComentarioPoliza').attr('disabled', true);
    $("#GrupoPoliza").hide();



    cargaIndices_V2(dataIndices);
   // cargaContratista(dataContratista);
    cargaContratista(oIPlanProyActividad.idProyecto);
    cargaRubro(dataRubros);


    var dataPoliza = [
        {
            id: '1',
            nombre: 'Tiene Poliza'

        },
        {
            id: '0',
            nombre: 'No Tiene Poliza'
        }
    ];

    cargaPoliza();

    document.getElementById("txtNotaPedido").disabled = true;
    $('#idComboIndice').attr('disabled', true);
  
    if (oIPlanProyActividad.pp.id > 0) {

        cargaActividadesNuevo(dataActividades, oIPlanProyActividad.pp.planificacion_ActividadesId);
        $('#Planificacion_Actividades_RubroId').attr('disabled', true);
        $('#chkNotaPedido').attr('disabled', true);
        $('#ddlActividades2').attr('disabled', true); // CartelNP
        cargaRubro(dataRubros, oIPlanProyActividad.pp.planificacion_Actividades_RubroId, dataActividades, oIPlanProyActividad.pp.planificacion_ActividadesId)

        document.getElementById('CartelNP').style.display = 'none';
    }
    else {
        $("#Planificacion_Actividades_RubroId").prop("disabled", false);
        $("#ddlActividades2").prop("disabled", false);
        cargaActividadesNuevo(dataActividades);
    }

    $('#Planificacion_Actividades_RubroId').change(function (evento) {
        cargaActividadesNuevo();
    });

    /**********************************************************************************************************************/
    var lPlanProyActPrecedentes = oIPlanProyActividad.lPPA_Padres;
    lPlanProyActPrecedentes.forEach(ppa => ppa.selected = true);
    renderTableActPrecedentes();
    document.getElementById("inpChbxEsAdicional").checked = oIPlanProyActividad.pp.esAdicional;
    if (oIPlanProyActividad.pp.avance > 0) {
        document.getElementById("dtpFechaInicio").disabled = true;
    }

    //#endregion

    //#region EJECUCIÓN ON_LOAD

    if ($('#pp_Id').val() == 0) {

        $('.btn2').hide();
    } else {
        $('.btn2').show();
    }
    if ($('#dtpFechaInicio').val() == "0001-01-01") {

        //INICIO - ARMADO DE FECHA EN LOS TEXT DEL FILTRO
        var d = new Date();

        var month = d.getMonth() + 1;
        var day = d.getDate();
        var year = d.getFullYear();

        if (month < 10)
            month = '0' + month;
        if (day < 10)
            day = '0' + day;

        var mFechaHoy = year + "-" + month + "-" + day;

        var dateControl = document.querySelector('input[id="dtpFechaInicio"]');
        dateControl.value = mFechaHoy;
        var dateControl = document.querySelector('input[id="dtpFechaFin"]');
        dateControl.value = mFechaHoy;
        //FIN - ARMADO DE FECHA EN LOS TEXT DEL FILTRO
    }

    //variable para cargar un valor inicial al combo de actividad en Actividad Predente:
    var slcActividades = document.getElementById("slcActividadesActPrecedentes");
    var lActividades= null;
    var options = "";
    options = "<option value='0'>Seleccione Actividad</option>";
    slcActividades.innerHTML = options;

    //Definiciones usadas para Filtro Rubro de Actividad Precedente:
    document.getElementById("slcRubrosActPrecedentes").options[0].disabled = true;
    $('#slcRubrosActPrecedentes').change(function (evento) {
        cargarSlcActividades_ActPrecedentes();
    });

    var mensajeMostrar=true;

    //#endregion

    //#region FUNCIONES

    function cargaPoliza() {
        $("#dll_PresentaPoliza").kendoDropDownList({
            filter: "contains",
            dataTextField: "nombre",
            dataValueField: "id",
            optionLabel: "Elegir Poliza",
            change: MostrarDescripcionPoliza,
            dataSource: dataPoliza,
            height: 400
        });

    }

    function MostrarDescripcionPoliza() {

        if ($("#dll_PresentaPoliza").data('kendoDropDownList').value() == '1') {
            $("#GrupoPoliza").show();
        } else {
            $("#GrupoPoliza").hide();

        }
    }

    function cargarSlcActividades_ActPrecedentes() {
        var slcRubros = document.getElementById("slcRubrosActPrecedentes");
        var idRubro = slcRubros.value;
       // $.get("Url.Action("GetActividadesFiltradas","Planificacion")/" + idRubro,
        $.get("@Url.Action("GetActividadesFiltradas", "Planificacion")", { IdProyecto: oIPlanProyActividad.idProyecto, IdRubro: idRubro },
            function (data) {
                if (data.isError) {
                    toastr.error("Error", { timeOut: 2000 });
                    slcActividades.innerHTML = "<option value='0'>*** Error ***</option>";
                }
                else {     
                     lActividades = data.data;
                     options = "";
                    if (lActividades.length > 0) {                    
                        lActividades.forEach(a => {
                            options += "<option value='" + a.id + "'>" + a.nombre + "</option>"
                        });
                       
                    }
                    else {
                        options = "<option value='0'>*** Sin Opciones ***</option>";
                    }
                    slcActividades.innerHTML = options;
                }
            }
        );
    }

    function get_PlanProyActPrecedentes() {
        lPlanProyActPrecedentes = lPlanProyActPrecedentes.filter(ppa => ppa.selected);
        var oFiltro = {};
        var IdPlanActRubro = document.getElementById("slcRubrosActPrecedentes").value;
        var IdPlanActividad = document.getElementById("slcActividadesActPrecedentes").value;
        var IdProyUbicacion = document.getElementById("slcUbicacionesActPrecedentes").value;
        oFiltro.IdPlanActRubro = IdPlanActRubro;
        oFiltro.IdPlanActividad = IdPlanActividad;
        oFiltro.IdProyUbicacion = IdProyUbicacion;
         oFiltro.IdActividadActual=$('#pp_Id').val();
        $.post("@Url.Action("Get_PlanProyActividades_X_oFiltro","Planificacion")", oFiltro).done(
            function (res) {
                var table = document.getElementById("tblActividadesPrecedentes");
                if (res.error) {
                    toastr.error("Error", { timeOut: 2000 });
                    table.innerHTML = "<tbody><tr><td¨>*** Error ***</td></tr></tbody>"
                }
                else {
                    res.lPlanProyActividades.forEach(ppa => {
                        var ppaExistente = lPlanProyActPrecedentes.find(ppap => ppap.id == ppa.id);
                        if (!ppaExistente) {
                            lPlanProyActPrecedentes.push(ppa);
                        }
                    });
                    renderTableActPrecedentes();
                }
            }
        );
    }

    function renderTableActPrecedentes() {
        lPlanProyActPrecedentes = lPlanProyActPrecedentes.filter(function (ppa) { return ppa.id != oIPlanProyActividad.pp.id; });
        var table = document.getElementById("tblActividadesPrecedentes");
        if (lPlanProyActPrecedentes.length == 0) {
            table.innerHTML = "<tbody><tr><td style='text-align:center; font-size: 18px;'>Sin Resultados</td></tr></tbody>"
         
        }
        else {
            var thead = "<thead>";
            thead += "<tr>";
            thead += "<th>Rubro</th>";
            thead += "<th>Actividad</th>";
            thead += "<th>Ubicación</th>";
            thead += "<th>F. Est. Inicio</th>";
            thead += "<th>F. Est. Fin</th>";
            thead += "<th>Precedente</th>";
            thead += "<th>Acción</th>";
            thead += "</tr>";
            thead += "</thead>";
            var tbody = "<tbody>";
            lPlanProyActPrecedentes.forEach(paa => {
                tbody += "<tr>";
                tbody += "<td>" + paa.rubro + "</td>";
                tbody += "<td>" + paa.actividad + "</td>";
                tbody += "<td>" + paa.ubicacion + "</td>";
                tbody += "<td>" + paa.fechaEstInicio + "</td>";
                tbody += "<td>" + paa.fechaEstFin + "</td>";
                var btnVer = "<button type='button' class='btn btn-secondary btn-xs' onclick='verPadre(" + paa.id + ")'>" +
                    "<i class='fas fa-info-circle'></i></button>";
                tbody += "<td>" + (paa.tienePadre == "Si" ? btnVer : "No") + "</td>";
                if (paa.selected) {
                    tbody += "<td><button type='button' class='btn btn-xs btn-danger' onclick='cancelarEleccionActPrecedente(" + paa.id + ")'>" +
                        "<i class='fas fa-trash'></i>" +
                        " Cancelar elección</button></td>";
                }
                else {
                    tbody += "<td><button type='button' class='btn btn-xs btn-default' onclick='elegirActPrecedente(" + paa.id + ", true)'>" +
                        "<i class='fas fa-check'></i>" +
                        " Elegir</button></td>";
                }
                tbody += "</tr>";
                if(paa.detalle != null){
                     tbody += "<tr><td colspan='7'><label>Comentario:</label><p ><i>" + paa.detalle + "</i></p><hr/></td></tr>";
                }else{
                    tbody += "<tr><td colspan='7'><label>Comentario:</label><p ><i>" + "" + "</i></p><hr/></td></tr>";
                }

               
            });
            tbody += "</tbody>";
            table.innerHTML = thead + tbody;
        }
    }

    function cancelarEleccionActPrecedente(id) {
        lPlanProyActPrecedentes = lPlanProyActPrecedentes.filter(function (ppa) { return ppa.id != id; });
        get_PlanProyActPrecedentes();
    }

    function elegirActPrecedente(id, grabaAutomaticamente) {
        lPlanProyActPrecedentes.forEach(ppa => {
            if (ppa.id == id)
                ppa.selected = true;
        })
        renderTableActPrecedentes();
    }

    function ValidarFechas() {
        var OK = true;
        var fechainicial = $("#dtpFechaInicio").val();
        var fechafinal = $("#dtpFechaFin").val();
        if (Date.parse(fechafinal) < Date.parse(fechainicial)) {
            toastr.error("La fecha estimada de inicio debe ser menor a la fecha estimada de fin.", { timeOut: 2000 });
            OK = false;
        }

        if (Date.parse(fechainicial) < Date.parse(_fechaInicioProyecto)) {
            toastr.error("La fecha estimada de inicio no puede ser menor a la fecha de inicio del Proyecto.", { timeOut: 2000 });
            OK = false;
        }
        return OK;
    }

    function controlExistenciaNotadePedido(){
        var Existe= false;
       
         var valorcosa = listadoActividades_plan.find(function (element) {
             var ValorNuevo;
            if (element.nombre == $('#ddlActividades2').val()) { ValorNuevo = element.value; }
                 return ValorNuevo});
                 
         var selectedValueActividades = valorcosa.value;
        
        var modelNotaPedido = {
            //-> Nota Pedido
            IdProyecto: oIPlanProyActividad.idProyecto,
            IdContratista: $('#ddlConten_Contratista').val(),
            IdPA: selectedValueActividades
        };

        if(IdContratista != "0"){
            $.post("/NotaPedido/ControlExistenciaNotaPedido", modelNotaPedido).done(function (e) {
                if (!e.isError) {
                   
                    Existe= false;
                }
                else { toastr.error(e.data2, { timeOut: 2000 }); }
            });



        }
        else{
             toastr.error("Debe seleccionar un contratista", { timeOut: 2000 });
                        Existe = true;
        }
        return Existe;
    }

   

    function grabarPlanProyActividad() {
        var valid = validaDatos('Proyecto_ActividadesModal');
        if (!valid.isError) {
            if (ValidarFechas()) {

                //VALDACIONES NOTA DE PEDIDO
                var controlNotaPedido = false;
                var PuedeSeguir = false;
                var mRegOK = true;
                var IdPPAInsert = '';
                var selectedValueProyecto = oIPlanProyActividad.idProyecto;
          

                var selectedValueContratista = $('#ddlConten_Contratista').val();
                var selectedValueUbicaciones = $('#pp_Proyecto_UbicacionesId').val();
                var selectedValueIndice = $('#ddlConten_IndiceAjuste').val();
                var selectedValueActividadesIndice = $('#ddlActividades2').val();

                let incidencia = $('#pp_Incidencia').val();
                let cantidad = $('#pp_Cantidad').val();
                let monto = $('#pp_Monto').val();

                var ComentarioPoliza = $('#dll_ComentarioPoliza').val();
                var PresentaPoliza = $('#dll_PresentaPoliza').val();


                if (selectedValueUbicaciones == "0" ) {
                        toastr.error("Debe seleccionar una Ubicacion", { timeOut: 2000 });
                        mRegOK = false;
                        return;
                }

                if (selectedValueActividadesIndice == '' ) {
                        toastr.error("Debe seleccionar una Actividad", { timeOut: 2000 });
                        mRegOK = false;
                }

                if (selectedValueActividadesIndice == '' ) {
                        toastr.error("Debe seleccionar una Actividad", { timeOut: 2000 });
                        mRegOK = false;
                }
                else{
                    var selectedValueActividades=0;
                    if (oIPlanProyActividad.pp.id > 0) {

                          selectedValueActividades= oIPlanProyActividad.pp.planificacion_ActividadesId;
                    }else{
                         var valorcosa = listadoActividades_plan.find(function (element) {
                                var ValorNuevo;
                                if (element.nombre == selectedValueActividadesIndice) { ValorNuevo = element.value; }

                                return ValorNuevo
                            });
                        selectedValueActividades = valorcosa.value;
                    }
                   
                }
             

                 //Controlo que haya Seleccionado Crear Nota de Pedido
                if ($('#chkNotaPedido').prop('checked') &&  ($('#pp_Id').val() > 0 == false)) 
                    {
                    controlNotaPedido = true;
                }
                if(true){
                if (controlNotaPedido) {

                    if (selectedValueContratista == "0") {
                        toastr.error("Debe seleccionar un contratista", { timeOut: 2000 });
                        mRegOK = false;
                    }
                    if (selectedValueIndice == "0") {
                        toastr.error("Debe seleccionar un indice de ajuste", { timeOut: 2000 });
                        mRegOK = false;
                    }
                    if (selectedValueActividades == "0") {
                        toastr.error("Debe seleccionar una actividad", { timeOut: 2000 });
                        mRegOK = false;
                    }

                    if (cantidad == "") {
                        toastr.error("Debe ingresar una cantidad a asignar", { timeOut: 2000 });
                        mRegOK = false;
                    }
                    if (monto == "0") {
                        toastr.error("Debe ingresar un precio para la asignacion", { timeOut: 2000 });
                        mRegOK = false;
                    }
                    
                    if (PresentaPoliza != '0' && PresentaPoliza != '1') {
                        toastr.error("Debe seleccionar si presenta o no Poliza", { timeOut: 2000 });
                        mRegOK = false;
                    }
                    if (PresentaPoliza == '1') {
                        if (ComentarioPoliza == "") {
                            toastr.error("Debe ingresar la Descripcion de la Poliza", { timeOut: 2000 });
                            mRegOK = false;
                        }
                    }

                }
                var bEsAdicional = false;
                if ($('#inpChbxEsAdicional').prop('checked')) {
                    bEsAdicional = true;
                }
                var solapable = false;
                if ($('#inpChbxSolapable').prop('checked')) {
                    solapable = true;
                }
                var dt = $('#pp_Detalle').val();

                if (!controlNotaPedido) {selectedValueContratista=1;}

                if (incidencia) incidencia = incidencia.replace(",", ".");
                if (cantidad) cantidad = cantidad.replace(",", ".");
                if (monto) monto = monto.replace(",", ".");

                var model = {
                    Id: $('#pp_Id').val(),
                    Proyecto_UbicacionesId: $('#pp_Proyecto_UbicacionesId').val(),
                    Planificacion_ActividadesId: selectedValueActividades,
                    Planificacion_Actividades_RubroId: $('#Planificacion_Actividades_RubroId').val(),
                    UsuariosId: 1,
                    Fecha_Est_Incio: $('#dtpFechaInicio').val(),
                    Fecha_Est_Fin: $('#dtpFechaFin').val(),
                    ContratistasId: selectedValueContratista,
                    Detalle: dt,
                    EsAdicional: bEsAdicional,
                    Solapable: solapable,
                    Incidencia: incidencia,
                    Cantidad: cantidad,
                    Monto: monto,
                    UnidadMedida: $('#pp_UnidadMedida').val(),
                };


                if (mRegOK) {
                    $.post("/Planificacion/Proyecto_ActividadesGraba",
                        { oPPA: model, lPPA_Padres: lPlanProyActPrecedentes.filter(ppa => ppa.selected == true) })
                        .done(function (e) {
                            if (!e.isError) {
                                //esto me devuelve el idPPA


                                if ((e.data).length > 0) {
                                    IdPPAInsert = e.data;
                                } else { IdPPAInsert = e.data1; }

                                toastr.success("Se realizó la Operación exitosamente.", { timeOut: 2000 });
                                Nuevo();
                                lPlanProyActPrecedentes = [];
                                cargaProyecto_ActividadesGrilla();
                          
                                if (IdPPAInsert.length > 0 &&
                                    $('#chkNotaPedido').prop('checked')
                                    && ($('#pp_Id').val() > 0 == false)) {
                                    //Nota de Pedido

                                    var modelNotaPedido = {
                                        //-> Nota Pedido
                                        IdProyecto: selectedValueProyecto,
                                        IdContratista: selectedValueContratista,
                                        Comentario: $('#txtNotaPedido').val(),
                                        Fecha_Creacion: $("#dtpFechaInicio").val(),
                                        PresentaPoliza: stringToBoolean(PresentaPoliza),
                                        ComentarioPoliza: ComentarioPoliza,
                                        IdIndiceAjuste: selectedValueIndice,
                                        //-> Detalle Nota Pedido
                                        IdPPA: IdPPAInsert,
                                        IdPA: selectedValueActividades,
                                        _Ori_Cantidad: cantidad,
                                        _Ori_Precio_Contradado: monto
                                    };

                                    $.post("/NotaPedido/NotaPedidoGrabaCompleta", modelNotaPedido).done(function (e) {

                                        if (!e.isError) {
                                            toastr.success(e.data2, { timeOut: 2000 });
                                            Nuevo();
                                            lPlanProyActPrecedentes = [];
                                            cargaProyecto_ActividadesGrilla();
                                        }
                                        else { toastr.error(e.data2, { timeOut: 2000 }); }
                                    });
                                } //else { toastr.error("No se pudo generar la Nota de Pedido", { timeOut: 2000 }); }
                            } else {
                                toastr.error(e.data, { timeOut: 2000 });
                            }
                        });
                } else { toastr.error("Existen campos Obligatorios incompletos para la creacion de la Nota de Pedido", { timeOut: 2000 }); return;}//fin Notapedido
            }
        }
        }
        else {
            toastr.error(valid.mensaje, { timeOut: 2000 });
            return; 
        }
    }


    function stringToBoolean(str) {
        switch (str.toLowerCase()) {
            case "true":
            case "yes":
            case "1":
                return true;

            case "false":
            case "no":
            case "0":
                return false;

            default:
                return undefined;
        }
    }


    function Volver() {
        window.location.replace("/Proyecto/Proyecto");

    }

    function Cancelar() {
        Nuevo();
        cargaProyecto_ActividadesGrilla();
    }

    function GetBorrar(e) {
        var id = $('#pp_Id').val();
        var cantidad = parseFloat($('#pp_Cantidad').val());
        if (cantidad > 0) {
            $.post("/Planificacion/ActividadesBorra/" + id).done(function (e) {

                if (!e.isError) {
                    toastr.success(e.data, { timeOut: 2000 });
                    Nuevo();
                    cargaProyecto_ActividadesGrilla();

                } else {
                    toastr.error(e.data, { timeOut: 2000 });
                }

            });

        } else {
            toastr.error(' Error en Cantidad', { timeOut: 2000 });
        }
    }

    function IrCopia(e) {
        var IdProyecto = $("#proyecto_Id").val(); ///Es el Id del Proyecto
        $('#ModalTitulo').html("Copiar Ubicaciónes");
        $.get("@Url.Action("CopiaActividadesUbicacion","Planificacion")/" + IdProyecto,
            function (data) { $('.modal-body').html(data); })
        $('#CopiaUbicacionModal').modal('show');
    }

    //#endregion
    /************************************************************************************************************************************************************* */
    //REGION CREAR NOTA PEDIDO
    

    function DeshabilitarNotaPedido(valor) {
        document.getElementById("chkNotaPedido").disabled = valor;

    }

    $('#chkNotaPedido').change(function (evento) {
        limpiarNota();
    });


    /**--------------------- */

    function controlMensajeNP(){

        if(oIPlanProyActividad.pp.id >0)
            mensajeMostrar= true
        else 
           mensajeMostrar= false;
    }


    function limpiarNota() {
        $('#txtNotaPedido').val("");
        $("#ddlConten_IndiceAjuste").val(0);
        $('#ddlConten_Contratista').val(0);
        $('#dll_PresentaPoliza').val(-1);
        $('#dll_ComentarioPoliza').val("");

        cargaIndices_V2(dataIndices);
        cargaContratista(oIPlanProyActividad.idProyecto);
        cargaPoliza();


    }

    function DesbloquearNotaPedido() {
        if (!document.getElementById("chkNotaPedido").checked) { limpiarNota(); }
        document.getElementById("txtNotaPedido").disabled = !document.getElementById("chkNotaPedido").checked;
        $("#pp.ContratistasId").prop("disabled", !document.getElementById("chkNotaPedido").checked);
        $('#idComboIndice').attr('disabled', !document.getElementById("chkNotaPedido").checked);
        $('#ddlConten_IndiceAjuste').attr('disabled', !document.getElementById("chkNotaPedido").checked);
        $('#ddlConten_Contratista').attr('disabled', !document.getElementById("chkNotaPedido").checked);

        $('#dll_PresentaPoliza').attr('disabled', !document.getElementById("chkNotaPedido").checked);
        $('#dll_ComentarioPoliza').attr('disabled', !document.getElementById("chkNotaPedido").checked);
        cargaIndices_V2(dataIndices);
        cargaContratista(oIPlanProyActividad.idProyecto);
        cargaPoliza();
    }




    function cargaIndices_V2(data) {

        if (!data.isError) {

            $("#ddlConten_IndiceAjuste").kendoDropDownList({
                filter: "contains",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Seleccione Indice",
                dataSource: data,
                height: 400
            });


        }

    }

    function cargaContratista2(data) {

        if (!data.isError) {

            $("#ddlConten_Contratista").kendoDropDownList({
                filter: "contains",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Seleccione Contratista",
                dataSource: data,
                height: 400
            });


        }

    }

      function cargaContratista(idProyecto) {
        
        $.post("/NotaPedido/GetContratistaProyecto",
            { IdProyecto: idProyecto })
            .done(function (e) {
                if (!e.isError) {
                    data = e.data;
                    $(document).ready(function () {
                        $("#ddlConten_Contratista").kendoDropDownList({
                            filter: "contains",
                            optionLabel: "Elegir Contratista",
                            dataTextField: "sContratistas",
                            dataValueField: "contratistaId",
                            dataSource: data,
                           // value: oIPlanProyActividad.pp.contratistasId,
                            height: 400
                        });
                    });
                } else {
                    toastr.error(e.mensaje, { timeOut: 2000 });
                }
            });
    }



    function cargaRubro(data, valorRubroId = 0, data2 = [], valorActividadId = 0) {

        if (!data.isError) {
            if (oIPlanProyActividad.pp.id > 0) {
                $("#Planificacion_Actividades_RubroId").kendoDropDownList({
                    dataTextField: "nombre",
                    filter: "contains",
                    dataValueField: "id",
                    optionLabel: "Elegir Rubro",
                    change: cargaActividadesNuevo_onChange,
                    dataSource: data,
                    value: valorRubroId,
                    height: 400
                });
                $("#ddlActividades2").kendoDropDownList({
                    filter: "contains",
                    dataTextField: "nombre",
                    dataValueField: "id",
                    optionLabel: "Elegir Actividad",
                    dataSource: data2,
                    value: valorActividadId,
                    height: 400
                });
            }
            else {
                $("#Planificacion_Actividades_RubroId").kendoDropDownList({
                    dataTextField: "nombre",
                    filter: "contains",
                    dataValueField: "id",
                    optionLabel: "Elegir Rubro",
                    change: cargaActividadesNuevo,
                    dataSource: data,
                    height: 400
                });

                $("#ddlActividades2").kendoDropDownList({
                    filter: "contains",
                    dataTextField: "nombre",
                    dataValueField: "id",
                    optionLabel: "Elegir Actividad",
                    dataSource: [],
                    height: 400
                });
            }

        } else {

            console.log('Ups!, Hubo un error para cargar los combos!');
        }

    }



    function cargaActividadesNuevo(value, valorActividad = 0) {
        if (value == undefined) {
            value = $('#Planificacion_Actividades_RubroId').val();
        }
        if (parseInt(value) > 0) {
            $.get("@Url.Action("GetActividades","Planificacion")/" + value,
                function (data) {

                    if (!data.isError) {
                        listadoActividades_plan=[];
                        let Element = new Object();
                        Element = { nombre: '', value: 0 }

                        for (var i = 0; i < data.data.length; i++) {
                            Element = {
                                nombre: data.data[i].nombre,
                                value: data.data[i].id
                            };
                            listadoActividades_plan.push(Element);
                        }
                        if (listadoActividades_plan.length > 0) {
                            if (oIPlanProyActividad.pp.id > 0) {

                                $("#ddlActividades2").kendoDropDownList({
                                    filter: "contains",
                                    dataTextField: "nombre",
                                    dataValueField: "id",
                                    optionLabel: "Elegir Actividad",
                                    dataSource: listadoActividades_plan,
                                    value: valorActividad,
                                    height: 400
                                });
                                var ActividadesKendo = $("#ddlActividades2").data('kendoDropDownList');
                                ActividadesKendo.select(function (actividad) { return actividad.id == valorActividad; })

                            }
                            else {
                                $("#ddlActividades2").kendoDropDownList({
                                    filter: "contains",
                                    dataTextField: "nombre",
                                    dataValueField: "id",
                                    optionLabel: "Elegir Actividad",
                                    dataSource: listadoActividades_plan,
                                    height: 400
                                });
                            }

                        }


                    }
                }
            );

        }
    }

    function cargaActividadesNuevo_onChange() {

        if (oIPlanProyActividad.pp.id > 0) {

            cargaActividadesNuevo($('#Planificacion_Actividades_RubroId').val(), oIPlanProyActividad.pp.planificacion_ActividadesId);
        }
        else {
            cargaActividadesNuevo($('#Planificacion_Actividades_RubroId').val());
        }
    };
    /**********************************************************************************************************************************************************/
    /*REGION DE CARGA GRILLA CON DETALLE ASIGNACIONES*/
    function CargoDetalleAsignacion_PPA(id) {
        var pId = id;
        $('#ModalTitulo').html("Notas de pedido relacionadas");
        $.post("/NotaPedido/NotaPedido_PPA/" + pId)
            .done(function (e) {
                if (!e.isError) {
                    data = e;
                    CargoGrilla_NotasdePedido(data.data);
                } else {
                    toastr.error(e.mensaje, { timeOut: 2000 });
                }
            });
    }

    function CargoGrilla_NotasdePedido(datos) {
        $("#GrillaKendoDA").html("<div id='grillaDA'></div>");

        $("#grillaDA").kendoGrid({
            dataSource: {
                data: datos
            },
            columns: [
                { field: "sNotaPedido", title: "Nota Pedido", width: "40px", media: "(min-width: 850px)" },
                { field: "sFechaNotaPedido", title: "Fecha", width: "60px", media: "(min-width: 850px)" },
                { field: "sEstadoPedido", title: "Estado", width: "40px", media: "(min-width: 850px)" },
                { field: "sComentarioPedido", title: "Comentario", width: "80px", media: "(min-width: 850px)" },
                { field: "sContratista", title: "Contratista", width: "80px", media: "(min-width: 850px)" },
                { field: "_Cantidad_y_Medida", title: "Cantidad", width: "80px", media: "(min-width: 550px)" },
                { field: "_Precio_Contradado", title: "Precio", width: "80px", media: "(min-width: 850px)" },
                { field: "avance_Actual", title: "Avance", width: "40px", media: "(min-width: 850px)" },
                { field: "sIndice", title: "Indice Ajuste", width: "80px", media: "(min-width: 850px)" },
                { field: "presentaPoliza", title: "Presenta Poliza", width: "80px", media: "(min-width: 850px)" },
                { field: "comentarioPoliza", title: "Numero de Poliza", width: "80px", media: "(min-width: 850px)" },
                { field: "sUsuarioCreo", title: "Usuario Creo", width: "80px", media: "(min-width: 850px)" }
            ],
            dataBound: function () {
                dataView = this.dataSource.view();
                for (var i = 0; i < dataView.length; i++) {
                    if (dataView[i].sEstadoPedido == "Finalizado") {
                        var uid = dataView[i].uid;
                        $("#grillaDA tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_V");
                    }
                    if (dataView[i].sEstadoPedido == "Ejecucion") {
                        var uid = dataView[i].uid;
                        $("#grillaDA tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_Z");
                    }
                }
            }
        });
    }

   /******************************************************************************* */

       //
        //Esta funcion se utiliza para copiar masivamente la actividad
        //
    function _CopiarActividad() {
        if (oIPlanProyActividad.pp.id > 0) {
              var IdProyectoActividad = $("#proyecto_Id").val();
                $('#tituloMdlArchivos2').html("Copiar Actividad Masiva");
            $.get("@Url.Action("CopiaActividadesPlanificacion", "Planificacion")/?IdProyecto=" + IdProyectoActividad + "&IdRegistro=" + oIPlanProyActividad.pp.id,
                  function (data) { $('.divBodyMdlArchivos2').html(data); });
                 $('#divMdlArchivos2').modal('show');
       }else{
          toastr.success("Solo se puede crear una copia cuando se edita una actividad.", { timeOut: 2000 });
       }
      


    }

</script>
