@model object
@{
    ViewData["Title"] = "Certificados";
    Layout = "~/Views/Shared/_LayoutGestion.cshtml";
}
<div id="ContenidoGeneralCertificado" class="row">
    <div class="col-lg-12">
        <div class="card  card-rojo">
            <div class="card-header cabecera" style="padding-top:25px;">
                <button style="float:right;" class="btn btn-primary" id="" onclick="GenerarCertificado()">
                    <i class="fa fa-plus-circle"></i>
                    Crear Certificado
                </button>
                
                <div style="float:right; padding-right: 70px;width:300px" class="form-group">
                    <input  id="cerContratistasEnc" />
                </div>
                <div style="float:right; padding-right: 70px;width:300px" class="form-group">
                    
                    <input   id="cerProyectosEnc" />
                </div>
                <h5 class="m-0">Gestión de Certificados</h5>

            </div>
            <div class="card-body" style="width:100%">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Proyecto:</label>
                            <input id="cerFiltroProyectos" />
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Contratista:</label>
                            <input id="cerFiltroContratistas" />
                        </div>
                    </div>
                    <div class="col-md-1.5" style="padding-left:10px;">
                        <div class="form-group">
                            <label class="control-label">Fecha Desde:</label>
                            <input id="cerFiltroFecDesde" type="date" class="form-control" style="width: 100%;" contenteditable="false" />
                        </div>
                    </div>
                    <div class="col-md-1.5" style="padding-left:18px; padding-right:10px;">
                        <div class="form-group">
                            <label class="control-label">Fecha Hasta:</label>
                            <input id="cerFiltroFecHasta" type="date" class="form-control" style="width: 100%;" contenteditable="false" />
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Nro Certificado:</label>
                            <input id="cerNroCertificado" type="text" class="form-control" style="width: 100%;" contenteditable="false" />
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="row align-items-center" style="height: 100%;">
                            <div class="col-md-12">
                                <button type="button" class="btn btn-outline-dark btn-block btn-search" onclick="buscarFiltroGrilla()">
                                    <i class="fas fa-search"></i>
                                    Buscar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="position:relative">
                    <div id="GrillaKendo"></div>
                </div>
        </div>
    </div>
</div>
</div>
<style>
    .fila-naranja {
        background-color: orange;
        BAC
    }
</style>

@section scripts  {
    <script>
        const dataGlobal = JSON.parse('@Html.Raw(Json.Serialize(Model))');
/*-------------------------DEFINICIONES GENERALES--------------------------*/
        cargaProyectosEncabezado(dataGlobal.data3);
        cargaContratistasEncabezado();

        cargaProyectos(dataGlobal.data3);
        cargaContratistas();
       
        CargoGrilla_Certificados(dataGlobal.data2);
/*-----------------------END DEFINICIONES GENERALES------------------------*/

/*-------------------------CARGAR COMBOS---------------------------*/
        /*-----COMBOS ENCABEZADOS----*/     
        function cargaProyectosEncabezado(data) {
            $("#cerProyectosEnc").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Proyecto",
                dataSource: data,
                change: ddlProyectosEncabezado_onChange,
                height: 400
            });
        }
        function cargaContratistasEncabezado(idProyecto=0) {
            if (idProyecto == "0"){
                $("#cerContratistasEnc").kendoDropDownList({
                            filter: "startswith",
                            dataTextField: "sContratistas",
                            dataValueField: "contratistaId",
                            optionLabel: "Elegir Contratista",
                            dataSource: [],
                            height: 400
                });
            }
            else{
                $.get("@Url.Action("GetContratistasxCertificado", "Certificados")/" + idProyecto,             
                    function (data) {
                        if (!data.isError) {
                            $("#cerContratistasEnc").kendoDropDownList({
                                filter: "startswith",
                                dataTextField: "sContratistas",
                                dataValueField: "contratistaId",
                                optionLabel: "Elegir Contratista",
                                dataSource: data,
                                height: 400
                            });

                        }

                        if(data.data2 == 0){
                            toastr.error("El proyecto Seleccionado no tiene contratistas que tengan una nota de pedido activa", { timeOut: 3000 });
                        }


                    }
                );
            }
            
        }
        function ddlProyectosEncabezado_onChange() {
            idProyecto = $('#cerProyectosEnc').val();
            cargaContratistasEncabezado(idProyecto);
        };
        /*--------*/

        /*-----COMBOS FILTROS----*/
        function cargaProyectos(data) {
            $("#cerFiltroProyectos").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Proyecto",
                dataSource: data,
              
                height: 400
            });
        }

        function cargaContratistas() {
                $.get("@Url.Action("GetContratistas_En_Certificado", "Certificados")", 
                    function (data) {
                        if (!data.isError) {
                            $("#cerFiltroContratistas").kendoDropDownList({
                                filter: "contains",
                                dataTextField: "sContratistas",
                                dataValueField: "contratistaId",
                                optionLabel: "Elegir Contratista",
                                dataSource: data,
                                height: 400
                            });

                        }

                    }
                );
            
        }
        /*--------*/
/*-----------------------END CARGAR COMBOS ------------------------*/

/*-------------------------CRUD--------------------------*/

        function GenerarCertificado()
        {
            var UsuarioLoggin = dataGlobal.data1;
            var selectedValueContratista = $('#cerContratistasEnc').val();
            var selectedValueProyecto = $('#cerProyectosEnc').val();

            //if (UsuarioLoggin != 6 ) {
            //    toastr.error("El unico usuario que puede generar certificados es el Jefe de Obra", { timeOut: 2000 });
            //    return;
                
            //}
            if (selectedValueProyecto == '') {
                toastr.error("Debe seleccionar un Proyecto", { timeOut: 2000 });
               return;
            }
            if (selectedValueContratista == '') {
                toastr.error("Debe seleccionar un Contratista", { timeOut: 2000 });
                return;
            }
            //---

            $.post("/Certificados/ControrlExistenciaCertificado",
                { IdProyecto: $('#cerProyectosEnc').val(), IdContratista: $('#cerContratistasEnc').val() })
                .done(function (e) {
                    if (!e.isError) {
                        CertificadoAbm('Agregar');
                    }
                    else {
                        toastr.error(e.data, { timeOut: 2000 });
                    }
                });
            //--

        }

        function CertificadoAbm(Modo) {


            $.post("@Url.Action("_CertificadosAbm","Certificados")?IdProyecto=" + $('#cerProyectosEnc').val() + "&IdContratista=" + $('#cerContratistasEnc').val() + "&Modo=" + Modo,
                function (e) {
                   
                        $('#ContenidoGeneralCertificado').html(e);             
                });

        }


/*-----------------------END CRUD------------------------*/



/*-------------------------GRILLA--------------------------*/
        function CargoGrilla_Certificados(datos) {
            $("#GrillaKendo").html("<div id='grillaNP'></div>");
            $("#grillaNP").kendoGrid({
                filterable: true,
                sortable: true,
                scrollable: true,
                autoWidth: true,
                dataSource: {
                    data: datos
                },
                columns: [
                    { field: "fechaCreacion", title: "Fecha Certificado", template: "#= kendo.toString(kendo.parseDate(fechaCreacion), 'dd/MM/yyyy') #", width: "30px" },
                    { field: "sProyecto", title: "Proyecto", width: "40px" },
                    { field: "sContratista", title: "Contratista", width: "40px" },
                    { field: "nroCertificado", title: "Nro Certificado", width: "80px" },
                    { field: "estado", title: "Estado", width: "20%" },
                    { command: { name: "kedit", text: "", click: EditarCertificado }, title: "Editar", width: "20px", attributes: { style: "text-align:center;" } },
                    { command: { name: "kview", text: "", click: VerCertificado }, title: "Ver", width: "20px", attributes: { style: "text-align:center;" } },
                             { command: { name: "kdelete", text: "", click: EliminarCertificado }, title: "Ver", width: "15px", attributes: { style: "text-align:center;" } }
                    //{
                    //    command: { name: "kview", text: "", click: VerCertificado }, title: "Ver", width: "20px", attributes: { style: "text-align:center;" }, hidden: function (dataItem) {
                           
                    //        return (dataItem.estado != "Finalizado");
                    //    }
                    //}



                            
                ],
                dataBound: function () {
                    dataView = this.dataSource.view();
                    var grid = $("#grillaNP").data("kendoGrid");
                    for (var i = 0; i < dataView.length; i++) {
                        if (dataView[i].estado == "Finalizado") {
                            var uid = dataView[i].uid;
                            $("#grillaNP tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_U");
                            $("#grillaNP tbody").find("tr[data-uid=" + uid + "]").find(".k-grid-kedit").hide();



                        }
                        if (dataView[i].estado == "Abierto") {
                            var uid = dataView[i].uid;
                            $("#grillaNP tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_Z");
                        }
                        if (dataView[i].estado == "A Pagar") {
                            var uid = dataView[i].uid;
                            $("#grillaNP tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_R");
                            //$("#grillaNP tbody").find("tr[data-uid=" + uid + "]").addClass("fila-naranja");
                           
                        }

                    }

                }
            });
     }
        function buscarFiltroGrilla() {          
            var model = {
                fechaDesde: $('#cerFiltroFecDesde').val(),
                fechaHasta: $('#cerFiltroFecHasta').val(),
                IdContratista: document.getElementById("cerFiltroContratistas").value,
                Idproyecto: document.getElementById("cerFiltroProyectos").value,
                nroCertificado: $("#cerNroCertificado").val()
            }
            console.log(model);
            $.post("/Certificados/CertificadoGrillaFiltro", model).done(function (e) {
            if (!e.isError) {
                    CargoGrilla_Certificados(e.data2);
            }
        });
        }
        function VerCertificado(e) {
            var UsuarioLoggin = dataGlobal.data;
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            
            $.post("@Url.Action("_CertificadosAbm","Certificados")?IdCertificado=" + dataItem.id + "&Modo=" + 'Lectura',
                function (e) {
                    $('#ContenidoGeneralCertificado').html(e);


                });

        }
        function EliminarCertificado(e) {
            var UsuarioLoggin = dataGlobal.data;
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            //if (UsuarioLoggin != "Jefe de Obra" || UsuarioLoggin != "Coordinación de Obra Pucheta" || UsuarioLoggin != "Administración") {
            //    toastr.error("El unico usuario que puede editar certificados es el Jefe de Obra", { timeOut: 2000 });
            //    return;
            //}
            if (dataItem.estado != "Abierto") {
                toastr.error("No se puede eliminar un certificado que no este abierto.", { timeOut: 3000 });
                return;
            }
            $.post("/Certificados/EliminarCertificados/" + dataItem.id)
                .done(function (e) {
                    if (!e.isError) {
                        toastr.success('Se elimino correctamente el Certificado.', { timeOut: 2000 });
                        CargoGrilla_Certificados(e.data2);
                    }
                    else {
                        if(e.data3 != "")
                        {
                            toastr.error(e.data3, { timeOut: 2000 });
                        }else{
                            toastr.error('Hubo un problema al eliminar el Certificado.', { timeOut: 2000 });
                        }
                        
                    }
                });

        }
        function EditarCertificado(e) {
            var UsuarioLoggin = dataGlobal.data;

            /* Control de Usuarios */
                //if (UsuarioLoggin != 6 || UsuarioLoggin != 8 || UsuarioLoggin != 11) {
                //    toastr.error("Los usuarios que pueden ingresar son los que tengan Roles de Administracion, Jefe de Obra o Coordinador", { timeOut: 2000 });
                //    return;

                //}

            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            if (dataItem.estado == "Finalizado") {
                toastr.error("No se puede editar un certificado que tenga estado Finalizado", { timeOut: 3000 });
                return;}
            //if (UsuarioLoggin != "Jefe de Obra" || UsuarioLoggin != "Coordinación de Obra Pucheta" || UsuarioLoggin != "Administración") {
            //    toastr.error("El unico usuario que puede editar certificados es el Jefe de Obra", { timeOut: 2000 });
            //    return;
            //}
            $.post("@Url.Action("_CertificadosAbm","Certificados")?IdCertificado=" + dataItem.id + "&Modo=" + dataItem.estado,
                function (e) {
                    $('#ContenidoGeneralCertificado').html(e);


                });

        }
/*-----------------------END GRILLA------------------------*/



/*-------------------------FUNCIONES COMPARTIDAS--------------------------*/


        function cargarFiltrosFechas() {
            var FiltroFecDesde = document.getElementById('cerFiltroFecDesde');
            var FiltroFecHasta = document.getElementById('cerFiltroFecHasta');
            var fecActual = new Date();
            var mes = fecActual.getMonth() + 1;
            var fechaHasta = fecActual.getFullYear() + "-" + (mes < 10 ? ("0" + mes) : mes) + "-" + fecActual.getDate();
            fecActual.setMonth(fecActual.getMonth() - 2);
            mes = fecActual.getMonth() + 1;
            var fechaDesde = fecActual.getFullYear() + "-" + (mes < 10 ? ("0" + mes) : mes) + "-" + fecActual.getDate();
            FiltroFecDesde.value = fechaDesde;
            FiltroFecHasta.value = fechaHasta;
        }
/*-----------------------END FUNCIONES COMPARTIDAS------------------------*/

 


    </script>
}
