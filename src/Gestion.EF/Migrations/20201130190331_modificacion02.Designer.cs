// <auto-generated />
using System;
using Gestion.EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestion.EF.Migrations
{
    [DbContext(typeof(iotdbContext))]
    [Migration("20201130190331_modificacion02")]
    partial class modificacion02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gestion.EF.Models.Acciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Borrar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Editar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MenuDetalle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<bool>("OcultarZona1")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OcultarZona2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OcultarZona3")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OcultarZona4")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Acciones");
                });

            modelBuilder.Entity("Gestion.EF.Models.AccionesRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccionesID")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccionesID");

                    b.HasIndex("RolesId");

                    b.ToTable("AccionesRoles");
                });

            modelBuilder.Entity("Gestion.EF.Models.Contratistas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Dpto")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int?>("ParteDiarioId")
                        .HasColumnType("int");

                    b.Property<string>("Piso")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("ParteDiarioId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Contratistas");
                });

            modelBuilder.Entity("Gestion.EF.Models.Dispositivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detalle")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("Gestion.EF.Models.Incidentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Criticidad")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("GeneraEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IncidentesTipoId")
                        .HasColumnType("int");

                    b.Property<string>("ListaEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("ParteDiario_IncidentesId")
                        .HasColumnType("int");

                    b.Property<string>("RolResponsable")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TipoIncidenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentesTipoId");

                    b.HasIndex("ParteDiario_IncidentesId")
                        .IsUnique();

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("Gestion.EF.Models.IncidentesTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("IncidentesTipo");
                });

            modelBuilder.Entity("Gestion.EF.Models.Localidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ProvinciasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciasId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("Gestion.EF.Models.Menus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Activo")
                        .HasColumnType("tinyint(4)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdMenuPadre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Asig_Comentario")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("Asig_Contratista")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Contratista_Presentes")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Propios")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Propios_Presentes")
                        .HasColumnType("int");

                    b.Property<string>("Covid_Comentario")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("Covid_Contratista")
                        .HasColumnType("int");

                    b.Property<int>("Covid_Propioa")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("ParteDiario");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Avance")
                        .HasColumnType("float");

                    b.Property<string>("Comentarios")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Finalizados")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParteDiarioId")
                        .HasColumnType("int");

                    b.Property<int>("Planificacion_Proyecto_ActividadesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("ParteDiarioId");

                    b.HasIndex("Planificacion_Proyecto_ActividadesId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("ParteDiario_Actividades");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades_Contratista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("ContratistasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ParteDiario_ActividadesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratistasId");

                    b.HasIndex("ParteDiario_ActividadesId");

                    b.ToTable("ParteDiario_Actividades_Contratista");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades_Fotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ParteDiario_ActividadesId")
                        .HasColumnType("int");

                    b.Property<string>("URL_Foto")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ParteDiario_ActividadesId");

                    b.ToTable("ParteDiario_Actividades_Fotos");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Asig_Comentario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Asig_Contratista")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Contratista_Presentes")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Propios")
                        .HasColumnType("int");

                    b.Property<int>("Asig_Propios_Presentes")
                        .HasColumnType("int");

                    b.Property<int>("ContratistasId")
                        .HasColumnType("int");

                    b.Property<string>("Covid_Comentario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Covid_Contratista")
                        .HasColumnType("int");

                    b.Property<int>("Covid_Propioa")
                        .HasColumnType("int");

                    b.Property<int>("ParteDiarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratistasId");

                    b.HasIndex("ParteDiarioId");

                    b.ToTable("ParteDiario_Asistencia");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Contratista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ParteDiarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("ParteDiarioId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("ParteDiario_Contratista");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Incidentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IncidenteId")
                        .HasColumnType("int");

                    b.Property<int>("NoConformidadId")
                        .HasColumnType("int");

                    b.Property<int>("ParteDiarioId")
                        .HasColumnType("int");

                    b.Property<string>("SolicitadoPor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ParteDiarioId");

                    b.ToTable("ParteDiario_Incidentes");
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Sol_ObrasAdic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("Obra_Adicional")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ParteDiarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParteDiarioId");

                    b.ToTable("ParteDiario_Sol_ObrasAdic");
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Actividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripción")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("Planificacion_Actividades_RubroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Planificacion_Actividades_RubroId");

                    b.ToTable("Planificacion_Actividades");
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Actividades_Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Planificacion_Actividades_Rubro");
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Actividades_Tareas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("Planificacion_ActividadesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Planificacion_ActividadesId");

                    b.ToTable("Planificacion_Actividades_Tareas");
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Proyecto_Actividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Avance")
                        .HasColumnType("float");

                    b.Property<float>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("ContratistasId")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Est_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Est_Incio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Real_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Real_Incio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Ultima_Modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Finalizados")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Incidencia")
                        .HasColumnType("float");

                    b.Property<int>("Planificacion_ActividadesId")
                        .HasColumnType("int");

                    b.Property<int>("Planificacion_Actividades_RubroId")
                        .HasColumnType("int");

                    b.Property<int>("Proyecto_UbicacionesId")
                        .HasColumnType("int");

                    b.Property<bool>("ReTrabajo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("ContratistasId");

                    b.HasIndex("Planificacion_ActividadesId");

                    b.HasIndex("Planificacion_Actividades_RubroId")
                        .HasName("IX_Planificacion_Proyecto_Actividades_Planificacion_Actividade~1");

                    b.HasIndex("Proyecto_UbicacionesId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Planificacion_Proyecto_Actividades");
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Proyecto_Actividades_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Est_Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Fecha_Est_Incio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Planificacion_Proyecto_ActividadesId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Planificacion_Proyecto_ActividadesId");

                    b.ToTable("Planificacion_Proyecto_Actividades_Log");
                });

            modelBuilder.Entity("Gestion.EF.Models.Provincias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Gestion.EF.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("Gestion.EF.Models.Proyecto_Ubicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Proyecto_Ubicaciones");
                });

            modelBuilder.Entity("Gestion.EF.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gestion.EF.Models.RolesUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("Gestion.EF.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Activo")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Avatar")
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Grupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("NUsuario")
                        .HasColumnName("nUsuario")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Rsid")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Rsn")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("'U'");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Gestion.EF.Models.UsuariosDireccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Altura")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Barrio")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CP")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Calle")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Dpto")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("LocalidadesId")
                        .HasColumnType("int");

                    b.Property<string>("Piso")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("ProvinciasId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuariosDireccion");
                });

            modelBuilder.Entity("Gestion.EF.Models.UsuariosDispositivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DispositivosId")
                        .HasColumnType("int");

                    b.Property<string>("Empresa")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("FINGERTMP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IMEI")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("ImageBase64")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("OS")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuariosDispositivo");
                });

            modelBuilder.Entity("Gestion.EF.Models.UsuariosLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("AccionesId")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnName("detalle")
                        .HasColumnType("text")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUsuarios")
                        .HasColumnType("int(11)");

                    b.Property<string>("Ip")
                        .HasColumnName("IP")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("usuarios_log");
                });

            modelBuilder.Entity("Gestion.EF.Models.AccionesRoles", b =>
                {
                    b.HasOne("Gestion.EF.Models.Acciones", "Acciones")
                        .WithMany()
                        .HasForeignKey("AccionesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Roles", null)
                        .WithMany("Acciones")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Contratistas", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario", null)
                        .WithMany("Contratistas")
                        .HasForeignKey("ParteDiarioId");

                    b.HasOne("Gestion.EF.Models.Usuarios", null)
                        .WithMany("Contratistas")
                        .HasForeignKey("UsuariosId");
                });

            modelBuilder.Entity("Gestion.EF.Models.Incidentes", b =>
                {
                    b.HasOne("Gestion.EF.Models.IncidentesTipo", "IncidentesTipo")
                        .WithMany()
                        .HasForeignKey("IncidentesTipoId");

                    b.HasOne("Gestion.EF.Models.ParteDiario_Incidentes", null)
                        .WithOne("Incidentes")
                        .HasForeignKey("Gestion.EF.Models.Incidentes", "ParteDiario_IncidentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Localidades", b =>
                {
                    b.HasOne("Gestion.EF.Models.Provincias", null)
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario", b =>
                {
                    b.HasOne("Gestion.EF.Models.Proyecto", "Proyecto")
                        .WithMany("ParteDiario")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario", "ParteDiario")
                        .WithMany("ParteDiario_Actividades")
                        .HasForeignKey("ParteDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Planificacion_Proyecto_Actividades", "Planificacion_Proyecto_Actividades")
                        .WithMany()
                        .HasForeignKey("Planificacion_Proyecto_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades_Contratista", b =>
                {
                    b.HasOne("Gestion.EF.Models.Contratistas", "Contratistas")
                        .WithMany()
                        .HasForeignKey("ContratistasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.ParteDiario_Actividades", "ParteDiario_Actividades")
                        .WithMany("ParteDiario_Actividades_Contratista")
                        .HasForeignKey("ParteDiario_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Actividades_Fotos", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario_Actividades", "ParteDiario_Actividades")
                        .WithMany("ParteDiario_Actividades_Fotos")
                        .HasForeignKey("ParteDiario_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Asistencia", b =>
                {
                    b.HasOne("Gestion.EF.Models.Contratistas", "Contratistas")
                        .WithMany()
                        .HasForeignKey("ContratistasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.ParteDiario", null)
                        .WithMany("ParteDiario_Asistencia")
                        .HasForeignKey("ParteDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Contratista", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario", "ParteDiario")
                        .WithMany("ParteDiario_Contratista")
                        .HasForeignKey("ParteDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Incidentes", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario", null)
                        .WithMany("ParteDiario_Incidentes")
                        .HasForeignKey("ParteDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.ParteDiario_Sol_ObrasAdic", b =>
                {
                    b.HasOne("Gestion.EF.Models.ParteDiario", "ParteDiario")
                        .WithMany("ParteDiario_Sol_ObrasAdic")
                        .HasForeignKey("ParteDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Actividades", b =>
                {
                    b.HasOne("Gestion.EF.Models.Planificacion_Actividades_Rubro", "Planificacion_Actividades_Rubro")
                        .WithMany()
                        .HasForeignKey("Planificacion_Actividades_RubroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Actividades_Tareas", b =>
                {
                    b.HasOne("Gestion.EF.Models.Planificacion_Actividades", "Planificacion_Actividades")
                        .WithMany("Planificacion_Actividades_Tareas")
                        .HasForeignKey("Planificacion_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Proyecto_Actividades", b =>
                {
                    b.HasOne("Gestion.EF.Models.Contratistas", "Contratistas")
                        .WithMany("Planificacion_Proyecto_Actividades")
                        .HasForeignKey("ContratistasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Planificacion_Actividades", "Planificacion_Actividades")
                        .WithMany("Planificacion_Proyecto_Actividades")
                        .HasForeignKey("Planificacion_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Planificacion_Actividades_Rubro", "Planificacion_Actividades_Rubro")
                        .WithMany()
                        .HasForeignKey("Planificacion_Actividades_RubroId")
                        .HasConstraintName("FK_Planificacion_Proyecto_Actividades_Planificacion_Actividade~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Proyecto_Ubicaciones", "Proyecto_Ubicaciones")
                        .WithMany("Planificacion_Contratistas_Actividades")
                        .HasForeignKey("Proyecto_UbicacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Planificacion_Proyecto_Actividades_Log", b =>
                {
                    b.HasOne("Gestion.EF.Models.Planificacion_Proyecto_Actividades", "Planificacion_Contratistas_Actividades")
                        .WithMany("Planificacion_Proyecto_Actividades_Log")
                        .HasForeignKey("Planificacion_Proyecto_ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Proyecto", b =>
                {
                    b.HasOne("Gestion.EF.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.Proyecto_Ubicaciones", b =>
                {
                    b.HasOne("Gestion.EF.Models.Proyecto", "Proyecto")
                        .WithMany("Contratistas_Ubicaciones")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.RolesUsuarios", b =>
                {
                    b.HasOne("Gestion.EF.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.EF.Models.Usuarios", "Usuarios")
                        .WithMany("Roles")
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.UsuariosDireccion", b =>
                {
                    b.HasOne("Gestion.EF.Models.Usuarios", null)
                        .WithMany("UsuariosDireccion")
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion.EF.Models.UsuariosDispositivo", b =>
                {
                    b.HasOne("Gestion.EF.Models.Usuarios", null)
                        .WithMany("UsuariosDispositivo")
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
