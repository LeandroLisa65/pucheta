#pragma checksum "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/Estadisticas/_EstadisticasCertificados.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c079cbebd6210ed6ac87509ac3dc49a297f603fc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Estadisticas__EstadisticasCertificados), @"mvc.1.0.view", @"/Views/Estadisticas/_EstadisticasCertificados.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.ViewModels.Input;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c079cbebd6210ed6ac87509ac3dc49a297f603fc", @"/Views/Estadisticas/_EstadisticasCertificados.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3bee31758dd1cbb7e600e265aed2cb74227e9428", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Estadisticas__EstadisticasCertificados : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<object>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""card"">
    <div class=""card-header"">
        <h3 class=""card-title"">
            <strong>Certificados - % de incidencia de Trabajos Adicionales sobre el Proyecto y Total Empresa</strong>
        </h3>
    </div>
    <div class=""card-body"">
        <div class=""form-group"">
            <div class=""row"" style=""margin-bottom:0.5em"">
                <div class=""col-md-4"">
                    <select id=""slcProyectos_EstCert"" class=""form-control""></select>
                </div>
                <div class=""col-md-2"">
                    <input id=""inpFecDesde_EstCert""
                           type=""date""
                           class=""form-control"" />
                </div>
                <div class=""col-md-2"">
                    <input id=""inpFecHasta_EstCert""
                           type=""date""
                           class=""form-control"" />
                </div>
                <div class=""col-md-4"">
                    <label id=""lblPeriodo"" style=""font-size:1.");
            WriteLiteral(@"2em""></label>
                    <button type=""button"" class=""btn btn-default float-right""
                            onclick=""recargar_EstCert()"">
                        <i class=""fas fa-search""></i>
                    </button>
                </div>
            </div>
            <div class=""row"">
                <div id=""divTotales_EstCert"" class=""col-md-12""></div>
                <div id=""divAdicionales_EstCert"" class=""col-md-6""></div>
                <div id=""divGrafico_EstCert"" class=""col-md-6""></div>
            </div>
        </div>
    </div>
</div>

<script>

        var data = JSON.parse('");
#nullable restore
#line 44 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/Estadisticas/_EstadisticasCertificados.cshtml"
                          Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');
        var oEstCert = data.oEstCert;
        var oEstCert_Todos = data.oEstCert_Todos;
        cargarSelect(""slcProyectos_EstCert"", data.lProyectos, 'id', 'nombre');
        inpFecDesde_EstCert.value = data.fecDesde;
        inpFecHasta_EstCert.value = data.fecHasta;
        cargar_EstCert();

        function cargar_EstCert() {
            cargarTotales_EstCert();
            cargarRankingAdicionales_EstCert();
            cargarGraficoBarras_EstCert();
        }

        function cargarTotales_EstCert() {
            lblPeriodo.innerHTML = ""Periodo: "" + oEstCert.Periodo;
            let table = ""<table class='table table-hover table-striped'><tbody>"";
            table += ""<tr>"";
            table += ""<th colspan='3'>Proyecto: "" + oEstCert.ProyectoNombre + ""</th>"";
            table += ""<th></th>"";
            table += ""<th colspan='2'>Pucheta Construcciones</th>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th></th>"";
            table += """);
            WriteLiteral(@"<th style='text-align: right'>Cantidad</th>"";
            table += ""<th style='text-align: right'>Monto</th>"";
            table += ""<th></th>"";
            table += ""<th style='text-align: right'>Cantidad</th>"";
            table += ""<th style='text-align: right'>Monto</th>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>Total Act. Plan.</th>"";
            table += ""<td style='text-align: right'>"" + oEstCert.TotalActividadesPlanificadas + ""</td>"";
            table += ""<td style='text-align: right'>$"" + getNumeroFormateado(oEstCert.ImporteTotalActPlanificadas) + ""</td>"";
            table += ""<th></th>"";
            table += ""<td style='text-align: right'>"" + oEstCert_Todos.TotalActividadesPlanificadas + ""</td>"";
            table += ""<td style='text-align: right'>$"" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActPlanificadas) + ""</td>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>Total Act. Adic.</th>"";
    ");
            WriteLiteral(@"        table += ""<td style='text-align: right'>"" + oEstCert.TotalActividadesAdicionales + ""</td>"";
            table += ""<td style='text-align: right'>$"" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales) + ""</td>"";
            table += ""<th></th>"";
            table += ""<td style='text-align: right'>"" + oEstCert_Todos.TotalActividadesAdicionales+ ""</td>"";
            table += ""<td style='text-align: right'>$"" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActAdicionales) + ""</td>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>Totales</th>"";
            table += ""<th style='text-align: right'>"" + (oEstCert.TotalActividadesPlanificadas + oEstCert.TotalActividadesAdicionales) + ""</th>"";
            table += ""<th style='text-align: right'>$"" + getNumeroFormateado(oEstCert.ImporteTotalActPlanificadas + oEstCert.ImporteTotalActAdicionales) + ""</th>"";
            table += ""<th></th>"";
            table += ""<th style='text-align: right'>"" + (oEstCert_Todo");
            WriteLiteral(@"s.TotalActividadesPlanificadas + oEstCert_Todos.TotalActividadesAdicionales) + ""</th>"";
            table += ""<th style='text-align: right'>$"" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActPlanificadas + oEstCert_Todos.ImporteTotalActAdicionales) + ""</th>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>% Adicionales del Proyecto</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert.TotalActividadesAdicionales * 100 / (oEstCert.TotalActividadesPlanificadas + oEstCert.TotalActividadesAdicionales)) + ""%</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales * 100 / (oEstCert.ImporteTotalActPlanificadas + oEstCert.ImporteTotalActAdicionales))  + ""%</th>"";
            table += ""<th style='text-align: right'>% Adicionales Total Empresa</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert_Todos.TotalActividadesAdicionales * 1");
            WriteLiteral(@"00 / (oEstCert_Todos.TotalActividadesPlanificadas + oEstCert_Todos.TotalActividadesAdicionales)) + ""%</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActAdicionales * 100 / (oEstCert_Todos.ImporteTotalActPlanificadas + oEstCert_Todos.ImporteTotalActAdicionales)) + ""%</th>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>% Adicionales Proyecto / Empresa</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert.TotalActividadesAdicionales * 100 / oEstCert_Todos.TotalActividadesAdicionales) + ""%</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales * 100 / oEstCert_Todos.ImporteTotalActAdicionales) + ""%</th>"";
            table += ""<th></th>"";
            table += ""<th></th>"";
            table += ""<th></th>"";
            table += ""</tr>"";
            table += ""</tbody><table>"";
            divTotales_Est");
            WriteLiteral(@"Cert.innerHTML = table;
        }

        function cargarRankingAdicionales_EstCert() {
            let table = ""<table class='table table-hover table-striped'><tbody>"";
            table += ""<tr>"";
            table += ""<th colspan='3'>Ranking Adicionales</th>"";
            table += ""</tr>"";
            table += ""<tr>"";
            table += ""<th>#</th>"";
            table += ""<th>Actividad</th>"";
            table += ""<th style='text-align: right'>Monto</th>"";
            table += ""</tr>"";
            let contador = 1;
            let acumulador = 0;
            oEstCert.lAdicionales.forEach(a => {
                table += ""<tr>"";
                table += ""<td>"" + contador + ""</td>"";
                table += ""<td>"" + a.Actividad + ""</td>"";
                table += ""<td style='text-align: right'>$"" + getNumeroFormateado(a.Importe) + ""</td>"";
                table += ""</tr>"";
                acumulador += a.Importe;
                contador++;
            });
            table += ""<tr>");
            WriteLiteral(@""";
            table += ""<th colspan='2' style='text-align: right'>TOTAL</th>"";
            table += ""<th style='text-align: right'>"" + getNumeroFormateado(acumulador) + ""</th>"";
            table += ""</tr>"";
            table += ""</tbody><table>"";
            divAdicionales_EstCert.innerHTML = table;
        }

        function cargarGraficoBarras_EstCert() {
            let series = [];
            oEstCert.lContratistas.forEach(c => {
                series.push({ name: c.Contratista, data: [c.Importe] });
            });
            $(""#divGrafico_EstCert"").kendoChart({
                title: {
                    text: ""Ranking Contratistas""
                },
                legend: {
                    position: ""top""
                },
                seriesDefaults: {
                    type: ""column""
                },
                series: series,
                valueAxis: {
                    labels: {
                        format: ""0.00""
                    },
");
            WriteLiteral(@"                    line: {
                        visible: false
                    },
                    axisCrossingValue: 0
                },
                tooltip: {
                    visible: true,
                    format: ""0.00"",
                    template: ""#= series.name #: #= value #""
                }
            });
        }

        function recargar_EstCert() {
            const oFiltro = {};
            oFiltro.proyectoId = slcProyectos_EstCert.value;
            oFiltro.fecDesde = inpFecDesde_EstCert.value;
            oFiltro.fecHasta = inpFecHasta_EstCert.value;
            $.post(""/Estadisticas/RecargarEstCertificados"", oFiltro)
                .done(
                    function (res) {
                        if (res.isError) {
                            toastr.error(res.data, { timeOut: 2000 });
                        } else {
                            oEstCert = res.oEstCert;
                            oEstCert_Todos = res.oEstCert_Todos;
   ");
            WriteLiteral("                         cargar_EstCert();\r\n                        }\r\n                    }\r\n                );\r\n        }\r\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<object> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
