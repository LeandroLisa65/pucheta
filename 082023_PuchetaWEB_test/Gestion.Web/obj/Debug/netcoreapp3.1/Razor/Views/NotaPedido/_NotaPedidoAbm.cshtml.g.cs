#pragma checksum "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eca81a11550eef28229965501447d2b3395d564f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_NotaPedido__NotaPedidoAbm), @"mvc.1.0.view", @"/Views/NotaPedido/_NotaPedidoAbm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.ViewModels.Input;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eca81a11550eef28229965501447d2b3395d564f", @"/Views/NotaPedido/_NotaPedidoAbm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3bee31758dd1cbb7e600e265aed2cb74227e9428", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_NotaPedido__NotaPedidoAbm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Gestion.EF.ItemNotaPedido>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "date", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "partydate", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("maxlength", new global::Microsoft.AspNetCore.Html.HtmlString("100"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<div class=\"row\" id=\"pnlCabecera\">\r\n    <div class=\"col-lg-12 \">\r\n        <div class=\"row\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "eca81a11550eef28229965501447d2b3395d564f5066", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 6 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.Id);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            <div class=""col-md-4"">
                <div class=""form-group"">
                    <label class=""control-label"">Proyecto</label>
                    <input id=""ddlProyectos_Np"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    <label class=""control-label"">Contratista</label>
                    <input id=""ddlContratistas""/>
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""form-group"">
                    <label class=""control-label"">Fecha Nota Pedido</label>
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eca81a11550eef28229965501447d2b3395d564f7376", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 22 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.oNP.Fecha_Creacion);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Name = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"form-group  myDIV\">\r\n                    <label>Nro Nota Pedido:</label>\r\n\r\n                         ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "eca81a11550eef28229965501447d2b3395d564f9578", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#nullable restore
#line 31 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.oNP.NroNP);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
     
                </div>
                <div class=""hide"">El Nro de Pedido se Genera Automaticamente.</div>
            </div>
            <div class=""col-md-8"">
                <div class=""form-group"">
                    <label>Comentario:</label>
                    <div class=""col-md-12"">");
#nullable restore
#line 39 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
                                      Write(Html.TextAreaFor(model => model.oNP.Comentario, new { @cols = "80", @rows = "3" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-md-3"">
                <div class=""form-group"">
                    <label class=""control-label"">Indice</label>
                    <input id=""ddlConten_IndiceAjuste"" />
                </div>
            </div>
            <div class=""col-md-2"">
                <div class=""form-group"">
                    <label class=""control-label"">Presenta Poliza</label>
                    <input id=""oNP_PresentaPoliza"" />
                </div>
            </div>
            <div class=""col-md-4"">
                <div id=""GrupoDescripcionPoliza"">
                    <div class=""form-group"">
                        <label>Descripcion Poliza:</label>
                        <input id=""oNP_ComentarioPoliza"" class=""form-control"" />
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-md-2"">
      ");
            WriteLiteral(@"          <button class=""btn-graba"" id=""btnGrabarCabecera"" type=""button"" onclick=""GrabarNotaPedido()""><i class=""fas fa-check""></i> Grabar </button>
            </div>
            <div class=""col-md-2"">
                <button class=""btn-cerrar"" id=""btnCancelarCabecera"" type=""button"" data-dismiss=""modal""><i class=""far fa-times-circle""></i> Cerrar</button>
            </div>
            <div class=""col-md-8""></div>
        </div>
    </div>
</div>
<br />
<hr />
<div class=""row"" id=""pnlDetalle"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""form-group"">
                <label class=""control-label"">Detalle de la nota de pedido</label>
            </div>
        </div>
    </div>
    <div class=""col-lg-12 "">
        <div class=""row"">
            <div id=""GrillaKendoDetalle""></div>
        </div>
        <div class=""row"">
            <br />
            <br />
        </div>
        <div class=""row"">
            <div class=""col-md-4"">
                <div ");
            WriteLiteral("class=\"form-group\">\r\n                    <label class=\"control-label\">Ubicacion</label>\r\n");
            WriteLiteral("                    <input id=\"ddlUbicaciones\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Actividad</label>\r\n");
            WriteLiteral("                    <input id=\"ddlActividades\" />\r\n                </div>\r\n            </div>\r\n");
            WriteLiteral("        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Planificado:</label>\r\n");
            WriteLiteral("                    <input id=\"txtPlanificado\" type=\"number\"");
            BeginWriteAttribute("title", " title=\"", 4810, "\"", 4818, 0);
            EndWriteAttribute();
            WriteLiteral(" value=\"0\" min=\"0\" max=\"99999999\" step=\"1\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Precio Ref.:</label>\r\n");
            WriteLiteral("                    <input id=\"txtPrecio\" type=\"number\"");
            BeginWriteAttribute("title", " title=\"", 5172, "\"", 5180, 0);
            EndWriteAttribute();
            WriteLiteral(" value=\"0\" min=\"0\" max=\"99999999\" step=\"1\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Asignado:</label>\r\n");
            WriteLiteral("                    <input id=\"txtAsignado\" type=\"number\"");
            BeginWriteAttribute("title", " title=\"", 5535, "\"", 5543, 0);
            EndWriteAttribute();
            WriteLiteral(" value=\"0\" min=\"0\" max=\"99999999\" step=\"1\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label>A Asignar:</label>\r\n");
            WriteLiteral("                    <input id=\"txtAAsignar\" type=\"number\"");
            BeginWriteAttribute("title", " title=\"", 5904, "\"", 5912, 0);
            EndWriteAttribute();
            WriteLiteral("  min=\"0\" max=\"99999999\" step=\"1\" />\r\n                   \r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Precio:</label>\r\n");
            WriteLiteral("                    <input id=\"txtAPrecio\" type=\"number\"");
            BeginWriteAttribute("title", " title=\"", 6280, "\"", 6288, 0);
            EndWriteAttribute();
            WriteLiteral("  min=\"0\" max=\"99999999\" step=\"1\" />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <br />\r\n            <br />\r\n");
            WriteLiteral(@"            <input type=""hidden"" id=""IdRegistro"" value=""0""/>
            <input type=""hidden"" id=""IdActividadesCombo"" value=""0"" /> 
        </div>
        <div class=""row"">
            <div class=""col-md-2"">
                <div class=""btn-graba"" type=""button"" onclick=""GrabarNotaPedido_Detalle()""><i class=""fas fa-check""></i> Grabar</div>
            </div>
            
            <div class=""col-md-2"">
                <div class=""btn-cerrar"" type=""button"" data-dismiss=""modal""><i class=""far fa-times-circle""></i> Cerrar</div>
            </div>
            <div class=""col-md-8""></div>
        </div>
    </div>
</div>
<style>
    .hide {
        display: none;
    }

    .form-group.myDIV:hover + .hide {
        display: block;
        color: red;
    }
</style>

<script>

    var dataGlobal = JSON.parse('");
#nullable restore
#line 188 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
                            Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');

    //***************************************************************************************************************** */
    var dataPoliza = [
        {
        id: '1',
        nombre: 'Tiene Poliza'

    },
    {
        id: '0',
            nombre: 'No Tiene Poliza'
    }
    ];

   

      if (dataGlobal.idProyecto != null) {
            if (dataGlobal.oNP != null) {
                    
               cargarIndice(dataGlobal.oNP.idIndiceAjuste);
                cargaPoliza(BooleanToString(dataGlobal.oNP.presentaPoliza));
            cargaProyectos(dataGlobal.lstProyectos);

                    var hol= $('#oNP_PresentaPoliza').data(""kendoDropDownList"");
                     var hol2= $('#ddlConten_IndiceAjuste').data(""kendoDropDownList"");
                    var hol3 = $('#ddlProyectos_Np').data(""kendoDropDownList"");

                     hol.enable(false);
                     hol2.enable(false);
                     hol3.enable(false);

                    $('#oN");
            WriteLiteral(@"P_PresentaPoliza').attr('disabled', true);
                    $('#ddlConten_IndiceAjuste').attr('disabled', true);
                    $('#ddlProyectos_Np').attr('disabled', true);

            MostrarDescripcionPoliza();

             }

      }else{
        cargaPoliza(0);
        cargarIndice(0);
        }


    if (dataGlobal.oNP != null) { $('#oNP_ComentarioPoliza').val(dataGlobal.oNP.comentarioPoliza); }
    function cargaPoliza(valor=0) {
        if (dataGlobal.oNP != null) {
        $(""#oNP_PresentaPoliza"").kendoDropDownList({
                       filter: ""contains"",
                        dataTextField: ""nombre"",
                        dataValueField: ""id"",
                        optionLabel: ""Elegir Poliza"",
                         change: MostrarDescripcionPoliza,
                       
                        dataSource: dataPoliza,
                          value:valor,
                        height: 400
                    });
        }else{
            $(""#");
            WriteLiteral(@"oNP_PresentaPoliza"").kendoDropDownList({
                filter: ""contains"",
                        dataTextField: ""nombre"",
                        dataValueField: ""id"",
                        optionLabel: ""Elegir Poliza"",
                         change: MostrarDescripcionPoliza,
                        dataSource: dataPoliza,
                        height: 400
                    });
        }
    }

    function cargarIndice(valor=0) {
        var dataIndice = [];
        dataIndice = dataGlobal.lstIndices;
        if (dataGlobal.oNP != null) {
                    $(""#ddlConten_IndiceAjuste"").kendoDropDownList({
                filter: ""contains"",
                        dataTextField: ""nombre"",
                        dataValueField: ""id"",
                        optionLabel: ""Elegir Indice"",
                        
                        dataSource: dataIndice,
                value: valor,
                        height: 400
                    });
        }else{
       ");
            WriteLiteral(@"  $(""#ddlConten_IndiceAjuste"").kendoDropDownList({
                        filter: ""contains"",
                        dataTextField: ""nombre"",
                        dataValueField: ""id"",
                        optionLabel: ""Elegir Indice"",
                        dataSource: dataIndice,
                        height: 400
                    });
        
        }

    }
    $(""#GrupoDescripcionPoliza"").hide();

    function MostrarDescripcionPoliza(){
    
        if( $(""#oNP_PresentaPoliza"").data('kendoDropDownList').value() == '1')
        {
               $(""#GrupoDescripcionPoliza"").show();
        }else{
              $(""#GrupoDescripcionPoliza"").hide();

        }
    }



    //************************************************************************************************************************ */
    $(""#txtPlanificado"").kendoNumericTextBox({
        value: 0,
    });
    //$(""#txtAAsignar"").kendoNumericTextBox({
    //    value: 0,
    //});
    $(""#txtAAsigna");
            WriteLiteral(@"r"").kendoNumericTextBox({
        decimals: 2
    });

    $(""#txtAPrecio"").kendoNumericTextBox({
        format: ""c"",
        decimals: 2
    });
    $(""#txtPrecio"").kendoNumericTextBox({
        format: ""c"",
        decimals: 2,
        enabled: false,
    });
    $(""#txtAsignado"").kendoNumericTextBox({
        value: 0,
    });

    inicializoPantalla();

    var IdRegistroGrilla=0;

    function inicializoPantalla() {
        cargaProyectos(dataGlobal.lstProyectos);
           
        if (dataGlobal.idProyecto == ""0"") {
            var mFecha = new Date();
            inicializoFechas(mFecha , ""dtpFechaNotaPedido"");
        }
        //2-Inicializo el detalle
        
        inicializoDetalle();
    }

    function inicializoFechas(pFecha, pControl) {
        //Cargo la Fecha
        var d = pFecha;
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var year = d.getFullYear();

        if (month < 10)
            month = '0' + month;
  ");
            WriteLiteral(@"      if (day < 10)
            day = '0' + day;
        var mFechaHoy = year + ""-"" + month + ""-"" + day;

        if (pControl == ""dtpFechaNotaPedido"") {
            var dateControl = document.querySelector('input[id=""oNP_Fecha_Creacion""]');
            dateControl.value = mFechaHoy;
        }
    }

    function cargaProyectos(data) {
        $(""#ddlProyectos_Np"").kendoDropDownList({
            filter: ""contains"",
            dataTextField: ""nombre"",
            dataValueField: ""id"",
            optionLabel: ""Elegir Proyecto"",
            change: ddlProyectos_onChange,
            dataSource: data,
            value: dataGlobal.idProyecto,
            height: 400
        });
        
        if (dataGlobal.idProyecto != null) {
            if (dataGlobal.oNP != null) {

                cargaContratistas(dataGlobal.idProyecto, dataGlobal.oNP.idContratista);
               
                cargarIndice(dataGlobal.oNP.idIndiceAjuste);
                cargaPoliza(BooleanToString(data");
            WriteLiteral(@"Global.oNP.presentaPoliza));
                 MostrarDescripcionPoliza()


                /*
                $('#ddlConten_IndiceAjuste').val(dataGlobal.idIndiceAjuste);
                $('#oNP_PresentaPoliza').val(dataGlobal.presentaPoliza);
                */

              
                
            }
            else {
                
                cargaContratistas(dataGlobal.idProyecto, 0);
                cargarIndice(0);
                cargaPoliza(0);
            };
        }
    }

    function ddlProyectos_onChange() {
        idProyecto = $('#ddlProyectos_Np').val();
        cargaContratistas(idProyecto, 0);
        $('#ddlContratistas').attr('disabled', false);
    };

    function cargaContratistas(idProyecto, idContratista) {
        if (idProyecto == ""0"") {
            idProyecto = $('#ddlProyectos_Np').val();
        }
        
        $.post(""/NotaPedido/GetContratistaProyecto"",
            { IdProyecto: idProyecto })
            .done(function (e) {");
            WriteLiteral(@"
                if (!e.isError) {
                    data = e.data;
                    /*CARGO COMBO*/
                    $(document).ready(function () {
                        $(""#ddlContratistas"").kendoDropDownList({
                            filter: ""contains"",
                            optionLabel: ""Elegir Contratista"",
                            dataTextField: ""sContratistas"",
                            dataValueField: ""contratistaId"",
                            dataSource: data,
                            value: idContratista,
                            height: 400
                        });
                    });
                } else {
                    toastr.error(e.mensaje, { timeOut: 2000 });
                }
            });
    }

    function GrabarNotaPedido() {
        var selectedValueProyecto = $('#ddlProyectos_Np').val();
        var selectedValueContratista = $('#ddlContratistas').val();
        var IdIndiceAjuste = $(""#ddlConten_IndiceAjuste"").va");
            WriteLiteral(@"l();
        var ComentarioPoliza= $('#oNP_ComentarioPoliza').val();
        var PresentaPoliza = $('#oNP_PresentaPoliza').val();
        //Validar



        var mRegOK = true;

        if (selectedValueProyecto == ""0"") {
            toastr.error(""Debe seleccionar un proyecto"", { timeOut: 2000 });
            mRegOK = false;
        }
        if (selectedValueContratista == ""0"") {
            toastr.error(""Debe seleccionar un contratista"", { timeOut: 2000 });
            mRegOK = false;
        }
        
        if (PresentaPoliza != '0' && PresentaPoliza != '1') {
            toastr.error(""Debe seleccionar si presenta o no Poliza"", { timeOut: 2000 });
            mRegOK = false;
        }
        if (PresentaPoliza == '1') {
            if (ComentarioPoliza == """") {
                toastr.error(""Debe ingresar la Descripcion de la Poliza"", { timeOut: 2000 });
                mRegOK = false;
             }
        }
         if (IdIndiceAjuste == ""0"") {
            toastr.error(""");
            WriteLiteral(@"Debe seleccionar un Indice"", { timeOut: 2000 });
            mRegOK = false;
        }
        

        if (mRegOK == true) {
            var model = {
                Id: $('#Id').val(),
                IdProyecto: selectedValueProyecto,
                IdContratista: selectedValueContratista,
                NroNP: $('#oNP_NroNP').val(),
                Comentario: $('#oNP_Comentario').val(),
                Fecha_Creacion: $('#oNP_Fecha_Creacion').val(),
                PresentaPoliza: stringToBoolean(PresentaPoliza),
                ComentarioPoliza: ComentarioPoliza,
                IdIndiceAjuste: IdIndiceAjuste
            };
            $.post(""/NotaPedido/NotaPedidoGraba"", model).done(function (e) {

                if (!e.isError) {
                    toastr.success(e.data, { timeOut: 2000 });
                    $('#Id').val(e.data1);
                    var NroNotaPedido = (e.data2).toString();
                     $('#oNP_NroNP').val(NroNotaPedido);
                    i");
            WriteLiteral(@"nicializoDetalle();
                } else {
                    toastr.error(e.data, { timeOut: 2000 });
                }
            });

        }

    }

    function stringToBoolean(str) {
        switch (str.toLowerCase()) {
            case ""true"":
            case ""yes"":
            case ""1"":
                return true;

            case ""false"":
            case ""no"":
            case ""0"":
                return false;

            default:
                return undefined;
        }
    }

    function BooleanToString(str){
    switch (str) {
        case true:
            return '1';

        case false:
            return '0';

        default:
            return undefined;
    }
        }

    function HabilitaCabecera(pHabilita) {
        if (pHabilita == ""false"") {

            $('#ddlProyectos_Np').attr('disabled', true);
            $('#ddlContratistas').attr('disabled', true);
            $('#oNP_NroNP').attr('disabled', true);
            $('#");
            WriteLiteral(@"oNP_Comentario').attr('disabled', true);
            $('#oNP_Fecha_Creacion').attr('disabled', true);
            $(""#btnGrabarCabecera"").kendoButton({
                enable: false
            });
            $('#oNP_PresentaPoliza').attr('disabled', true);
            $('#ddlConten_IndiceAjuste').attr('disabled', true);
            $('#oNP_ComentarioPoliza').attr('disabled', true);

            var hol = $('#oNP_PresentaPoliza').data(""kendoDropDownList"");
            var hol2 = $('#ddlConten_IndiceAjuste').data(""kendoDropDownList"");
            var hol3 = $('#ddlProyectos_Np').data(""kendoDropDownList"");

            hol.enable(false);
            hol2.enable(false);
            hol3.enable(false);

            $('#oNP_PresentaPoliza').attr('disabled', true);
            $('#ddlConten_IndiceAjuste').attr('disabled', true);
            $('#ddlProyectos_Np').attr('disabled', true);

        }
        else {
            $('#ddlProyectos_Np').attr('disabled', false);
            $('#ddlCo");
            WriteLiteral(@"ntratistas').attr('disabled', false);
            $('#oNP_NroNP').attr('disabled', true);
            $('#oNP_Comentario').attr('disabled', false);
            $('#oNP_Fecha_Creacion').attr('disabled', false);
            $(""#btnGrabarCabecera"").kendoButton({
                enable: true
            });
             $('#oNP_PresentaPoliza').attr('disabled', false);
            $('#ddlConten_IndiceAjuste').attr('disabled', false);
            $('#oNP_ComentarioPoliza').attr('disabled', false);
        }
        
    }

    /// *****************************************************************************************************************************************************************************************
    /// *************************************
    /// * SECCION DETALLE DE NOTA DE PEDIDO *
    /// *************************************



    function inicializoDetalle() {
        LimpiarDetalle();
        var mIdProyecto = $('#ddlProyectos_Np').val();
        if (mIdProyecto !");
            WriteLiteral(@"= ""0"" && mIdProyecto != """") {

            $(""#pnlDetalle"").show();
            HabilitaCabecera(""false"");
            if (dataGlobal.lstNP_det != null) {
                if (dataGlobal.lstNP_det.length > 0) {
                    CargoDatosEnGrillaDetalle(dataGlobal.lstNP_det);
                }
            }
           
        }
        else {
            $(""#pnlDetalle"").hide();
            HabilitaCabecera(""true"");
        }

    }
  



    //*C-R-U-D*/
    function GrabarNotaPedido_Detalle() {
       //Controlo el Estado de la Nota de Pedido
       if( dataGlobal.oNP != null){
            if (dataGlobal.oNP.estado == ""Finalizado"" ) {
                toastr.error(""No se puede editar una nota de pedido que teng el estado Finalizado"", { timeOut: 3000 });
               return;
                }
       }

        var selectedValueActividades = $(""#ddlActividades"").val();

        var mRegOK = true;
        
        if (selectedValueActividades == ""0"") {
            toastr");
            WriteLiteral(@".error(""Debe seleccionar una actividad"", { timeOut: 2000 });
            mRegOK = false;
        }
        if ($('#txtAAsignar').val() == """") {
            toastr.error(""Debe ingresar una cantidad a asignar"", { timeOut: 2000 });
            mRegOK = false;
        }
          if(IdRegistroGrilla==0){
            if ($('#txtAAsignar').val() == """") {
                toastr.error(""Debe ingresar una cantidad a asignar"", { timeOut: 2000 });
                mRegOK = false;
            }
            if ($('#txtAPrecio').val() == ""0"") {
                toastr.error(""Debe ingresar un precio para la asignacion"", { timeOut: 2000 });
                mRegOK = false;
            }
          }
          else{
            if ($(""#txtAAsignar"").data(""kendoNumericTextBox"").value() == ""0"") {
            toastr.error(""Debe ingresar una cantidad a asignar"", { timeOut: 2000 });
            mRegOK = false;
            }
            if ($(""#txtAPrecio"").data(""kendoNumericTextBox"").value() == ""0"") {
           ");
            WriteLiteral(@"     toastr.error(""Debe ingresar un precio para la asignacion"", { timeOut: 2000 });
                mRegOK = false;
            }
          }
        
        if (mRegOK == true) {
            if($('#IdRegistro').val()==0){
                var model = {

                    IdNotaPedido: $('#Id').val(),
                    IdPPA: selectedValueActividades,
                    _Ori_Cantidad: $('#txtAAsignar').val(),
                    _Ori_Precio_Contradado: $('#txtAPrecio').val(),
                      _Cantidad_Planificada: $(""#txtPlanificado"").data(""kendoNumericTextBox"").value()
                };
            }
            else{
                    var model = {
                        Id: $('#IdRegistro').val(),
                        IdNotaPedido: $('#Id').val(),
                        IdPPA: selectedValueActividades,
                    _Ori_Cantidad: $(""#txtAAsignar"").data(""kendoNumericTextBox"").value(), //txtPlanificado
                    _Ori_Precio_Contradado: $(""#txtAPrecio""");
            WriteLiteral(@").data(""kendoNumericTextBox"").value(),
                    _Cantidad_Planificada: $(""#txtPlanificado"").data(""kendoNumericTextBox"").value()
                    };
                
            }
           
                $.post(""/NotaPedido/NotaPedido_DetalleGraba"", model).done(
                    function (e) {
                        
                        if (!e.isError) {
                           
                           Actualizar_Interfaz_DetallePedido();

                            const regex2 = /(\d{4})-(\d{4})-(\d{4})/g;
                            //$('#oNP_NroNP').val()
                            if (regex2.test($('#oNP_NroNP').val()) == false) {
                                GrabarNotaPedido();
                            }

                       
                        } else {
                            toastr.error(e.data, { timeOut: 2000 });
                        }
                    });

                
            
        }

       
    }
 ");
            WriteLiteral(@"   function HabilitarDetallePedido(){
        $('#ddlUbicaciones').attr('enabled', true);
        $('#ddlActividades').attr('enabled', true);
       
        var txtAPrecio = $(""#txtAPrecio"").data(""kendoNumericTextBox"");
        txtAPrecio.enable(true);
    }

    function BorrarNotaPedido_Detalle(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest(""tr""));
        var id = dataItem.id;

        if (dataItem.finalizado == true) {
            toastr.error(""No se puede editar una nota de pedido que tenga el estado Finalizado"", { timeOut: 3000 });
           return;

       }

        if(dataItem.avance_Actual > 0)
        {
            toastr.error(""No se puede borrar una Nota Pedido Detalle que presente avance"", { timeOut: 2000 });
            return;
        }
        $.post(""/NotaPedido/BorraNotaPedido_Detalle/"" + id).done(function (e) {
            if (!e.isError) {           
                Actualizar_Interfaz_DetallePedido();
               
            } else {");
            WriteLiteral(@"
                toastr.error(""Hubo un error al borrar la Actividad"", { timeOut: 2000 });
                toastr.error(e.data2, { timeOut: 2000 });
            }
            
        });
    }

    function MostrarNotaPedido_Detalle(e)
    {
         var dataItem = this.dataItem($(e.currentTarget).closest(""tr""));

        if (dataItem.finalizado == true) {
            toastr.error(""No se puede editar una nota de pedido que tenga el estado Finalizado"", { timeOut: 3000 });
           return;

       }

        
        var id = dataItem.id;

      
        $('#IdRegistro').val(dataItem.id);
        $('#IdActividadesCombo').val(dataItem.idPPA);

      
        HabilitaCabecera(""false"");
        cargaUbicaciones($('#ddlProyectos_Np').val(), dataItem.idUbicacion);
       

        ddlUbicaciones_onChange($('#IdActividadesCombo').val(), dataItem.idUbicacion,dataItem.idPPA, dataItem.idIndiceAjuste, dataItem.cantidad, );

        $('#ddlUbicaciones').attr('disabled', true);
        $(");
            WriteLiteral(@"'#ddlActividades').attr('disabled', true);

    

      
        var txtAAsignarMostrar = $(""#txtAAsignar"").data(""kendoNumericTextBox"");
        txtAAsignarMostrar.value(dataItem.cantidad);

        var stringMonto = (dataItem.cantidad).toString();
        $(""#txtAAsignar"").val(stringMonto);


        IdRegistroGrilla = dataItem.id;

       var txtAPrecio = $(""#txtAPrecio"").data(""kendoNumericTextBox"");
     
        txtAPrecio.value(dataItem._Precio_Contradado);      
        txtAPrecio.enable(false); 
       

        $(""#pnlDetalle"").show();
       
    }
    /*--*/


    /*Funciones COMBOS */
    function cargaUbicaciones(IdProyecto, value = 0) {
        var selectedValueProyecto = $('#ddlProyectos_Np').val();
        $.post(""/NotaPedido/GetUbicacionesProyecto"",
            { IdProyecto: IdProyecto })
            .done(function (e) {
                if (!e.isError) {
                    data = e.data;
                    if ($('#IdRegistro').val() == 0) {
                ");
            WriteLiteral(@"        $(""#ddlUbicaciones"").kendoDropDownList({
                            filter: ""contains"",
                            dataTextField: ""nombre"",
                            dataValueField: ""id"",
                            optionLabel: ""Elegir Ubicacion"",
                            change: cargaActividades,
                            dataSource: data,
                            height: 400
                        });
                         $(""#ddlActividades"").kendoDropDownList({
                            filter: ""contains"",
                            dataTextField: ""_Nombre_Comentarios"",
                            dataValueField: ""id"",
                            optionLabel: ""Elegir Actividad"",
                            change: cargaDatosActividad,
                            dataSource: [],
                            height: 400
                        });


                    }
                    else {
                        if (value != 0) {
                   ");
            WriteLiteral(@"         $(""#ddlUbicaciones"").kendoDropDownList({
                                filter: ""contains"",
                                dataTextField: ""nombre"",
                                dataValueField: ""id"",
                                optionLabel: ""Elegir Ubicacion"",
                                change: ddlUbicaciones_onChange,
                                dataSource: data,
                                value: value,
                                height: 400
                            });
                        }
                    }
                } else {
                    toastr.error(e.mensaje, { timeOut: 2000 });
                }
            });
    }
    function cargaActividades(value = 0, idubic = 0) {

        var selectedValueUbicacion;

        (idubic > 0) ? selectedValueUbicacion = idubic : selectedValueUbicacion = $(""#ddlUbicaciones"").data('kendoDropDownList').value();

        $.get(""");
#nullable restore
#line 838 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
          Write(Url.Action("GetActividadesUbicacionesProyecto", "NotaPedido"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/"" + selectedValueUbicacion,
            function (data) {

                if (!data.isError) {
                    if ($('#IdRegistro').val() == 0) {
                        $(""#ddlActividades"").kendoDropDownList({
                            filter: ""contains"",
                            dataTextField: ""_Nombre_Comentarios"",
                            dataValueField: ""id"",
                            optionLabel: ""Elegir Actividad"",
                            change: cargaDatosActividad,
                            dataSource: data,
                            height: 400
                        });
                    }
                    else {
                        if (value != 0) {
                            $(""#ddlActividades"").kendoDropDownList({
                               filter: ""contains"",
                                dataTextField: ""_Nombre_Comentarios"",
                                dataValueField: ""id"",
                                optionLabel: ""Elegir Ac");
            WriteLiteral(@"tividad"",

                                dataSource: data,
                                height: 400
                            });

                            var ActividadesKendo = $(""#ddlActividades"").data('kendoDropDownList');
                            ActividadesKendo.select(function (actividad) { return actividad.id == value; })
                            cargaDatosActividad(value);
                        }

                    }

                }

            }
        );
    }
    function cargaDatosActividad(idAct = 0, precioAAsignar = 0, precio = 0) {

        var selectedValueActividad;
        idAct > 0 &&  precioAAsignar > 0? selectedValueActividad = idAct : selectedValueActividad = $(""#ddlActividades"").val();

      //  $.get(""Url.Action(""GetDatosActividad_V2"", ""NotaPedido"")/"" + selectedValueActividad,
        $.get(""");
#nullable restore
#line 883 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/NotaPedido/_NotaPedidoAbm.cshtml"
          Write(Url.Action("GetDatosActividad_V2","NotaPedido"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?IdPPA="" + selectedValueActividad + ""&IdNP="" + $('#Id').val(),
            function (data) {
                if (!data.isError) {
 
                    var txtPlanificado = $(""#txtPlanificado"").data(""kendoNumericTextBox"");
                    txtPlanificado.value(data.data._Cantidad_y_Medida);

                    var txtPrecio = $(""#txtPrecio"").data(""kendoNumericTextBox"");
                    txtPrecio.value(data.data._Monto_Formato);

                    var txtAsignado = $(""#txtAsignado"").data(""kendoNumericTextBox"");
                    txtAsignado.value(data.data._Cantidad_Asignada);

                    //Esto es para cuando editamos de la grilla, no borre el valor
                    if ($('#IdRegistro').val() == 0) {
                        var txtAAsignar = $(""#txtAAsignar"").data(""kendoNumericTextBox"");
                        txtAAsignar.value(0);
                         $('#txtAAsignar').val(0);

                        var txtAAPrecio = $(""#txtAPrecio"").data(""kendoNumericTextBox");
            WriteLiteral(@""");
                        txtAAPrecio.value(0);
                        $('#txtAPrecio').val(0);
                    
                    }
                

                }
            }
        );
    }



    /*--*/

    /*Funciones Satelites */
    function CargoDatosEnGrillaDetalle(datos) {
    
        $(""#GrillaKendoDetalle"").html(""<div id='grillaNP_detalle'></div>"");
        $(""#grillaNP_detalle"").kendoGrid({
            filterable: false,
            sortable: false,
            dataSource: {
                data: datos
            },      
            columns: [
                { field: ""id"", title: ""Id"", width: ""10px"", media: ""(min-width: 850px)"" },
                { field: ""sUbicacion"", title: ""Ubicacion"", width: ""40px"", media: ""(min-width: 850px)"" },
                { field: ""sActividad"", title: ""Actividad"", width: ""40px"", media: ""(min-width: 850px)"" },
                { field: ""_Cantidad_Planificada"", title: ""Cantidad Planificada"", width: ""40px"", media: ""(min-wi");
            WriteLiteral(@"dth: 850px)"" },
                { field: ""_Precio_Contradado"", title: ""Precio ($)"", width: ""40px"", media: ""(min-width: 850px)"" },
                { field: ""_Cantidad_y_Medida"", title: ""Cantidad a Asignar"", width: ""40px"", media: ""(min-width: 850px)"" },
                { command: { name: ""kedit"", text: """", click: MostrarNotaPedido_Detalle }, title: ""Editar"", width: ""20px"", attributes: { style: ""text-align:center;"" } },
                { command: { name: ""kdelete"", text: """", click: BorrarNotaPedido_Detalle }, title: ""Borrar"", width: ""20px"", attributes: { style: ""text-align:center; padding: 5px;"" } }          
            ],
            dataBound: function () {
                dataView = this.dataSource.view();
                for (var i = 0; i < dataView.length; i++) {
                    if (dataView[i].finalizado == true) {
                        var uid = dataView[i].uid;
                        $(""#grillaNP_detalle tbody"").find(""tr[data-uid="" + uid + ""]"").addClass(""K-bacgraundRow_V"");
          ");
            WriteLiteral(@"          }
                    if (dataView[i].sEstadoPedido == ""Finalizado"") {
                        var uid = dataView[i].uid;
                        $(""#grillaNP_detalle tbody"").find(""tr[data-uid="" + uid + ""]"").addClass(""K-bacgraundRow_V"");
                    }
                    if (dataView[i].sEstadoPedido == ""Ejecucion"") {
                        var uid = dataView[i].uid;
                        $(""#grillaNP_detalle tbody"").find(""tr[data-uid="" + uid + ""]"").addClass(""K-bacgraundRow_Z"");
                    }
                }

            }
        });
    }
    function ddlUbicaciones_onChange(value = 0, idubic = 0, idAct = 0, idInd = 0,
        precioAAsignar = 0, precio = 0) {

        if (value == 0) {
            cargaActividades($('#IdActividadesCombo').val());
        } else {
            cargaActividades(value, idubic);
           
            if (idAct >= 0 && precioAAsignar >= 0 && precio >= 0) {
                
                cargaDatosActividad(idAct, precioA");
            WriteLiteral(@"Asignar, precio);
            }

        }
    };
     /*--*/

    //*** Funciones Reutilizables ***/  
    function Actualizar_Interfaz_DetallePedido() 
    {
        var model = {
            IdNotaPedido: $('#Id').val()         
        };
        $.post(""/NotaPedido/Listar_DetallePedido"", model).done(
            function (e) {
                if (!e.isError) {
                    toastr.success(""Se ha realizado la Operacion correctamente"", { timeOut: 1500 });
                    CargoDatosEnGrillaDetalle(e.data);

                } else {
                    toastr.error('Hubo un problema para realizar la Operacion', { timeOut: 2000 });
                }
            });
        
            //Limpiamos los Inputs
        var txtAAsignar = $(""#txtAAsignar"").data(""kendoNumericTextBox"");
        txtAAsignar.value(0);
        var txtAPrecio = $(""#txtAPrecio"").data(""kendoNumericTextBox"");
         txtAPrecio.enable(true); 
        txtAPrecio.value(""$ 0"");

        $('#ddlUbicaci");
            WriteLiteral(@"ones').attr('disabled', false);
        $('#ddlActividades').attr('disabled', false);
        inicializoDetalle();

        $('#ddlUbicaciones').val(0);
            

       

    }
    function LimpiarDetalle() 
    {
        var txtPlanificado = $(""#txtPlanificado"").data(""kendoNumericTextBox"");
        txtPlanificado.value(0);
        txtPlanificado.enable(false);
        var txtAsignado = $(""#txtAsignado"").data(""kendoNumericTextBox"");
        txtAsignado.value(0);
        txtAsignado.enable(false);
        var txtAAsignar = $(""#txtAAsignar"").data(""kendoNumericTextBox"");
        txtAAsignar.value(0);
        var txtAPrecio = $(""#txtAPrecio"").data(""kendoNumericTextBox"");
        txtAPrecio.value(""$ 0"");
        var txtPrecio = $(""#txtPrecio"").data(""kendoNumericTextBox"");
        txtPrecio.value(""$ 0"");
        txtPrecio.enable(false);
        $('#IdRegistro').val(0);

        var mIdProyecto = $('#ddlProyectos_Np').val();
        cargaUbicaciones(mIdProyecto);
    }
    /*--*/
");
            WriteLiteral("</script>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Gestion.EF.ItemNotaPedido> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
