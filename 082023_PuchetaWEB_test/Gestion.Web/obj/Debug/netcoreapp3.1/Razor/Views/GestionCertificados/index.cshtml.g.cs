#pragma checksum "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/GestionCertificados/index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8774deacc4f83daf7ceab0ef13986135c4a8a3bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GestionCertificados_index), @"mvc.1.0.view", @"/Views/GestionCertificados/index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/_ViewImports.cshtml"
using Gestion.Web.ViewModels.Input;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8774deacc4f83daf7ceab0ef13986135c4a8a3bd", @"/Views/GestionCertificados/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3bee31758dd1cbb7e600e265aed2cb74227e9428", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_GestionCertificados_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<object>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oProyecto in lProyectosFiltro"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("oProyecto.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oContratista in lContratistasFiltro"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("oContratista.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oProyecto in lProyectosFiltro.filter(p => p.id > 0)"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oContratista in lContratistas_x_Proyecto"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oProyecto in lProyectos"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("oPartidaPresupuestaria in lPartidasPresupuestarias"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-bind:value", new global::Microsoft.AspNetCore.Html.HtmlString("oPartidaPresupuestaria.codigo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/GestionCertificados/index.cshtml"
  
    ViewData["Title"] = "Gestión Certificados2";
   // Layout = "~/Views/Shared/_LayoutGestion.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    table.td_no_wrap {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    td, th {
        padding: 2px 5px 2px 5px !important;
        vertical-align: middle !important;
        /*border: 1px solid #000000;*/
        /*border-collapse: collapse;*/
    }

    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<div id=""vapp"" class=""row"">

    <!--GRILLA-->
    <div class=""col-md-12 animate__animated animate__fadeIn""
         v-if=""vista === 'grilla ppal'"">
        <div class=""card"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-lg-12"">
                        <button type=""button""
                                class=""btn btn-default float-right""
                         ");
            WriteLiteral("       ");
            WriteLiteral(@"@click=""abrirABMProyCertificados()""
                                style=""margin-left: 0.5em;"">
                            <i class=""fas fa-plus""></i>
                            Nuevo Certificado
                        </button>
                        <h5 class=""m-0"">Gestión de Certificados</h5>
                    </div>
                </div>
            </div>
            <div class=""card-body"">
                <nav>
                    <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">
                        <a class=""nav-item nav-link active""
                           id=""tabFiltroPorProyecto""
                           data-toggle=""tab""
                           href=""#divFiltroPorProyecto""
                           role=""tab"">Vista por Proyectos</a>
                        <a class=""nav-item nav-link""
                           id=""tabFiltroPorContratista""
                           data-toggle=""tab""
                           href=""#divFiltroPorContratista""
          ");
            WriteLiteral(@"                 role=""tab"">Vista por Contratistas</a>
                        <a class=""nav-item nav-link""
                           id=""tabFondoReparo""
                           data-toggle=""tab""
                           href=""#divFiltroFondosReparo""
                           role=""tab"">Fondos de Reparo</a>
                    </div>
                </nav>
                <div class=""tab-content"" style=""padding-top: 1em"">
                    <div id=""divFiltroPorProyecto"" class=""tab-pane fade show active"">
                        <div class=""row"">
                            <div class=""col-md-2"">
                                <label>Desde</label>
                                <input type=""date""
                                       v-model=""oFiltroPorProyecto.fecDesde""
                                       class=""form-control"" />
                            </div>
                            <div class=""col-md-2"">
                                <label>Hasta</label>
          ");
            WriteLiteral(@"                      <input type=""date""
                                       v-model=""oFiltroPorProyecto.fecHasta""
                                       class=""form-control"" />
                            </div>
                            <div class=""col-md-3"">
                                <label>Proyecto</label>
                                <select class=""form-control""
                                        v-model=""oFiltroPorProyecto.proyectoId"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd10798", async() => {
                WriteLiteral("\r\n                                        {{ oProyecto.nombre }}\r\n                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-5\">\r\n                                <button type=\"button\"\r\n                                        ");
            WriteLiteral(@"@click=""buscandoProyCertificados = true; buscarProyCertificados()""
                                        class=""btn btn-default float-right""
                                        style=""margin-top:1.9em"">
                                    <i v-if=""!buscandoProyCertificados"" class=""fas fa-search""></i>
                                    <div class=""spinner-border""
                                         style=""width:1.3em; height: 1.3em""
                                         v-if=""buscandoProyCertificados"">
                                        <span class=""sr-only"">Loading...</span>
                                    </div>
                                    Buscar
                                </button>
                            </div>
                            <div class=""col-md-12"">
                                <div v-if=""lProyCertificados.length === 0"">
                                    <hr />
                                    Sin resultados
                     ");
            WriteLiteral(@"           </div>
                                <div class=""v-else"">
                                    <br />
                                    <table class=""table table-hover table-striped"">
                                        <thead>
                                            <tr>
                                                <th>Id</th>
                                                <th>Proyecto</th>
                                                <th>Fec. Registro</th>
                                                <th>Periodo</th>
                                                <th>Cert. Cero</th>
                                                <th><span class=""float-right"">Acciones</span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr v-for=""oPC in lProyCertificados"">
                                                <td>{{o");
            WriteLiteral(@"PC.id}}</td>
                                                <td>{{oPC.proyectoNombre}}</td>
                                                <td>{{oPC.fechaCreacion}}</td>
                                                <td>{{oPC.periodo}}</td>
                                                <td>{{oPC.esCertificadoCero ? 'Si' : 'No'}}</td>
                                                <td>
                                                    <button type=""button"" class=""btn btn-default float-right""
                                                            ");
            WriteLiteral(@"@click=""idProyCertBuscado = oPC.id; verProyCertificado(oPC.id)"">
                                                        <i v-if=""idProyCertBuscado != oPC.id"" class=""fas fa-eye""></i>
                                                        <div class=""spinner-border""
                                                             style=""width:1.3em; height: 1.3em""
                                                             v-if=""idProyCertBuscado == oPC.id"">
                                                            <span class=""sr-only"">Loading...</span>
                                                        </div>
                                                        Ver
                                                    </button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            ");
            WriteLiteral(@"</div>
                        </div>
                    </div>
                    <div id=""divFiltroPorContratista"" class=""tab-pane fade show"">
                        <div class=""row"">
                            <div class=""col-md-2"">
                                <label>Desde</label>
                                <input type=""date""
                                       v-model=""oFiltrosMultiples.fecDesde""
                                       class=""form-control"" />
                            </div>
                            <div class=""col-md-2"">
                                <label>Hasta</label>
                                <input type=""date""
                                       v-model=""oFiltrosMultiples.fecHasta""
                                       class=""form-control"" />
                            </div>
                            <div class=""col-md-3"">
                                <label>Proyecto</label>
                                <select class=""form");
            WriteLiteral("-control\"\r\n                                        v-model=\"oFiltrosMultiples.proyectoId\"\r\n                                        ");
            WriteLiteral("@change=\"seleccionarProyecto(oFiltrosMultiples.proyectoId)\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd17441", async() => {
                WriteLiteral("\r\n                                        {{ oProyecto.nombre }}\r\n                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </select>
                                <span class=""badge badge-info"" v-for=""oProyecto in lProyectosSeleccionados.filter(c => c.id != 0)""
                                      style=""margin-right: 0.2em; cursor: pointer""
                                      ");
            WriteLiteral(@"@click=""deseleccionarProyecto(oProyecto.id)"">
                                    {{ oProyecto.nombre }}
                                </span>
                            </div>
                            <div class=""col-md-3"">
                                <label>Contratista</label>
                                <select class=""form-control""
                                        v-model=""oFiltrosMultiples.contratistaId""
                                        ");
            WriteLiteral("@change=\"seleccionarContratista(oFiltrosMultiples.contratistaId)\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd19610", async() => {
                WriteLiteral("\r\n                                        {{ oContratista.nombre }}\r\n                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </select>
                                <span class=""badge badge-info"" v-for=""oContratista in lContratistasSeleccionados.filter(c => c.id != 0)""
                                      style=""margin-right: 0.2em; cursor: pointer""
                                       ");
            WriteLiteral(@"@click=""deseleccionarContratista(oContratista.id)"">
                                    {{ oContratista.nombre }}
                                </span>
                            </div>
                            <div class=""col-md-2"">
                                <button type=""button""
                                        ");
            WriteLiteral(@"@click=""buscandoContrCertificados = true; buscarContrCertificados()""
                                        class=""btn btn-default float-right""
                                        style=""margin-top:1.9em"">
                                    <i v-if=""!buscandoContrCertificados"" class=""fas fa-search""></i>
                                    <div class=""spinner-border""
                                         style=""width:1.3em; height: 1.3em""
                                         v-if=""buscandoContrCertificados"">
                                        <span class=""sr-only"">Loading...</span>
                                    </div>
                                    Buscar
                                </button>
                            </div>
                            <div class=""col-md-12"">
                                <div v-if=""lContrCertificados.length === 0"">
                                    <hr />
                                    Sin resultados
                ");
            WriteLiteral(@"                </div>
                                <div v-else>
                                    <br />
                                    <table class=""table table-hover table-striped"">
                                        <thead>
                                            <tr>
                                                <th>Id</th>
                                                <th>Proyecto</th>
                                                <th>Contratista</th>
                                                <th>Fec. Registro</th>
                                                <th>Periodo</th>
                                                <th>Nro. Certificado</th>
                                                <th><span class=""float-right"">Acciones</span></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr v-for=""oCC in lCo");
            WriteLiteral(@"ntrCertificados"">
                                                <td>{{oCC.id}}</td>
                                                <td>{{oCC.proyectoNombre}}</td>
                                                <td>{{oCC.contratistaNombre}}</td>
                                                <td>{{oCC.fechaCreacion}}</td>
                                                <td>{{oCC.periodo}}</td>
                                                <td>{{oCC.numeroCertificado}}</td>
                                                <td>
                                                    <button type=""button"" class=""btn btn-default float-right""
                                                            ");
            WriteLiteral(@"@click=""idContrCertBuscado = oCC.id;
                                                            oContrCertificado = oCC;
                                                            oProyCertificado = {id: oCC.proyCertificadoId, detalle: oCC.detalle};
                                                            desdeFiltrosMultiples = true;
                                                            verCertificadosPorContratistas()"">
                                                        <i v-if=""idContrCertBuscado != oCC.id"" class=""fas fa-eye""></i>
                                                        <div class=""spinner-border""
                                                             style=""width:1.3em; height: 1.3em""
                                                             v-if=""idContrCertBuscado == oCC.id"">
                                                            <span class=""sr-only"">Loading...</span>
                                                        </div>
                ");
            WriteLiteral(@"                                        Ver
                                                    </button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id=""divFiltroFondosReparo"" class=""tab-pane fade show"">
                        <div class=""row"">
                            <div class=""col-md-3"">
                                <label>Proyecto</label>
                                <select class=""form-control""
                                        v-model=""oFiltroFondoReparo.proyectoId""
                                        ");
            WriteLiteral(@"@change=""
                                        limpiarABMDescuentos(function(){
                                            oFiltroFondoReparo.contratistaId = 0;
                                            buscarContratistas_x_Proyecto(oFiltroFondoReparo.proyectoId)});"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd26719", async() => {
                WriteLiteral("\r\n                                        {{ oProyecto.nombre }}\r\n                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </select>
                            </div>
                            <div class=""col-md-3"">
                                <label>Contratista</label>
                                <select class=""form-control""
                                        v-model=""oFiltroFondoReparo.contratistaId""
                                        ");
            WriteLiteral("@change=\"lContrCertificados_FondoReparo = []\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd28428", async() => {
                WriteLiteral("\r\n                                        {{ oContratista.nombre }}\r\n                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <button type=\"button\"\r\n                                        ");
            WriteLiteral(@"@click=""buscandoFondoReparo = true; buscarFondosReparo()""
                                        class=""btn btn-default float-right""
                                        style=""margin-top:1.9em"">
                                    <i v-if=""!buscandoFondoReparo"" class=""fas fa-search""></i>
                                    <div class=""spinner-border""
                                         style=""width:1.3em; height: 1.3em""
                                         v-if=""buscandoFondoReparo"">
                                        <span class=""sr-only"">Loading...</span>
                                    </div>
                                    Buscar
                                </button>
                            </div>
                            <div class=""col-md-12"">
                                <div v-if=""lContrCertificados_FondoReparo.length === 0"">
                                    <hr />
                                    Sin resultados
                           ");
            WriteLiteral(@"     </div>
                                <div v-else>
                                    <br />
                                    <table class=""table table-hover table-striped"">
                                        <tbody>
                                            <tr style=""font-size: 1.5em"">
                                                <th>PROYECTO</th>
                                                <td>{{oFiltroFondoReparo.proyectoNombre}}</td>
                                                <th>CONTRATISTA</th>
                                                <td colspan=""2"">{{oFiltroFondoReparo.contratistaNombre}}</td>
                                            </tr>
                                            <tr>
                                                <th colspan=""5"">
                                                    <span style=""font-size: 1.5em"">FONDOS DE REPARO</span>
                                                </th>
                                      ");
            WriteLiteral(@"      </tr>
                                            <tr>
                                                <th>Núm. Cert.</th>
                                                <th colspan=""2"">Periodo</th>
                                                <th style=""text-align: right"">Fondo de Reparo</th>
                                                <th></th>
                                            </tr>
                                            <tr v-for=""oCC in lContrCertificados_FondoReparo"">
                                                <td>{{oCC.numeroCertificado}}</td>
                                                <td colspan=""2"">{{oCC.periodo}}</td>
                                                <td style=""text-align: right"">${{getNumeroFormateado(oCC.fondoReparo)}}</td>
                                                <td></td>
                                            </tr>
                                            <tr style=""font-size: 1.5em; text-align: right"">
        ");
            WriteLiteral(@"                                        <th colspan=""3"">TOTAL</th>
                                                <th>${{getNumeroFormateado(getTotalFondosReparo)}}</th>
                                                <th></th>
                                            </tr>
                                            <tr style=""height: 1em""></tr>
                                            <tr>
                                                <th colspan=""5"">
                                                    <span style=""font-size: 1.5em"">DEVOLUCIONES y DESCUENTOS</span>
                                                </th>
                                            </tr>
                                            <tr>
                                                <th>Fecha</th>
                                                <th>Documento</th>
                                                <th>Número</th>
                                                <th style=""text-align: right"">Mo");
            WriteLiteral(@"nto</th>
                                                <th></th>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <input type=""date"" class=""form-control form-control-sm""
                                                           v-model=""oProyContrDescuentoNuevo.fecha""
                                                           v-on:keyup.enter=""agregarDescuento(true);"" />
                                                </td>
                                                <td>
                                                    <input type=""text"" class=""form-control form-control-sm""
                                                           v-model=""oProyContrDescuentoNuevo.documento""
                                                           v-on:keyup.enter=""agregarDescuento(true);"" />
                                                </td>
");
            WriteLiteral(@"                                                <td>
                                                    <input type=""text"" class=""form-control form-control-sm""
                                                           v-model=""oProyContrDescuentoNuevo.numero""
                                                           v-on:keyup.enter=""agregarDescuento(true);"" />
                                                </td>
                                                <td>
                                                    <input type=""text"" class=""form-control form-control-sm""
                                                           v-model=""oProyContrDescuentoNuevo.monto""
                                                           v-on:keyup.enter=""agregarDescuento(true);""
                                                           style=""text-align: right; color: red""/>
                                                </td>
                                                <td></td>
                 ");
            WriteLiteral("                           </tr>\r\n                                            <tr v-for=\"oProyContrDescuento in lProyContr_Descuentos\">\r\n                                                <td ");
            WriteLiteral(@"@click=""oProyContrDescuento.editando = true"">
                                                    <input type=""date"" class=""form-control""
                                                           v-if=""oProyContrDescuento.editando""
                                                           v-model=""oProyContrDescuento.fecha""
                                                           v-on:keyup.enter=""oProyContrDescuento.editando = false;"" />
                                                    <span v-else>{{oProyContrDescuento.fecha}}</span>
                                                </td>
                                                <td ");
            WriteLiteral(@"@click=""oProyContrDescuento.editando = true"">
                                                    <input type=""text"" class=""form-control""
                                                           v-if=""oProyContrDescuento.editando""
                                                           v-model=""oProyContrDescuento.documento""
                                                           v-on:keyup.enter=""oProyContrDescuento.editando = false;"" />
                                                    <span v-else>{{oProyContrDescuento.documento}}</span>
                                                </td>
                                                <td ");
            WriteLiteral(@"@click=""oProyContrDescuento.editando = true""
                                                    style=""text-align: right"">
                                                    <input type=""text"" class=""form-control""
                                                           v-if=""oProyContrDescuento.editando""
                                                           v-model=""oProyContrDescuento.numero""
                                                           v-on:keyup.enter=""oProyContrDescuento.editando = false;"" />
                                                    <span v-else>{{oProyContrDescuento.numero}}</span>
                                                </td>
                                                <td ");
            WriteLiteral(@"@click=""oProyContrDescuento.editando = true"" style=""text-align: right;"">
                                                    <input type=""text"" class=""form-control""
                                                           v-if=""oProyContrDescuento.editando""
                                                           v-model=""oProyContrDescuento.monto""
                                                           v-on:keyup.enter=""oProyContrDescuento.editando = false;""
                                                           style=""text-align: right; color: red""/>
                                                    <span v-else style=""color: red"">${{getNumeroFormateado(oProyContrDescuento.monto)}}</span>
                                                </td>
                                                <td>
                                                    <button type=""button"" class=""btn btn-xs btn-danger float-right""
                                                            title=""Quitar""
  ");
            WriteLiteral("                                                          ");
            WriteLiteral(@"@click=""eliminarDescuento(oProyContrDescuento._index)"">
                                                        <i class=""fas fa-trash""></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            <tr style=""font-size: 1.5em; text-align: right"">
                                                <th colspan=""3"">TOTAL</th>
                                                <th style=""color:red"">${{getNumeroFormateado(getTotalDescuentos)}}</th>
                                                <td></td>
                                            </tr>
                                            <tr style=""height: 1em""></tr>
                                            <tr style=""font-size: 1.5em"">
                                                <th colspan=""2"">SALDO A LIQUIDAR</th>
                                                <th colspan=""2"" style=""tex");
            WriteLiteral(@"t-align: right; font-size: 1.5em"">
                                                    <strong v-if=""(getTotalFondosReparo - getTotalDescuentos) >= 0""
                                                            class=""text-info"">
                                                        ${{getNumeroFormateado(getTotalFondosReparo - getTotalDescuentos)}}
                                                    </strong>
                                                    <strong v-else class=""text-danger"">
                                                        ${{getNumeroFormateado(getTotalFondosReparo - getTotalDescuentos)}}
                                                    </strong>
                                                </th>
                                                <th></th>
                                            </tr>
                                            <tr>
                                                <th colspan=""5"">
                                             ");
            WriteLiteral("       <button type=\"button\" class=\"btn btn-primary float-right\"\r\n                                                            ");
            WriteLiteral(@"@click=""grabandoProyContrDescuentos = true; grabarDescuentos()""
                                                            v-if=""!grabandoProyContrDescuentos"">
                                                        <i class=""fas fa-chain""></i>
                                                        Grabar
                                                    </button>
                                                    <button type=""button""
                                                            class=""btn btn-primary float-right""
                                                            v-else
                                                            style=""margin-left: 0.5em"">
                                                        <div class=""spinner-border""
                                                             style=""width:1.3em; height: 1.3em"">
                                                            <span class=""sr-only"">Loading...</span>
                                   ");
            WriteLiteral(@"                     </div>
                                                        Grabando...
                                                    </button>
                                                </th>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--ABM Proy Certificados-->
    <div class=""col-md-12"">
        <div class=""card animate__animated animate__fadeIn""
             v-if=""vista === 'abm proy certificados'"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <button type=""button""
                                class=""btn btn-default float-right""
                                ");
            WriteLiteral(@"@click=""volverAGrillaPpal()""
                                style=""margin-left: 0.5em"">
                            <i class=""fas fa-arrow-left""></i>
                            Volver
                        </button>
                        <button type=""button""
                                class=""btn btn-default float-right""
                                ");
            WriteLiteral(@"@click=""buscandoCertificadosPorContratista = true; verCertificadosPorContratistas()""
                                v-if=""oProyCertificado.id > 0""
                                style=""margin-left: 0.5em"">
                            <i class=""fas fa-list"" v-if=""!buscandoCertificadosPorContratista""></i>
                            <div class=""spinner-border""
                                 style=""width:1.3em; height: 1.3em""
                                 v-if=""buscandoCertificadosPorContratista"">
                                <span class=""sr-only"">Loading...</span>
                            </div>
                            Cert. por Contr.
                        </button>
                        <button type=""button""
                                class=""btn btn-primary float-right""
                                ");
            WriteLiteral(@"@click=""grabandoProyCertificado = true; grabarProyCertificado()""
                                v-if=""!grabandoProyCertificado && oProyCertificado.lPCPPAs.length > 0""
                                style=""margin-left: 0.5em"">
                            <i class=""fas fa-check""></i>
                            Grabar Ajustes
                        </button>
                        <button type=""button""
                                class=""btn btn-primary float-right""
                                v-if=""grabandoProyCertificado""
                                style=""margin-left: 0.5em"">
                            <div class=""spinner-border""
                                 style=""width:1.3em; height: 1.3em""
                                 v-if=""grabandoProyCertificado"">
                                <span class=""sr-only"">Loading...</span>
                            </div>
                            Grabando...
                        </button>
                        <button type=""");
            WriteLiteral("button\"\r\n                                class=\"btn btn-default float-right\"\r\n                                ");
            WriteLiteral(@"@click=""descartarTodo()""
                                style=""margin-left: 0.5em""
                                v-if=""ajustado && !grabandoProyCertificado"">
                            <i class=""fas fa-trash""></i>
                            Descartar Todo
                        </button>
                        <h5 class=""m-0"">
                            {{ oProyCertificado.id == 0 ? 'Nuevo Certificado' : oProyCertificado.detalle }}
                        </h5>
                    </div>
                </div>
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-7"" v-if=""oProyCertificado.id > 0""></div>
                    <div class=""col-md-3"" v-if=""oProyCertificado.id == 0"">
                        <label>Proyecto</label>
                        <select class=""form-control""
                                v-model=""oProyCertificado.proyectoId"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd47924", async() => {
                WriteLiteral("\r\n                                {{ oProyecto.nombre }}\r\n                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-md-2"" v-if=""oProyCertificado.id == 0"">
                        <label>Desde</label>
                        <input type=""date""
                               class=""form-control""
                               v-model=""oProyCertificado.fecDesde"" />
                    </div>
                    <div class=""col-md-2"" v-if=""oProyCertificado.id == 0"">
                        <label>Hasta</label>
                        <input type=""date""
                               class=""form-control""
                               v-model=""oProyCertificado.fecHasta"" />
                    </div>
                    <div class=""col-md-5"" v-if=""oProyCertificado.id == 0"">
                        <button type=""button""
                                class=""btn btn-default""
                                ");
            WriteLiteral(@"@click=""buscandoPlanificaciones = true; buscarPlanificaciones()""
                                style=""margin-top: 1.9em; margin-left:0.5em;""
                                v-if=""!ajustado && oProyCertificado.id == 0"">
                            <div class=""spinner-border""
                                 style=""width:1.3em; height: 1.3em""
                                 v-if=""buscandoPlanificaciones"">
                                <span class=""sr-only"">Loading...</span>
                            </div>
                            <i class=""fas fa-search"" v-else></i>
                            Buscar
                        </button>
                    </div>
                    <div class=""col-md-12"" v-if=""oProyCertificado.id == 0"">
                        <hr />
                    </div>
                </div>
                <div class=""row"" v-if=""oProyCertificado.lPCPPAs && oProyCertificado.lPCPPAs.length > 0"">
                    <div class=""col-md-2"">
                       ");
            WriteLiteral(@" Act. a certificar - total: <strong>{{oProyCertificado.lPCPPAs.length}}</strong>
                    </div>
                    <div class=""col-md-7"">
                        <div class=""row"">
                            <div class=""col-md-2"">
                                Filtrar por:
                            </div>
                            <div class=""col-md-3"">
                                <input type=""text""
                                       v-model=""ubicacionFiltro""
                                       placeholder=""Ubicación""
                                       class=""form-control form-control-sm"" />
                            </div>
                            <div class=""col-md-3"">
                                <input type=""text""
                                       v-model=""actividadFiltro""
                                       placeholder=""Actividad""
                                       class=""form-control form-control-sm"" />
                            <");
            WriteLiteral(@"/div>
                            <div class=""col-md-2"">
                                <div class=""icheck-primary float-right"">
                                    <input type=""checkbox"" v-model=""excedidosFiltro""
                                           id=""chbxExcedidos"">
                                    <label for=""chbxExcedidos"">Excedidos</label>
                                </div>
                            </div>
                            <div class=""col-md-2"">
                                <button type=""button"" class=""btn btn-default""
                                        title=""Limpiar filtros""
                                        ");
            WriteLiteral(@"@click=""ubicacionFiltro='', actividadFiltro='', excedidosFiltro=false"">
                                    <i class=""fas fa-trash""></i>
                                    Limpiar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-3"">
                        <span class=""float-right"">
                            sin ajustar: <strong>{{getPCPPAs_SinAjustar.length}}</strong> -
                            ajustadas: <strong>{{getPCPPAs_Ajustadas.length}}</strong> -
                            visadas: <strong>{{getPCPPAs_Visadas.length}}</strong>
                        </span>
                    </div>
                    <div class=""col-md-12"" style=""margin-top:1em"">
                        <div class=""table-responsive"" style=""margin: auto !important"">
                            <table class=""table table-hover table-striped"">
                                <tbody>
   ");
            WriteLiteral(@"                                 <tr>
                                        <td colspan=""16"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            SIN AJUSTAR
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustarVisibles = false""
                                                    v-show=""sinAjustarVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustarVisibles = true""
                                                    v-show=""!sinAjustarVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <tr v-show=""sinAjustarVisibles"">
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                                        <th>Descripción</th>
                                        <th>UD. Medida</th>
                                        <th>Cant. Plan.</th>
                                        <th>Mont. Unit. Plan.</th>
                                        <th>Acum. Anterior</th>
                                        <th>Acum. Periodo</th>
                                        <th>Acum. Ajuste</th>
                                        <th>Acum");
            WriteLiteral(@". Actual</th>
                                        <th>Imp. Plan.</th>
                                        <th>Imp. Anterior</th>
                                        <th>Imp. Periodo</th>
                                        <th>Imp. Ajuste</th>
                                        <th>Imp. Actual</th>
                                        <th><span class=""float-right"">Acciones</span></th>
                                    </tr>
                                    <tr v-show=""sinAjustarVisibles""
                                        v-for=""oPCPPA in getPCPPAs_SinAjustar"">
                                        <td>{{oPCPPA.ubicacion}}</td>
                                        <td>{{oPCPPA.actividad}}</td>
                                        <td>{{oPCPPA.actividadDescripcion}}</td>
                                        <td>{{oPCPPA.unidadMedida}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadPlanifi");
            WriteLiteral(@"cada)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumPeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumActual)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importePlanificado)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAc");
            WriteLiteral(@"umPeriodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumActual)}}</td>
                                        <td style=""width: 8em"">
                                            <button type=""button"" class=""col-md-12  btn btn-default""
                                                    v-if=""!oProyCertificado.cerrado""
                                                    ");
            WriteLiteral(@"@click=""abrirAjustador(oPCPPA)"">
                                                <i class=""fas fa-calculator""></i>
                                                Ajustar
                                            </button>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan=""16"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            AJUSTADAS
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""ajustadasVisibles = false""
                                                    v-show=""ajustadasVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""ajustadasVisibles = true""
                                                    v-show=""!ajustadasVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <tr v-show=""ajustadasVisibles"">
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                                        <th>Descripción</th>
                                        <th>UD. Medida</th>
                                        <th>Cant. Plan.</th>
                                        <th>Mont. Unit. Plan.</th>
                                        <th>Acum. Anterior</th>
                                        <th>Acum. Periodo</th>
                                        <th>Acum. Ajuste</th>
                                        <th>Acum. A");
            WriteLiteral(@"ctual</th>
                                        <th>Imp. Plan.</th>
                                        <th>Imp. Anterior</th>
                                        <th>Imp. Periodo</th>
                                        <th>Imp. Ajuste</th>
                                        <th>Imp. Actual</th>
                                        <th><span class=""float-right"">Acciones</span></th>
                                    </tr>
                                    <tr v-show=""ajustadasVisibles""
                                        v-for=""oPCPPA in getPCPPAs_Ajustadas"">
                                        <td>{{oPCPPA.ubicacion}}</td>
                                        <td>{{oPCPPA.actividad}}</td>
                                        <td>{{oPCPPA.actividadDescripcion}}</td>
                                        <td>{{oPCPPA.unidadMedida}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadPlanificada)");
            WriteLiteral(@"}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumPeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumActual)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importePlanificado)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumPer");
            WriteLiteral(@"iodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumActual)}}</td>
                                        <td style=""width: 8em"">
                                            <button type=""button"" class=""col-md-12  btn btn-default""
                                                    v-if=""!oProyCertificado.cerrado""
                                                    ");
            WriteLiteral(@"@click=""abrirAjustador(oPCPPA)"">
                                                <i class=""fas fa-calculator""></i>
                                                Ajustar
                                            </button>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan=""16"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            VISADAS
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""visadasVisibles = false""
                                                    v-show=""visadasVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""visadasVisibles = true""
                                                    v-show=""!visadasVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <tr v-show=""visadasVisibles"">
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                                        <th>Descripción</th>
                                        <th>UD. Medida</th>
                                        <th>Cant. Plan.</th>
                                        <th>Mont. Unit. Plan.</th>
                                        <th>Acum. Anterior</th>
                                        <th>Acum. Periodo</th>
                                        <th>Acum. Ajuste</th>
                                        <th>Acum. Actual<");
            WriteLiteral(@"/th>
                                        <th>Imp. Plan.</th>
                                        <th>Imp. Anterior</th>
                                        <th>Imp. Periodo</th>
                                        <th>Imp. Ajuste</th>
                                        <th>Imp. Actual</th>
                                        <th><span class=""float-right"">Acciones</span></th>
                                    </tr>
                                    <tr v-show=""visadasVisibles""
                                        v-for=""oPCPPA in getPCPPAs_Visadas"">
                                        <td>{{oPCPPA.ubicacion}}</td>
                                        <td>{{oPCPPA.actividad}}</td>
                                        <td>{{oPCPPA.actividadDescripcion}}</td>
                                        <td>{{oPCPPA.unidadMedida}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadPlanificada)}}</td>
 ");
            WriteLiteral(@"                                       <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumPeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumActual)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importePlanificado)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumPeriodo)}}</t");
            WriteLiteral(@"d>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumActual)}}</td>
                                        <td style=""width: 8em"">
                                            <button type=""button"" class=""col-md-12  btn btn-default""
                                                    v-if=""!oProyCertificado.cerrado""
                                                    ");
            WriteLiteral(@"@click=""abrirAjustador(oPCPPA)"">
                                                <i class=""fas fa-calculator""></i>
                                                Ajustar
                                            </button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Panel Ajustador-->
    <div class=""col-md-12"">
        <div class=""card animate__animated animate__fadeIn""
             v-if=""vista === 'ajustador'"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <h5 class=""m-0"">{{ oProyCertificado.detalle }}</h5>
                        <hr />
                        <button type=""button""
                                class=""btn btn-default");
            WriteLiteral(" float-right\"\r\n                                v-if=\"!consultarSiAjustado\"\r\n                                ");
            WriteLiteral(@"@click=""oPCPPA = {}; vista = 'abm proy certificados';""
                                title=""Volver sin aplicar cambios""
                                style=""margin-left:0.5em;"">
                            <i class=""fas fa-arrow-left""></i>
                            Volver
                        </button>
                        <button type=""button""
                                class=""btn btn-default float-right""
                                v-if=""!consultarSiAjustado && !oPCPPA.visada""
                                ");
            WriteLiteral(@"@click=""marcarComoVisada(); vista = 'abm proy certificados';""
                                title=""Marcar como visada""
                                style=""margin-left:0.5em;"">
                            <i class=""fas fa-eye""></i>
                            Marcar como visada
                        </button>
                        <button type=""button""
                                class=""btn btn-default float-right""
                                v-if=""!consultarSiAjustado && oPCPPA.visada""
                                ");
            WriteLiteral(@"@click=""desmarcarComoVisada();""
                                title=""Desmarcar como visada""
                                style=""margin-left:0.5em;"">
                            <i class=""fas fa-eye-slash""></i>
                            Desmascar como visada
                        </button>
                        <button type=""button""
                                class=""btn btn-default float-right""
                                v-if=""consultarSiAjustado || oPCPPA.montoPlanificado != oPCPPA.montoPlanificadoOriginal""
                                ");
            WriteLiteral(@"@click=""aplicarAjustes()""
                                title=""Aplicar Ajuste""
                                style=""margin-left:0.5em;"">
                            <i class=""fas fa-check""></i>
                            Aplicar Ajuste
                        </button>
                        <button type=""button""
                                v-if=""consultarSiAjustado""
                                class=""btn btn-default float-right""
                                ");
            WriteLiteral(@"@click=""descartarAjustes()""
                                style=""margin-left:0.5em;"">
                            <i class=""fas fa-trash""></i>
                            Descartar
                        </button>
                        <h5 class=""m-0"">
                            Ajustando -
                            {{ oPCPPA.ubicacion }} -
                            {{ oPCPPA.actividad }} -
                            {{ oPCPPA.actividadDescripcion }}
                        </h5>
                    </div>
                </div>
            </div>
            <div class=""card-body"" role=""document"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <div class=""table-responsive"">
                            <table class=""table table-hover table-striped td_no_wrap"">
                                <tbody>
                                    <tr>
                                        <th style=""text-align: right"">PLANIFICADO</th");
            WriteLiteral(@">
                                        <th style=""text-align: right"">Cantidad</th>
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(oPCPPA.cantidadPlanificada)}}
                                        </td>
                                        <td colspan=""5""></td>
                                        <th style=""text-align: right; width:15em"">Importe</th>
                                        <td style=""text-align: right"">
                                            ${{ getNumeroFormateado(oPCPPA.importePlanificado)}}
                                        </td>
                                        <td>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th style=""text-align: right"">REAL</th>
                                        <th style=""text-align: right"">Cantidad</th>");
            WriteLiteral(@"
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(oPCPPA.cantidadAcumActual)}}
                                        </td>
                                        <td style=""text-align: right;"">
                                            <span v-if=""oPCPPA.porcentajeCumplido <= 100"">
                                                {{getNumeroFormateado(oPCPPA.porcentajeCumplido)}}%
                                            </span>
                                            <span v-if=""oPCPPA.porcentajeCumplido > 100""
                                                  class=""text-danger"" style=""font-weight: bold; font-size: 1em"">
                                                {{getNumeroFormateado(oPCPPA.porcentajeCumplido)}}%
                                            </span>
                                        </td>
                                        <td colspan=""4""></td>
                    ");
            WriteLiteral(@"                    <th style=""text-align: right"">Importe</th>
                                        <td style=""text-align: right"">
                                            ${{ getNumeroFormateado(oPCPPA.importeAcumActual)}}
                                        </td>
                                        <td style=""text-align: right;"">
                                            <span v-if=""oPCPPA.importePlanificado > 0"">
                                                {{getNumeroFormateado(oPCPPA.porcentajeCumplidoSobreImportePresupuestado)}}%
                                            </span>
                                            <span v-else>0%</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th style=""text-align: right"" colspan=""2"">
                                            <div class=""icheck-primary float-right"" v-if=""esCoordinadorObra"">
        ");
            WriteLiteral(@"                                        <input type=""checkbox"" v-model=""oPCPPA.excedenteAutorizado""
                                                       id=""chbxAutorizoExcedente"">
                                                <label for=""chbxAutorizoExcedente"">Autorizo Excedente</label>
                                            </div>
                                            <span v-else>Excedente Autorizado</span>
                                        </th>
                                        <td style=""text-align:right"">
                                            <input type=""number""
                                                   v-if=""esCoordinadorObra && oPCPPA.excedenteAutorizado""
                                                   class=""form-control form-control-xs""
                                                   style=""text-align:right""
                                                   v-model=""oPCPPA.cantidadAutorizadaExcedente"" />
                                 ");
            WriteLiteral(@"           <span v-else>{{oPCPPA.cantidadAutorizadaExcedente}}</span>
                                        </td>
                                        <th style=""text-align: right"" colspan=""6"">Monto Unitario</th>
                                        <td>
                                            <input type=""number""
                                                   class=""form-control form-control-xs""
                                                   style=""text-align:right""
                                                   v-model=""oPCPPA.montoPlanificado""
                                                   v-on:keyup=""ajustarDesdeMontoUnitario()"" />
                                        </td>
                                        <td></td>
                                    </tr>
                                    <tr><td colspan=""11"" style=""height: 2em""></td></tr>
                                    <tr>
                                        <th>Contratista</th>
         ");
            WriteLiteral(@"                               <th style=""text-align: right; width: 12%"">Acum. Ant.</th>
                                        <th style=""text-align: right; width: 12%"">Acum. Periodo</th>
                                        <th style=""text-align: right; width: 12%"">Ajuste</th>
                                        <th style=""text-align: right; width: 12%"">Acum. Actual</th>
                                        <th style=""text-align: right""></th>
                                        <th></th>
                                        <th style=""text-align: right; width: 12%"">Acum. Ant</th>
                                        <th style=""text-align: right; width: 12%"">Acum. Periodo</th>
                                        <th style=""text-align: right; width: 12%"">Ajuste</th>
                                        <th style=""text-align: right; width: 12%"">Acum. Actual</th>
                                    </tr>
                                    <tr>
                           ");
            WriteLiteral(@"             <th></th>
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(oPCPPA.cantidadAcumAnterior) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(oPCPPA.cantidadAcumPeriodo) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPPA.cantidadAcumAjustePeriodo) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPPA.cantidadAcumActual)}}
                                        </td>
                                        <td style=""text-align: right""></td>
                                        <td></td");
            WriteLiteral(@">
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(oPCPPA.importeAcumAnterior) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{ getNumeroFormateado(oPCPPA.importeAcumPeriodo) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{ getNumeroFormateado(oPCPPA.importeAcumAjustePeriodo)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{ getNumeroFormateado(oPCPPA.importeAcumActual)}}
                                        </td>
                                    </tr>
                                    <tr><td colspan=""11"" style=""height: 2em""></td></tr>
              ");
            WriteLiteral(@"                      <tr v-for=""ca in oPCPPA.lContratistasAvances"">
                                        <td>{{ ca.contratistaNombre }}</td>
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(ca.cantidadAcumAnterior) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{ getNumeroFormateado(ca.cantidadAcumPeriodo) }}
                                        </td>
                                        <td style=""text-align: right"">
                                            <input type=""number""
                                                   class=""form-control form-control-xs""
                                                   style=""text-align: right""
                                                   v-if=""ca.abierto""
                                                   v-model=""ca.cantidadAc");
            WriteLiteral(@"umAjustePeriodo""
                                                   v-on:keyup=""ajustar()"" />
                                            <span v-else title=""Cerrado"">
                                                {{getNumeroFormateado(ca.cantidadAcumAjustePeriodo)}}
                                            </span>
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(ca.cantidadAcumActual)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(ca.porcentajeCumplidoSobreAcumuladoActual)}}
                                        </td>
                                        <td></td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(ca.importeAcumAnte");
            WriteLiteral(@"rior)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(ca.importeAcumPeriodo)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(ca.importeAcumAjustePeriodo)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(ca.importeAcumActual)}}
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Certificados por Contratistas-->
    <div class=""col-md-12"">");
            WriteLiteral(@"
        <div class=""card animate__animated animate__fadeIn""
             v-if=""vista === 'certificados x contratistas'"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <button type=""button"" class=""btn btn-default float-right""
                                ");
            WriteLiteral(@"@click=""recargandoProyCertificado = true; recargarProyCertificado()""
                                style=""margin-left:0.5em""
                                v-if=""!recargandoProyCertificado && !cerrandoContrCertificado"">
                            <i class=""fas fa-arrow-left""></i>
                            Volver
                        </button>
                        <button type=""button"" class=""btn btn-default float-right""
                                style=""margin-right:5em""
                                v-if=""recargandoProyCertificado"">
                            <div class=""spinner-border""
                                 style=""width:1em; height: 1em"">
                                <span class=""sr-only"">Loading...</span>
                            </div>
                            Recargando...
                        </button>
                        <button type=""button"" class=""btn btn-default float-right""
                                style=""margin-right:5em""
     ");
            WriteLiteral(@"                           v-if=""cerrandoContrCertificado"">
                            <div class=""spinner-border""
                                 style=""width:1em; height: 1em"">
                                <span class=""sr-only"">Loading...</span>
                            </div>
                            Cerrando...
                        </button>
                        <h5 class=""m-0"">{{ oProyCertificado.detalle }}</h5>
                    </div>
                </div>
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-4"" v-for=""oContrCertificado in oProyCertificado_x_Contr.lContrCertificados"">
                        <div class=""card"" v-bind:class=""{ 'bg-green': !oContrCertificado.abierto}"">
                            <div class=""card-body"">
                                <div class=""row"">
                                    <div class=""col-md-8 text-truncate"">
                                      ");
            WriteLiteral(@"  <h5 v-bind:title=""oContrCertificado.nombre"" v-if=""oContrCertificado.numeroCertificado == 0"">
                                            {{oContrCertificado.nombre}}
                                        </h5>
                                        <h5 v-bind:title=""oContrCertificado.nombre"" v-else>
                                            {{""Certificado N° "" + oContrCertificado.numeroCertificado +"" - ""+ oContrCertificado.nombre}}
                                        </h5>
                                    </div>
                                    <div class=""col-md-4 text-truncate"">
                                        <button type=""button"" class=""btn btn-default btn-xs float-right""
                                                v-if=""oContrCertificado.abierto""
                                                title=""Editar Certificado""
                                                ");
            WriteLiteral(@"@click=""abrirABMContrCertificados(oContrCertificado, true)"">
                                            <i class=""fas fa-edit""></i>
                                        </button>
                                        <button type=""button"" class=""btn btn-default btn-xs float-right""
                                                v-if=""oContrCertificado.abierto""
                                                title=""Cerrar Certificado""
                                                ");
            WriteLiteral(@"@click=""cerrandoContrCertificado = true; cerrarContrCertificado(oContrCertificado)""
                                                style=""margin-right: 1em"">
                                            <i class=""fas fa-lock""></i>
                                        </button>
                                        <button type=""button"" class=""btn btn-default btn-xs float-right""
                                                title=""Ver Certificado""
                                                ");
            WriteLiteral(@"@click=""abrirABMContrCertificados(oContrCertificado, false)"">
                                            <i class=""fas fa-eye""></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Certificado Contratista X-->
    <div class=""col-md-12"">
        <div id=""divCertificado""
             class=""card animate__animated animate__fadeIn""
             v-if=""vista === 'certificado contratista x'"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <button type=""button""
                                class=""btn btn-default float-right no-printable""
                                ");
            WriteLiteral(@"@click=""volverListaContrCertificados()"">
                            <i class=""fas fa-arrow-left""></i>
                            Volver
                        </button>
                        <button id=""btnEnviarCertificado""
                                class=""btn btn-default float-right no-printable""
                                style=""margin-right: 0.5em""
                                ");
            WriteLiteral(@"@click=""imprimirContrCertificado()""
                                v-if=""(!viendoCertificado || !oContrCertificado.abierto) && !desdeFiltrosMultiples""
                                v-show=""!oContrCertificado.abierto"">
                            <i class=""fas fa-file-pdf""></i>
                            Enviar Certificado
                        </button>
                        <button id=""btnImprimirCertificado""
                                class=""btn btn-default float-right no-printable""
                                style=""margin-right: 0.5em""
                                ");
            WriteLiteral(@"@click=""imprimirContrCertificado()""
                                v-if=""(viendoCertificado && oContrCertificado.abierto) || desdeFiltrosMultiples""
                                v-show=""oContrCertificado.abierto || desdeFiltrosMultiples"">
                            <i class=""fas fa-file-pdf""></i>
                            Imprimir vista previa
                        </button>
                        <h5 class=""m-0"">{{ oProyCertificado.detalle }}</h5>
                    </div>
                </div>
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <h1 style=""color: darkgray; text-align: center""
                            v-if=""oContrCertificado.abierto && !certEditable"">
                            VISTA PREVIA (NO VÁLIDO COMO CERTIFICADO)
                        </h1>
                        <h5 v-if=""oContrCertificado.numeroCertificado == 0"">
                            {{ ""C");
            WriteLiteral(@"ontratista: "" + oContrCertificado.nombre }}
                        </h5>
                        <h5 v-else>
                            {{ ""Contratista: "" + oContrCertificado.nombre  + "" - Certificado N° "" + oContrCertificado.numeroCertificado }}
                        </h5>
                        <h5></h5>
                        <div class=""table-responsive"">
                            <table class=""table table-hover table-striped"">
                                <tbody>
                                    <!--PLANIFICADAS-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            PLANIFICADAS
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""planificadasVisibles = false""
                                                    v-show=""planificadasVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""planificadasVisibles = true""
                                                    v-show=""!planificadasVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""oProyCertificado_x_Contr.esCertificadoCero && !grabandoImportesAnteriores && certEditable""
                                                    ");
            WriteLiteral(@"@click=""grabandoImportesAnteriores = true; grabarImportesAnteriores()""
                                                    title=""Grabar Importes Anteoriores"">
                                                <i class=""fas fa-check""></i>
                                                Grabar
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""grabandoImportesAnteriores"">
                                                <div class=""spinner-border""
                                                     style=""width:1em; height: 1em"">
                                                    <span class=""sr-only"">Loading...</span>
                                                </div>
                                                Grabando...
                               ");
            WriteLiteral(@"             </button>
                                        </th>
                                    </tr>
                                    <tr v-if=""planificadasVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th colspan=""10""></th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Avance Físico</th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Importes</th>
                                        <th></th>
                                    </tr>
                                    <tr v-if=""planificadasVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th>Item</th>
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                ");
            WriteLiteral(@"                        <th>Comentario</th>
                                        <th>Ud. Medida</th>
                                        <th>Partida</th>
                                        <th style=""text-align:right"">Cantidad Plan.</th>
                                        <th style=""text-align:right"">Monto Unit.</th>
                                        <th style=""text-align:right"">Total a Realizar</th>
                                        <th></th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right"">Acumulado</th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                       ");
            WriteLiteral(@" <th style=""text-align:right"">Acumulado</th>
                                        <th></th>
                                    </tr>
                                    <tr v-for=""(oPCPPA, index) in oContrCertificado.lPCPPAs""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""planificadasVisibles"">
                                        <td>{{index + 1}}</td>
                                        <td>{{oPCPPA.ubicacion}}</td>
                                        <td>{{oPCPPA.actividad}}</td>
                                        <td>{{oPCPPA.actividadDescripcion}}</td>
                                        <td>{{oPCPPA.unidadMedida}}</td>
                                        <td>{{oPCPPA.codigoPartidaPresupuestaria}}</td>
                                        <td style=""text-align: right;"">{{getNumeroFormateado(oPCPPA.cantidadPlanificada)}}</td>
                                        <td style=""text");
            WriteLiteral(@"-align: right"">${{getNumeroFormateado(oPCPPA.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.cantidadPlanificada * oPCPPA.montoPlanificado)}}</td>
                                        <td></td>
                                        <td class=""black-left-border"" style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">{{getNumeroFormateado(oPCPPA.cantidadAcumPeriodo + oPCPPA.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA.cantidadAcumActual)}}</td>
                                        <td style=""text-align: right; white-space: nowrap;""
                                            v-if=""oProyCertificado_x_Contr.esCertificadoCero && certEditable"">
                                            <span>$</span><input type=""text"" v-mo");
            WriteLiteral("del=\"oPCPPA._ImporteAcumAnterior\"\r\n                                                                 style=\"text-align: right; display: inline;\"\r\n                                                                 ");
            WriteLiteral(@"@blur=""oPCPPA._ImporteAcumAnterior =
                                                                 getNumeroFormateadoEditable(oPCPPA._ImporteAcumAnterior);
                                                                 recalcularTotales()""
                                                                 class=""form-control form-control-sm"" />
                                        </td>
                                        <td class=""black-left-border"" style=""text-align: right"" v-else>
                                            ${{getNumeroFormateado(oPCPPA.importeAcumAnterior)}}
                                        </td>
                                        <td style=""text-align: right"" class=""bg-info"">${{getNumeroFormateado(oPCPPA.importeAcumPeriodo + oPCPPA.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA.importeAcumAnterior + oPCPPA.importeAcumPeriodo + oPCPPA.importeAcumAjustePeriodo)}}</td>
   ");
            WriteLiteral(@"                                     <td></td>
                                    </tr>
                                    <!--TOTALES-->
                                    <tr>
                                        <th colspan=""8"" style=""text-align: right;"">TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_plan_a_realizar)}}</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_plan_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_plan_periodo)}}</th>
                                      ");
            WriteLiteral(@"  <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_plan_acumulado)}}</th>
                                        <th></th>
                                    </tr>
                                    <tr>
                                        <th colspan=""13""></th>
                                        <th style=""text-align: right; font-size: 1.2em"">
                                            {{getNumeroFormateado(oContrCertificado.impTotal_plan_anterior * 100 / (oContrCertificado.impTotal_plan_a_realizar == 0 ? 1 : oContrCertificado.impTotal_plan_a_realizar))}}%
                                        </th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">
                                            {{getNumeroFormateado(oContrCertificado.impTotal_plan_periodo * 100 / (oContrCertificado.impTotal_plan_a_realizar == 0 ? 1 : oContrCertificado.impTotal_plan_a_realizar))}}%
                    ");
            WriteLiteral(@"                    </th>
                                        <th style=""text-align: right; font-size: 1.2em"">
                                            {{getNumeroFormateado(oContrCertificado.impTotal_plan_acumulado * 100 / (oContrCertificado.impTotal_plan_a_realizar == 0 ? 1 : oContrCertificado.impTotal_plan_a_realizar))}}%
                                        </th>
                                        <th></th>
                                    </tr>


                                    <!--CON AJUSTES-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray-light"" style=""font-size: 1.5em; border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            CON AJUSTES
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""conAjustesVisibles = false; conAjustesAdicPlanVisibles = false; conAjustesAdicVisibles = false""
                                                    v-show=""conAjustesVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""conAjustesVisibles = true; conAjustesAdicPlanVisibles = true; conAjustesAdicVisibles = true""
                                                    v-show=""!conAjustesVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                        </th>
                                    </tr>

                                    <!--CON AJUSTES - ADICIONALES PLANIFICADAS-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            ADICIONALES PLANIFICADAS
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""conAjustesAdicPlanVisibles = false""
                                                    v-show=""conAjustesAdicPlanVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""conAjustesAdicPlanVisibles = true""
                                                    v-show=""!conAjustesAdicPlanVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""!grabandoAdicionalesPlanificadas && oContrCertificado.abierto && certEditable""
                                                    ");
            WriteLiteral(@"@click=""grabandoAdicionalesPlanificadas = true; grabarAdicionalesPlanificadas()""
                                                    title=""Grabar Adicionales"">
                                                <i class=""fas fa-check""></i>
                                                Grabar
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""grabandoAdicionalesPlanificadas"">
                                                <div class=""spinner-border""
                                                     style=""width:1em; height: 1em"">
                                                    <span class=""sr-only"">Loading...</span>
                                                </div>
                                                Grabando...
                         ");
            WriteLiteral(@"                   </button>
                                        </th>
                                    </tr>
                                    <tr v-if=""conAjustesAdicPlanVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th colspan=""10""></th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Avance Físico</th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Importes</th>
                                        <th></th>
                                    </tr>
                                    <tr v-if=""conAjustesAdicPlanVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th>Item</th>
                                        <th>Ubicación</th>
                                        <th>Actividad</th>");
            WriteLiteral(@"
                                        <th>Comentario</th>
                                        <th>Ud. Medida</th>
                                        <th>Partida</th>
                                        <th style=""text-align:right"">Cantidad Plan.</th>
                                        <th style=""text-align:right"">Monto Unit.</th>
                                        <th style=""text-align:right"">Total a Realizar</th>
                                        <th></th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right"">Acumulado</th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                     ");
            WriteLiteral(@"                   <th style=""text-align:right"">Acumulado</th>
                                        <th></th>
                                    </tr>
                                    <tr v-for=""(oPCPPA_AP, index) in getPCPPA_AP_Ajustables""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""conAjustesAdicPlanVisibles"">
                                        <td>{{index + 1}}</td>
                                        <td>{{oPCPPA_AP.ubicacion}}</td>
                                        <td>{{oPCPPA_AP.actividad}}</td>
                                        <td>{{oPCPPA_AP.actividadDescripcion}}</td>
                                        <td>{{oPCPPA_AP.unidadMedida}}</td>
                                        <td>{{oPCPPA_AP.codigoPartidaPresupuestaria}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA_AP.cantidadPlanificada)}}</td>
              ");
            WriteLiteral(@"                          <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA_AP.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA_AP.cantidadPlanificada * oPCPPA_AP.montoPlanificado)}}</td>
                                        <td></td>
                                        <td class=""black-left-border"" style=""text-align: right;"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right;"" class=""bg-info"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumPeriodo + oPCPPA_AP.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right;"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumActual)}}</td>
                                        <td class=""black-left-border"" style=""text-align: right;"">${{getNumeroFormateado(oPCPPA_AP.importeAcumAnterior)}}</td>
                                        <td style=""text-align: ");
            WriteLiteral(@"right;"" class=""bg-info"">${{getNumeroFormateado(oPCPPA_AP.importeAcumPeriodo + oPCPPA_AP.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right;"">${{getNumeroFormateado(oPCPPA_AP.importeAcumAnterior + oPCPPA_AP.importeAcumPeriodo + oPCPPA_AP.importeAcumAjustePeriodo)}}</td>
                                        <td>
                                            <button type=""button"" class=""btn btn-xs btn-default""
                                                    v-if=""certEditable""
                                                    ");
            WriteLiteral(@"@click=""oPCPPA_AP.montosAjustables = false; recalcularTotales()""
                                                    title=""Mandar a 'Sin Ajustes'"">
                                                <i class=""fas fa-arrow-down""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <!--CON AJUSTES - TOTALES-->
                                    <tr>
                                        <th colspan=""8"" style=""text-align: right;"">TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_plan_a_realizar)}}</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th style=""text-al");
            WriteLiteral(@"ign: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_plan_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_plan_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_plan_acumulada)}}</th>
                                        <th></th>
                                    </tr>

                                    <!--CON AJUSTES ADICIONALES-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            ADICIONALES
                                            <button type=""button"" class=""btn btn-tool float-right""
                                 ");
            WriteLiteral("                   ");
            WriteLiteral(@"@click=""conAjustesAdicVisibles = false""
                                                    v-show=""conAjustesAdicVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""conAjustesAdicVisibles = true""
                                                    v-show=""!conAjustesAdicVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""!grabandoAdicionales && oContrCertificado.abierto && certEditable""
                                                    ");
            WriteLiteral(@"@click=""grabandoAdicionales = true; grabarAdicionales()""
                                                    title=""Grabar Adicionales"">
                                                <i class=""fas fa-check""></i>
                                                Grabar
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""grabandoAdicionales"">
                                                <div class=""spinner-border""
                                                     style=""width:1em; height: 1em"">
                                                    <span class=""sr-only"">Loading...</span>
                                                </div>
                                                Grabando...
                                            </button>
      ");
            WriteLiteral(@"                                  </th>
                                    </tr>
                                    <tr v-if=""conAjustesAdicVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th colspan=""10""></th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center"">Avance Físico</th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center"">Importes</th>
                                        <th></th>
                                    </tr>
                                    <tr v-if=""conAjustesAdicVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th>Item</th>
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                                        <th>");
            WriteLiteral(@"Comentario</th>
                                        <th>Ud. Medida</th>
                                        <th>Partida</th>
                                        <th style=""text-align:right"">Cantidad Plan.</th>
                                        <th style=""text-align:right"">Monto Unit.</th>
                                        <th style=""text-align:right"">Total a Realizar</th>
                                        <th></th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right"">Acumulado</th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right");
            WriteLiteral(@""">Acumulado</th>
                                        <th></th>
                                    </tr>
                                    <tr v-show=""conAjustesAdicVisibles"" v-if=""certEditable""
                                        class=""animate__animated animate__fadeIn"">
                                        <td></td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.ubicacion""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjustables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.act");
            WriteLiteral(@"ividad""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjustables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.actividadDescripcion""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjustables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.unidadMedida""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjus");
            WriteLiteral(@"tables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td>
                                            <select class=""form-control form-control-sm""
                                                    v-model=""oPCPDAC_A_Nuevo_Ajustable.codigoPartidaPresupuestaria"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd122570", async() => {
                WriteLiteral("\r\n                                                    {{ oPartidaPresupuestaria.codigoDescripcion }}\r\n                                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"">
                                            <input type=""number"" class=""form-control form-control-sm""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.monto""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjustables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                        <td class=""black-left-border"" style=""text-align: right"">-</td>
                                        <td style=""text-ali");
            WriteLiteral(@"gn: right"" class=""bg-info"">
                                            <input type=""number"" class=""form-control form-control-sm""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A_Nuevo_Ajustable.cantidad""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_Ajustable.montosAjustables = true; agregarPCPDAC_Adicional(true);"" />
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td class=""black-left-border"" style=""text-align: right"">-</td>
                                        <td style=""text-align: right"" class=""bg-info"">-</td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                    </tr>
                                    <tr v-for=""(oPCPDAC_A, index) ");
            WriteLiteral(@"in getPCPDAC_A_Ajustables.filter(pcpdaca => oProyCertificado_x_Contr.id == pcpdaca.proyCertificadoId)""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""conAjustesAdicVisibles"">
                                        <td>
                                            <span v-if=""!certEditable"">{{index + 1}}</span>
                                            <button type=""button"" class=""btn btn-xs btn-danger float-left""
                                                    style=""margin-right: 0.5em""
                                                    title=""Quitar""
                                                    v-if=""certEditable && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                                    ");
            WriteLiteral(@"@click=""eliminarAdicional(oPCPDAC_A._index)"">
                                                <i class=""fas fa-trash""></i>
                                            </button>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.ubicacion""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.ubicacion}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.actividad""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.actividad}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.actividadDescripcion""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.actividadDescripcion}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.unidadMedida""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.unidadMedida}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <select class=""form-control form-control-sm""
                                                    v-model=""oPCPDAC_A.codigoPartidaPresupuestaria""
                                                    v-if=""oPCPDAC_A.editando && certEditable"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd130470", async() => {
                WriteLiteral("\r\n                                                    {{ oPartidaPresupuestaria.codigoDescripcion }}\r\n                                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                            <span v-else>{{oPCPDAC_A.codigoPartidaPresupuestaria}}</span>
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                            style=""text-align: right"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A.monto""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>${{getNumeroFormateado(parseFloat(oPCPDAC_A.monto))}}</span>
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPDAC_A.");
            WriteLiteral("cantidadAcumAnterior)}}</td>\r\n                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                            style=""text-align: right"" class=""bg-info"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A.cantidad""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false;"" />
                                            <span v-else>{{getNumeroFormateado(parseFloat(oPCPDAC_A.cantidad))}}</span>
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPDAC_A.cantidad)}}
                                        </td>
                      ");
            WriteLiteral(@"                  <td style=""text-align: right"">${{getNumeroFormateado(oPCPDAC_A.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            ${{getNumeroFormateado(oPCPDAC_A.cantidad * oPCPDAC_A.monto)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado((oPCPDAC_A.cantidad * oPCPDAC_A.monto) + oPCPDAC_A.importeAcumAnterior)}}
                                        </td>
                                        <td>
                                            <button type=""button"" class=""btn btn-xs btn-default""
                                                    ");
            WriteLiteral(@"@click=""oPCPDAC_A.montosAjustables = false; recalcularTotales()""
                                                    v-if=""certEditable && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                                    title=""Mandar a 'Sin Ajustes'"">
                                                <i class=""fas fa-arrow-down""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <tr style=""border-top: 2px solid red"">
                                        <td colspan=""17""></td>
                                    </tr>
                                    <tr v-for=""(oPCPDAC_A, index) in getPCPDAC_A_Ajustables.filter(pcpdaca => oProyCertificado_x_Contr.id != pcpdaca.proyCertificadoId)""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""conAjustesAdicVisibles""
 ");
            WriteLiteral(@"                                       title=""Adicionales de Certificados Anteriores"">
                                        <td>
                                            {{index + 1}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.ubicacion}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.actividad}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.actividadDescripcion}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.unidadMedida}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.codigoPartidaPresupu");
            WriteLiteral(@"estaria}}
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(parseFloat(oPCPDAC_A.monto))}}
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPDAC_A.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            {{getNumeroFormateado(parseFloat(oPCPDAC_A.cantidad))}}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPDAC_A.cantidad)}}
            ");
            WriteLiteral(@"                            </td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPDAC_A.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            ${{getNumeroFormateado(oPCPDAC_A.cantidad * oPCPDAC_A.monto)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado((oPCPDAC_A.cantidad * oPCPDAC_A.monto) + oPCPDAC_A.importeAcumAnterior)}}
                                        </td>
                                        <td></td>
                                    </tr>
                                    <!--CON AJUSTES - TOTALES-->
                                    <tr>
                                        <th colspan=""13"" style=""text-align: right;"">TOTALES</th>
                                        <th style=""te");
            WriteLiteral(@"xt-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_adic_anterior + oContrCertificado.impTotal_ajustable_adic_acumulada)}}</th>
                                        <th></th>
                                    </tr>

                                    <!--CON AJUSTES TOTAL DE TOTALES-->
                                    <tr>
                                        <td colspan=""17"" style=""border-bottom: 1px solid gray; padding-top: 1em !important""></td>
                                    </tr>
                                    <tr>
                                        <th colspan=""13"" style=""text");
            WriteLiteral(@"-align:right"">CON AJUSTES - TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_acumulado)}}</th>
                                        <th></th>
                                    </tr>


                                    <!-- *********************** -->
                                    <!--SIN AJUSTES-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray-light"" style=""font-size: 1.5em; border-bottom: 1px solid gray; padding-top: 1em !important"">
                                    ");
            WriteLiteral("        SIN AJUSTES\r\n                                            <button type=\"button\" class=\"btn btn-tool float-right\"\r\n                                                    ");
            WriteLiteral(@"@click=""sinAjustesVisibles = false; sinAjustesAdicPlanVisibles = false; sinAjustesAdicVisibles = false""
                                                    v-show=""sinAjustesVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustesVisibles = true; sinAjustesAdicPlanVisibles = true; sinAjustesAdicVisibles = true""
                                                    v-show=""!sinAjustesVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                        </th>
                                    </tr>

                                    <!--SIN AJUSTES - ADICIONALES PLANIFICADAS-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            ADICIONALES PLANIFICADAS
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustesAdicPlanVisibles = false""
                                                    v-show=""sinAjustesAdicPlanVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustesAdicPlanVisibles = true""
                                                    v-show=""!sinAjustesAdicPlanVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""!grabandoAdicionalesPlanificadas && oContrCertificado.abierto && certEditable""
                                                    ");
            WriteLiteral(@"@click=""grabandoAdicionalesPlanificadas = true; grabarAdicionalesPlanificadas()""
                                                    title=""Grabar Adicionales"">
                                                <i class=""fas fa-check""></i>
                                                Grabar
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""grabandoAdicionalesPlanificadas"">
                                                <div class=""spinner-border""
                                                     style=""width:1em; height: 1em"">
                                                    <span class=""sr-only"">Loading...</span>
                                                </div>
                                                Grabando...
                         ");
            WriteLiteral(@"                   </button>
                                        </th>
                                    </tr>
                                    <tr v-if=""sinAjustesAdicPlanVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th colspan=""10""></th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Avance Físico</th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center;"">Importes</th>
                                        <th></th>
                                    </tr>
                                    <tr v-if=""sinAjustesAdicPlanVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th>Item</th>
                                        <th>Ubicación</th>
                                        <th>Actividad</th>");
            WriteLiteral(@"
                                        <th>Comentario</th>
                                        <th>Ud. Medida</th>
                                        <th>Partida</th>
                                        <th style=""text-align:right"">Cantidad Plan.</th>
                                        <th style=""text-align:right"">Monto Unit.</th>
                                        <th style=""text-align:right"">Total a Realizar</th>
                                        <th></th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right"">Acumulado</th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                     ");
            WriteLiteral(@"                   <th style=""text-align:right"">Acumulado</th>
                                        <th></th>
                                    </tr>
                                    <tr v-for=""(oPCPPA_AP, index) in getPCPPA_AP_NoAjustables""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""sinAjustesAdicPlanVisibles"">
                                        <td>{{index + 1}}</td>
                                        <td>{{oPCPPA_AP.ubicacion}}</td>
                                        <td>{{oPCPPA_AP.actividad}}</td>
                                        <td>{{oPCPPA_AP.actividadDescripcion}}</td>
                                        <td>{{oPCPPA_AP.unidadMedida}}</td>
                                        <td>{{oPCPPA_AP.codigoPartidaPresupuestaria}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA_AP.cantidadPlanificada)}}</td>
            ");
            WriteLiteral(@"                            <td style=""text-align: right"">${{getNumeroFormateado(oPCPPA_AP.montoPlanificado)}}</td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPPA_AP.cantidadPlanificada * oPCPPA_AP.montoPlanificado)}}</td>
                                        <td></td>
                                        <td class=""black-left-border"" style=""text-align: right;"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right;"" class=""bg-info"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumPeriodo + oPCPPA_AP.cantidadAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right;"">{{getNumeroFormateado(oPCPPA_AP.cantidadAcumActual)}}</td>
                                        <td class=""black-left-border"" style=""text-align: right;"">${{getNumeroFormateado(oPCPPA_AP.importeAcumAnterior)}}</td>
                                        <td style=""text-align");
            WriteLiteral(@": right;"" class=""bg-info"">${{getNumeroFormateado(oPCPPA_AP.importeAcumPeriodo + oPCPPA_AP.importeAcumAjustePeriodo)}}</td>
                                        <td style=""text-align: right;"">${{getNumeroFormateado(oPCPPA_AP.importeAcumAnterior + oPCPPA_AP.importeAcumPeriodo + oPCPPA_AP.importeAcumAjustePeriodo)}}</td>
                                        <td>
                                            <button type=""button"" class=""btn btn-xs btn-default""
                                                    ");
            WriteLiteral(@"@click=""oPCPPA_AP.montosAjustables = true; recalcularTotales()""
                                                    v-if=""certEditable""
                                                    title=""Mandar a 'Con Ajustes'"">
                                                <i class=""fas fa-arrow-up""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <!--SIN AJUSTES - TOTALES-->
                                    <tr>
                                        <th colspan=""8"" style=""text-align: right;"">TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_plan_a_realizar)}}</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                     ");
            WriteLiteral(@"   <th></th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_plan_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_plan_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(impTotal_noAjustable_adic_plan_anterior + oContrCertificado.impTotal_noAjustable_adic_plan_acumulada)}}</th>
                                        <th></th>
                                    </tr>

                                    <!--SIN AJUSTES ADICIONALES-->
                                    <tr>
                                        <th colspan=""17"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                            ADICIONALES
             ");
            WriteLiteral("                               <button type=\"button\" class=\"btn btn-tool float-right\"\r\n                                                    ");
            WriteLiteral(@"@click=""sinAjustesAdicVisibles = false""
                                                    v-show=""sinAjustesAdicVisibles"">
                                                <i class=""fas fa-minus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-tool float-right""
                                                    ");
            WriteLiteral(@"@click=""sinAjustesAdicVisibles = true""
                                                    v-show=""!sinAjustesAdicVisibles"">
                                                <i class=""fas fa-plus""></i>
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""!grabandoAdicionales && oContrCertificado.abierto && certEditable""
                                                    ");
            WriteLiteral(@"@click=""grabandoAdicionales = true; grabarAdicionales()""
                                                    title=""Grabar Adicionales"">
                                                <i class=""fas fa-check""></i>
                                                Grabar
                                            </button>
                                            <button type=""button"" class=""btn btn-primary float-right""
                                                    style=""margin-right:2em""
                                                    v-if=""grabandoAdicionales"">
                                                <div class=""spinner-border""
                                                     style=""width:1em; height: 1em"">
                                                    <span class=""sr-only"">Loading...</span>
                                                </div>
                                                Grabando...
                                            </button>
      ");
            WriteLiteral(@"                                  </th>
                                    </tr>
                                    <tr v-if=""sinAjustesAdicVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th colspan=""10""></th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center"">Avance Físico</th>
                                        <th class=""black-left-border"" colspan=""3"" style=""text-align: center"">Importes</th>
                                        <th></th>
                                    </tr>
                                    <tr v-if=""sinAjustesAdicVisibles""
                                        class=""animate__animated animate__fadeIn"">
                                        <th>Item</th>
                                        <th>Ubicación</th>
                                        <th>Actividad</th>
                                        <th>");
            WriteLiteral(@"Comentario</th>
                                        <th>Ud. Medida</th>
                                        <th>Partida</th>
                                        <th style=""text-align:right"">Cantidad Plan.</th>
                                        <th style=""text-align:right"">Monto Unit.</th>
                                        <th style=""text-align:right"">Total a Realizar</th>
                                        <th></th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right"">Acumulado</th>
                                        <th class=""black-left-border"" style=""text-align:right"">Anterior</th>
                                        <th style=""text-align:right"" class=""bg-info"">Actual</th>
                                        <th style=""text-align:right");
            WriteLiteral(@""">Acumulado</th>
                                        <th></th>
                                    </tr>
                                    <tr v-show=""sinAjustesAdicVisibles && certEditable""
                                        class=""animate__animated animate__fadeIn"">
                                        <td></td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable.ubicacion""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAjustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable");
            WriteLiteral(@".actividad""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAjustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable.actividadDescripcion""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAjustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable.unidadMedida""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAj");
            WriteLiteral(@"ustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td>
                                            <select class=""form-control form-control-sm""
                                                    v-model=""oPCPDAC_A_Nuevo_NoAjustable.codigoPartidaPresupuestaria"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd159584", async() => {
                WriteLiteral("\r\n                                                    {{ oPartidaPresupuestaria.codigoDescripcion }}\r\n                                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"">
                                            <input type=""number"" class=""form-control form-control-sm""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable.monto""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAjustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"" class=""bg");
            WriteLiteral(@"-info"">
                                            <input type=""number"" class=""form-control form-control-sm""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A_Nuevo_NoAjustable.cantidad""
                                                   v-on:keyup.enter=""oPCPDAC_A_Nuevo_NoAjustable.montosAjustables = false; agregarPCPDAC_Adicional(false);"" />
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"" class=""bg-info"">-</td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                    </tr>
                                    <tr v-for=""(oPCPDAC_A, index) in getPCPDAC_A_NoAjustables.filter(pcpda");
            WriteLiteral(@"ca => oProyCertificado_x_Contr.id == pcpdaca.proyCertificadoId)""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""sinAjustesAdicVisibles"">
                                        <td>
                                            <span v-if=""!certEditable"">{{index + 1}}</span>
                                            <button type=""button"" class=""btn btn-xs btn-danger float-left""
                                                    style=""margin-right: 0.5em""
                                                    title=""Quitar""
                                                    v-if=""certEditable && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                                    ");
            WriteLiteral(@"@click=""eliminarAdicional(oPCPDAC_A._index)"">
                                                <i class=""fas fa-trash""></i>
                                            </button>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.ubicacion""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.ubicacion}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.actividad""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.actividad}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.actividadDescripcion""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.actividadDescripcion}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   v-model=""oPCPDAC_A.unidadMedida""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{oPCPDAC_A.unidadMedida}}</span>
                                        </td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id"">
                                            <select class=""form-control form-control-sm""
                                                    v-model=""oPCPDAC_A.codigoPartidaPresupuestaria""
                                                    v-if=""oPCPDAC_A.editando && certEditable"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8774deacc4f83daf7ceab0ef13986135c4a8a3bd167442", async() => {
                WriteLiteral("\r\n                                                    {{ oPartidaPresupuestaria.codigoDescripcion }}\r\n                                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                            <span v-else>{{oPCPDAC_A.codigoPartidaPresupuestaria}}</span>
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                            style=""text-align: right"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A.monto""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>${{getNumeroFormateado(parseFloat(oPCPDAC_A.monto))}}</span>
                                        </td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPDAC_A.cantidadAcumAnterior)}}</td>
                                        <td></td>
                                        <td clas");
            WriteLiteral("s=\"black-left-border\" style=\"text-align: right\">-</td>\r\n                                        <td ");
            WriteLiteral(@"@click=""oPCPDAC_A.editando = true && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                            style=""text-align: right"" class=""bg-info"">
                                            <input type=""text"" class=""form-control""
                                                   v-if=""oPCPDAC_A.editando && certEditable""
                                                   style=""text-align: right""
                                                   v-model=""oPCPDAC_A.cantidad""
                                                   v-on:keyup.enter=""oPCPDAC_A.editando = false; recalcularTotales()"" />
                                            <span v-else>{{getNumeroFormateado(parseFloat(oPCPDAC_A.cantidad))}}</span>
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPDAC_A.cantidad)}}
                                        </td>
  ");
            WriteLiteral(@"                                      <td class=""black-left-border"" style=""text-align: right"">${{getNumeroFormateado(oPCPDAC_A.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            ${{getNumeroFormateado(oPCPDAC_A.cantidad * oPCPDAC_A.monto)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado((oPCPDAC_A.cantidad * oPCPDAC_A.monto) + oPCPDAC_A.importeAcumAnterior)}}
                                        </td>
                                        <td>
                                            <button type=""button"" class=""btn btn-xs btn-default""
                                                    ");
            WriteLiteral(@"@click=""oPCPDAC_A.montosAjustables = true; recalcularTotales()""
                                                    v-if=""certEditable && oPCPDAC_A.proyCertificadoId == oProyCertificado_x_Contr.id""
                                                    title=""Mandar a 'Con Ajustes'"">
                                                <i class=""fas fa-arrow-up""></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <tr style=""border-top: 2px solid red"">
                                        <td colspan=""17""></td>
                                    </tr>
                                    <tr v-for=""(oPCPDAC_A, index) in getPCPDAC_A_NoAjustables.filter(pcpdaca => oProyCertificado_x_Contr.id != pcpdaca.proyCertificadoId)""
                                        class=""animate__animated animate__fadeIn""
                                        v-show=""conAjustesAdicVisibles""
  ");
            WriteLiteral(@"                                      title=""Adicionales de Certificados Anteriores"">
                                        <td>
                                            {{index + 1}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.ubicacion}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.actividad}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.actividadDescripcion}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.unidadMedida}}
                                        </td>
                                        <td>
                                            {{oPCPDAC_A.codigoPartidaPresupue");
            WriteLiteral(@"staria}}
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado(parseFloat(oPCPDAC_A.monto))}}
                                        </td>
                                        <td style=""text-align: right"">-</td>
                                        <td></td>
                                        <td style=""text-align: right"">{{getNumeroFormateado(oPCPDAC_A.cantidadAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            {{getNumeroFormateado(parseFloat(oPCPDAC_A.cantidad))}}
                                        </td>
                                        <td style=""text-align: right"">
                                            {{getNumeroFormateado(oPCPDAC_A.cantidad)}}
             ");
            WriteLiteral(@"                           </td>
                                        <td style=""text-align: right"">${{getNumeroFormateado(oPCPDAC_A.importeAcumAnterior)}}</td>
                                        <td style=""text-align: right"" class=""bg-info"">
                                            ${{getNumeroFormateado(oPCPDAC_A.cantidad * oPCPDAC_A.monto)}}
                                        </td>
                                        <td style=""text-align: right"">
                                            ${{getNumeroFormateado((oPCPDAC_A.cantidad * oPCPDAC_A.monto) + oPCPDAC_A.importeAcumAnterior)}}
                                        </td>
                                        <td></td>
                                    </tr>
                                    <!--SIN AJUSTES - TOTALES-->
                                    <tr>
                                        <th colspan=""13"" style=""text-align: right;"">TOTALES</th>
                                        <th style=""tex");
            WriteLiteral(@"t-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">
                                            ${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_adic_anterior + oContrCertificado.impTotal_noAjustable_adic_acumulada)}}
                                        </th>
                                        <th></th>
                                    </tr>

                                    <!--SIN AJUSTES TOTAL DE TOTALES-->
                                    <tr>
                                        <td colspan=""17"" style=""border-bottom: 1px solid gray; padding-top: 1em !important""></td>
                                    </tr>
               ");
            WriteLiteral(@"                     <tr>
                                        <th colspan=""13"" style=""text-align:right"">SIN AJUSTES - TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"" class=""bg-info"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_periodo)}}</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_acumulado)}}</th>
                                        <th></th>
                                    </tr>

                                    <!--**********************-->
                                    <!--TOTAL DE TOTALES-->
                                    <tr>
                                        <td colspan=""17"" style=""border-bottom: 1px solid gray; paddin");
            WriteLiteral(@"g-top: 1.5em !important""></td>
                                    </tr>
                                    <tr>
                                        <th colspan=""13"" style=""text-align: right; padding: 1em !important"">TOTAL DE TOTALES</th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_anterior)}}</th>
                                        <th style=""text-align: right; font-size: 1.5em;""><strong class=""text-info"">${{getNumeroFormateado(oContrCertificado.impTotal_periodo)}}</strong></th>
                                        <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_acumulado)}}</th>
                                        <th></th>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=""col-");
            WriteLiteral(@"md-12"" style=""border: 0.2em solid gray"">
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <table class=""table table-hover table-striped"">
                                    <tbody>
                                        <tr>
                                            <th colspan=""3"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                                TOTALES / ACT. / DESCUENTOS
                                            </th>
                                            <td colspan=""2"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                                <div class=""icheck-primary float-right no-printable""
                                                     style=""margin-bottom: 0em !important; margin-top: 0em !important""
                                                     v-show=""oContrCertific");
            WriteLiteral("ado.abierto || esAdministracion\">\r\n                                                    <input type=\"checkbox\" v-model=\"oContrCertificado.emiteFactura\"\r\n                                                           ");
            WriteLiteral(@"@change=""oContrCertificado.porcentajeIVA = oContrCertificado.emiteFactura ? '21,00' : '0,00'; recalcularAjustes()""
                                                           id=""chbxEmiteFactura"">
                                                    <label for=""chbxEmiteFactura"">Emite Factura</label>
                                                </div>
                                                <span class=""printable"" v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{oContrCertificado.emiteFactura ? ""Emite Factura"" : ""No Emite factura""}}
                                                </span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        ");
            WriteLiteral(@"    <td></td>
                                            <th style=""text-align:right"">Neto</th>
                                        </tr>
                                        <tr>
                                            <td>SUB-TOTAL ACTIVIDADES PLANIFICADAS - (A)</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.impTotal_plan_periodo)}}</td>
                                        </tr>
                                        <tr>
                                            <td>Descuento por Anticipo</td>
                                            <td></td>
                                            <td style=""text-align: right;"">
                                                %
                                            </td>
                       ");
            WriteLiteral(@"                     <td style=""text-align: right;"">
                                                <input type=""text"" v-model=""oContrCertificado.porcentajeDescuentoAnticipo""
                                                       style=""text-align: right;""
                                                       ");
            WriteLiteral(@"@blur=""oContrCertificado.porcentajeDescuentoAnticipo =
                                                       getNumeroFormateadoEditable(oContrCertificado.porcentajeDescuentoAnticipo);
                                                       recalcularAjustes()""
                                                       v-on:keyup.enter=""oContrCertificado.porcentajeDescuentoAnticipo =
                                                       getNumeroFormateadoEditable(oContrCertificado.porcentajeDescuentoAnticipo);
                                                       recalcularAjustes()""
                                                       v-show=""oContrCertificado.abierto || esAdministracion""
                                                       class=""form-control form-control-sm no-printable"" />
                                                <span class=""printable"" v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{getNumeroFormateado(oCo");
            WriteLiteral(@"ntrCertificado.porcentajeDescuentoAnticipo)}}
                                                </span>
                                            </td>
                                            <td style=""text-align:right; color:red"">${{getNumeroFormateado(oContrCertificado.importeDescuentoAnticipo)}}</td>
                                        </tr>
                                        <tr>
                                            <td>Descuento por Adelanto</td>
                                            <td></td>
                                            <td>
                                            </td>
                                            <td style=""text-align: right; white-space: nowrap;"">
                                                <span class=""no-printable"" v-if=""certEditable || esAdministracion"">$</span><input type=""text"" v-model=""oContrCertificado.adelanto""
                                                                                                          ");
            WriteLiteral("                        style=\"text-align: right; display: inline;\"\r\n                                                                                                                                  ");
            WriteLiteral(@"@blur=""oContrCertificado.adelanto = getNumeroFormateadoEditable(oContrCertificado.adelanto);
                                                       recalcularAjustes();""
                                                                                                                                  v-on:keyup.enter=""oContrCertificado.adelanto = getNumeroFormateadoEditable(oContrCertificado.adelanto);
                                                       recalcularAjustes();""
                                                                                                                                  v-show=""oContrCertificado.abierto || esAdministracion""
                                                                                                                                  class=""form-control form-control-sm no-printable"" />
                                            </td>
                                            <td style=""text-align: right;"">
                                         ");
            WriteLiteral(@"       <span style=""color: red"">
                                                    ${{getNumeroFormateado(oContrCertificado.adelanto)}}
                                                </span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>SUB-TOTAL ACTIVIDADES ADICIONALES CON AJUSTE - (B)</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.impTotal_ajustable_periodo)}}</td>
                                        </tr>
                                        <tr>
                                            <td>TOTAL SUJETO A AJUSTE</td>
                                            <td></td>
                                       ");
            WriteLiteral(@"     <td></td>
                                            <td></td>
                                            <td style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.importeTotalSujetoAjuste)}}</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <br />
                                                Actualización - (C)
                                            </td>
                                            <td>
                                                <label>Índ. Base</label>
                                                <input type=""text"" v-model=""oContrCertificado.indiceBase""
                                                       style=""text-align: right;""
                                                       ");
            WriteLiteral(@"@blur=""oContrCertificado.indiceBase =
                                                       getNumeroFormateadoEditable(oContrCertificado.indiceBase);
                                                       recalcularAjustes();""
                                                       v-on:keyup.enter=""oContrCertificado.indiceBase =
                                                       getNumeroFormateadoEditable(oContrCertificado.indiceBase);
                                                       recalcularAjustes();""
                                                       class=""form-control form-control-sm no-printable""
                                                       v-show=""oContrCertificado.abierto || esAdministracion""
                                                       placeholder=""% Base"" />
                                                <span style=""margin-left: 0.5em""
                                                      class=""printable""
                                          ");
            WriteLiteral(@"            v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{getNumeroFormateado(oContrCertificado.indiceBase)}}
                                                </span>
                                            </td>
                                            <td>
                                                <label>Índ. Actual</label>
                                                <input type=""text"" v-model=""oContrCertificado.indiceActual""
                                                       style=""text-align: right;""
                                                       ");
            WriteLiteral(@"@blur=""oContrCertificado.indiceActual =
                                                       getNumeroFormateadoEditable(oContrCertificado.indiceActual);
                                                       recalcularAjustes();""
                                                       v-on:keyup.enter=""oContrCertificado.indiceActual =
                                                       getNumeroFormateadoEditable(oContrCertificado.indiceActual);
                                                       recalcularAjustes();""
                                                       class=""form-control form-control-sm no-printable""
                                                       v-show=""oContrCertificado.abierto || esAdministracion""
                                                       placeholder=""% Actual"" />
                                                <span style=""margin-left: 0.5em""
                                                      class=""printable""
                                ");
            WriteLiteral(@"                      v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{getNumeroFormateado(oContrCertificado.indiceActual)}}
                                                </span>
                                            </td>
                                            <td>
                                                <label>Coef.</label>
                                                <div style=""text-align:right"">{{getNumeroFormateadoEditable(oContrCertificado.porcentajeActualizacion)}}%</div>
                                            </td>
                                            <td style=""text-align:right"">
                                                <br />
                                                ${{getNumeroFormateado(oContrCertificado.importeActualizacion)}}
                                            </td>
                                        </tr>
                                        <tr>
     ");
            WriteLiteral(@"                                       <td>SUB-TOTAL ACTIVIDADES ADICIONALES SIN AJUSTE - (D)</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.impTotal_noAjustable_periodo)}}</td>
                                        </tr>
                                        <tr>
                                            <th>NETO A FACTURAR</th>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <th style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.impTotal_NetoAFacturar)}}</th>
                                        </tr>
                                        <tr>
                                        ");
            WriteLiteral(@"    <td>IVA</td>
                                            <td></td>
                                            <td style=""text-align: right"">%</td>
                                            <td style=""text-align: right;"">
                                                <input type=""text"" v-model=""oContrCertificado.porcentajeIVA""
                                                       style=""text-align: right;""
                                                       ");
            WriteLiteral(@"@blur=""oContrCertificado.porcentajeIVA =
                                                   getNumeroFormateadoEditable(oContrCertificado.porcentajeIVA);
                                                   recalcularAjustes();""
                                                       v-on:keyup.enter=""oContrCertificado.porcentajeIVA =
                                                   getNumeroFormateadoEditable(oContrCertificado.porcentajeIVA);
                                                   recalcularAjustes();""
                                                       v-show=""oContrCertificado.abierto || esAdministracion""
                                                       class=""form-control form-control-sm no-printable"" />
                                                <span class=""printable""
                                                      v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{getNumeroFormateado(oContrCertificado.");
            WriteLiteral(@"porcentajeIVA)}}
                                                </span>
                                            </td>
                                            <td style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.imp_IVA)}}</td>
                                        </tr>
                                        <tr>
                                            <th>TOTAL A FACTURAR</th>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <th style=""text-align:right"">${{getNumeroFormateado(oContrCertificado.impTotal_IVAIncluido)}}</th>
                                        </tr>
                                        <tr>
                                            <td>
                                                Fondo de Reparo (sobre A+B+C+D)
                                            </td>
                   ");
            WriteLiteral(@"                         <td></td>
                                            <td style=""text-align: right"">%</td>
                                            <td style=""text-align: right;"">
                                                <input type=""text"" v-model=""oContrCertificado.porcentajeFondoReparo""
                                                       style=""text-align: right;""
                                                       ");
            WriteLiteral(@"@blur=""oContrCertificado.porcentajeFondoReparo =
                                                   getNumeroFormateadoEditable(oContrCertificado.porcentajeFondoReparo);
                                                   recalcularAjustes();""
                                                       v-on:keyup.enter=""oContrCertificado.porcentajeFondoReparo =
                                                   getNumeroFormateadoEditable(oContrCertificado.porcentajeFondoReparo);
                                                   recalcularAjustes();""
                                                       v-show=""oContrCertificado.abierto || esAdministracion""
                                                       class=""form-control form-control-sm no-printable"" />
                                                <span class=""printable"" v-show=""!oContrCertificado.abierto && !esAdministracion"">
                                                    {{getNumeroFormateado(oContrCertificado.porcentajeFondoReparo)}");
            WriteLiteral(@"}
                                                </span>
                                            </td>
                                            <td style=""text-align:right; color:red"">${{getNumeroFormateado(oContrCertificado.imp_FondoReparo)}}</td>
                                        </tr>
                                        <tr>
                                            <th style=""font-size:1.5em""><strong class=""text-info"">TOTAL A PAGAR</strong></th>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <th style=""text-align:right; font-size:1.5em"">
                                                <strong class=""text-info"">
                                                    ${{getNumeroFormateado(oContrCertificado.impTotal_DescFondoReparo)}}
                                                </strong>
                             ");
            WriteLiteral(@"               </th>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class=""col-md-6"">
                                <table class=""table table-hover table-striped"">
                                    <tbody>
                                        <tr>
                                            <th colspan=""4"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                                APLICACIÓN DE PAGO
                                            </th>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <th>Obrero</th>
                                            <th style=""text-align:right"">Monto</th>
                                            <td><");
            WriteLiteral(@"/td>
                                        </tr>
                                        <tr v-if=""certEditable || esAdministracion"">
                                            <td></td>
                                            <td>
                                                <input type=""text"" placeholder=""Apellido y Nombre""
                                                       class=""form-control form-control-sm no-printable""
                                                       v-model=""oProyCert_EmpleadoNuevo.apellidoNombre""
                                                       v-on:keyup.enter=""agregarProyCertEmpleado()"" />
                                            </td>
                                            <td style=""text-align:right"">
                                                <input type=""number"" placeholder=""Monto""
                                                       style=""text-align:right""
                                                       class=""form-c");
            WriteLiteral(@"ontrol form-control-sm no-printable""
                                                       v-model=""oProyCert_EmpleadoNuevo.monto""
                                                       v-on:keyup.enter=""agregarProyCertEmpleado()"" />
                                            </td>
                                            <td></td>
                                        </tr>
                                        <tr v-for=""(oProyCert_Empleado, index) in oContrCertificado.lProyCert_Empleados"">
                                            <td>{{index + 1}}</td>
                                            <td ");
            WriteLiteral(@"@click=""oProyCert_Empleado.editando = true;"">
                                                <input type=""text"" placeholder=""Apellido y Nombre""
                                                       class=""form-control form-control-sm""
                                                       v-model=""oProyCert_Empleado.apellidoNombre""
                                                       v-on:keyup.enter=""oProyCert_Empleado.editando = false; recalcularTotales()""
                                                       v-if=""oProyCert_Empleado.editando && (certEditable || esAdministracion)"" />
                                                <span v-else>
                                                    {{oProyCert_Empleado.apellidoNombre}}
                                                </span>
                                            </td>
                                            <td style=""text-align:right"" ");
            WriteLiteral(@"@click=""oProyCert_Empleado.editando = true;"">
                                                <input type=""number"" placeholder=""Monto""
                                                       style=""text-align:right""
                                                       class=""form-control form-control-sm""
                                                       ");
            WriteLiteral(@"@click=""oProyCert_Empleado.editando = true;""
                                                       v-model=""oProyCert_Empleado.monto""
                                                       v-on:keyup.enter=""oProyCert_Empleado.editando = false; recalcularTotales()""
                                                       v-if=""oProyCert_Empleado.editando && (certEditable || esAdministracion)"" />
                                                <span v-else>
                                                    ${{getNumeroFormateado(oProyCert_Empleado.monto)}}
                                                </span>
                                            </td>
                                            <td>
                                                <button type=""button""
                                                        class=""btn btn-xs btn-danger float-right no-printable""
                                                        style=""margin-right: 0.5em""
                              ");
            WriteLiteral("                          title=\"Quitar\"\r\n                                                        v-if=\"certEditable || esAdministracion\"\r\n                                                        ");
            WriteLiteral(@"@click=""eliminarProyCertEmpleado(index)"">
                                                    <i class=""fas fa-trash""></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <th style=""font-size:1.5em"">
                                                <strong class=""text-info"">TOTAL CONTRATISTA</strong>
                                            </th>
                                            <th style=""text-align: right; font-size: 1.5em"">
                                                <strong v-if=""(oContrCertificado.impTotal_DescFondoReparo - getTotalEmpleados) >= 0""
                                                        class=""text-info"">
                                                    ${{getNumeroFormateado(oContrCertificado.impTotal_DescFond");
            WriteLiteral(@"oReparo - getTotalEmpleados)}}
                                                </strong>
                                                <strong v-else class=""text-danger"">
                                                    ${{getNumeroFormateado(oContrCertificado.impTotal_DescFondoReparo - getTotalEmpleados)}}
                                                </strong>
                                            </th>
                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class=""col-md-12"">
                                <table class=""table table-hover table-striped"">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <button type=""button""
                        ");
            WriteLiteral(@"                                class=""btn btn-primary float-right no-printable""
                                                        style=""margin-right:2em""
                                                        v-if=""!grabandoProyCertContratista && !grabandoProyCertEmpleados && (oContrCertificado.abierto || esAdministracion)""
                                                        ");
            WriteLiteral(@"@click=""grabandoProyCertContratista = true; grabarContrCertificado()""
                                                        title=""Grabar ajustes"">
                                                    <i class=""fas fa-check""></i>
                                                    Grabar
                                                </button>
                                                <button type=""button"" class=""btn btn-primary float-right no-printable""
                                                        style=""margin-right:2em""
                                                        v-if=""grabandoProyCertContratista || grabandoProyCertEmpleados"">
                                                    <div class=""spinner-border""
                                                         style=""width:1em; height: 1em"">
                                                        <span class=""sr-only"">Loading...</span>
                                                    </div>
                   ");
            WriteLiteral(@"                                 Grabando...
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-12"" style=""margin-top: 1em"">
                        <table class=""table table-hover table-striped"">
                            <tbody>
                                <tr>
                                    <th colspan=""6"" class=""bg-gray"" style=""border-bottom: 1px solid gray; padding-top: 1em !important"">
                                        PARTIDAS PRESUPUESTARIAS - AJUSTADAS
                                    </th>
                                </tr>
                                <tr>
                                    <th>Código Part.</th>
                          ");
            WriteLiteral(@"          <th>Partida</th>
                                    <th style=""text-align:right"">Certificado Actual</th>
                                    <th style=""text-align:right"">Fondo de Reparo</th>
                                    <th style=""text-align:right"">Total a Pagar</th>
                                </tr>
                                <tr v-for=""oPartida in getPartidas"">
                                    <td>{{oPartida.codigo}}</td>
                                    <td>{{oPartida.descripcion}}</td>
                                    <td style=""text-align:right"">${{getNumeroFormateado(oPartida.importeAcumActualAjustado)}}</td>
                                    <td style=""text-align:right"">${{getNumeroFormateado(oPartida.imp_FondoReparo)}}</td>
                                    <td style=""text-align:right"">${{getNumeroFormateado(oPartida.imp_Diferencia)}}</td>
                                </tr>
                                <tr>
                                    ");
            WriteLiteral(@"<th colspan=""2"" style=""text-align:right"">
                                        TOTALES
                                    </th>
                                    <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_partidas_AcumActual_Ajustado)}}</th>
                                    <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_partidas_FondoReparo)}}</th>
                                    <th style=""text-align: right; font-size: 1.2em"">${{getNumeroFormateado(oContrCertificado.impTotal_partidas_Diferencia)}}</th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script>\r\n        const oResult = JSON.parse(\'");
#nullable restore
#line 2481 "/Users/leandrolisa/Projects/082023_PuchetaWEB_test/Gestion.Web/Views/GestionCertificados/index.cshtml"
                               Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
        const app = Vue.createApp({
            data() {
                return {
                    esCoordinadorObra: oResult.esCoordinadorObra,
                    esAdministracion: oResult.esAdministracion,
                    usuarioId: oResult.usuarioId,
                    vista: ""grilla ppal"",
                    oFiltroPorProyecto: {
                        fecDesde: oResult.fecDesde,
                        fecHasta: oResult.fecHasta,
                        proyectoId: 0
                    },
                    oFiltrosMultiples: {
                        fecDesde: oResult.fecDesde,
                        fecHasta: oResult.fecHasta,
                        proyectoId: 0,
                        contratistaId: 0
                    },
                    oFiltroFondoReparo: {
                        proyectoId: 0,
                        contratistaId: 0
                    },
                    lProyectosSeleccionados: [{nombre: 'Todos', id:0}],
                    ");
                WriteLiteral(@"lContratistasSeleccionados: [{ nombre: 'Todos', id: 0 }],
                    generandoCertificadosCero: false,
                    buscandoProyCertificados: false,
                    buscandoContrCertificados: false,
                    buscandoFondoReparo: false,
                    lProyectosFiltro: oResult.lProyectos,
                    lContratistasFiltro: oResult.lContratistas,
                    lContratistas_x_Proyecto: [],
                    lProyectos: oResult.lProyectos.filter(p => p.id > 0),
                    lProyCertificados: oResult.lProyCertificados,
                    oProyCertificado: {
                        id: 0,
                        lPCPPAs: [],
                    },
                    oProyCertificado_x_Contr: {
                        id: 0,
                    },
                    lPartidasPresupuestarias: [],
                    buscandoPlanificaciones: false,
                    idProyCertBuscado: 0,
                    oPCPPA: {},
               ");
                WriteLiteral(@"     puedeGrabar: false,
                    ajustado: false,
                    grabandoProyCertificado: false,
                    oContrCertificado: {},
                    oContrCertificado_copia: {},
                    certEditable: true,
                    lContratistas: [],
                    buscandoCertificadosPorContratista: false,
                    oPCPDAC_A_Nuevo_Ajustable: { id: 0 },
                    oPCPDAC_A_Nuevo_NoAjustable: { id: 0 },
                    planificadasVisibles: true,
                    conAjustesVisibles: true,
                    sinAjustesVisibles: true,
                    conAjustesAdicPlanVisibles: true,
                    conAjustesAdicVisibles: true,
                    sinAjustesAdicPlanVisibles: true,
                    sinAjustesAdicVisibles: true,
                    grabandoAdicionales: false,
                    grabandoAdicionalesPlanificadas: false,
                    cerrandoContrCertificado: false,
                    enviandoC");
                WriteLiteral(@"ertificado: false,
                    sinAjustarVisibles: true,
                    ajustadasVisibles: true,
                    visadasVisibles: true,
                    ubicacionFiltro: """",
                    actividadFiltro: """",
                    excedidosFiltro: false,
                    oProyCert_EmpleadoNuevo: {},
                    lPartidas: [],
                    grabandoProyCertContratista: false,
                    grabandoProyCertEmpleados: false,
                    modificoAlMenosUnRegistro: false,
                    recargandoProyCertificado: false,
                    grabandoImportesAnteriores: false,
                    imprimiendo: false,
                    viendoCertificado: false,
                    lContrCertificados: [],
                    lContrCertificados_FondoReparo: [],
                    idContrCertBuscado: 0,
                    desdeFiltrosMultiples: false,
                    oProyContrDescuentoNuevo: {fecha: new Date()},
                    l");
                WriteLiteral(@"ProyContr_Descuentos: [],
                    lProyContr_Descuentos_Copia: [],
                    grabandoProyContrDescuentos: false,

                }
            },
            methods: {
                buscarSegunProyCertificadoId(ProyCertificadoId) {
                    this.verProyCertificado(ProyCertificadoId);
                },
                buscarProyCertificados(ejecutar) {
                    axios
                        .get(""/GestionCertificados/GetProyCertificados/"" +
                            ""?ProyectoId="" + this.oFiltroPorProyecto.proyectoId +
                            ""&FechaDesde="" + this.oFiltroPorProyecto.fecDesde +
                            ""&FechaHasta="" + this.oFiltroPorProyecto.fecHasta)
                        .then(res => {
                            const data = res.data;
                            if (data.isError)
                                toastr.error(data.mensaje, { timeOut: 2000 });
                            else {
                   ");
                WriteLiteral(@"             this.lProyCertificados = data.lProyCertificados;
                                if (ejecutar) ejecutar();
                            }
                            this.buscandoProyCertificados = false;
                        });
                },
                buscarContrCertificados(ejecutar) {
                    let oDataFiltro = {
                        fechaDesde: this.oFiltrosMultiples.fecDesde,
                        fechaHasta: this.oFiltrosMultiples.fecHasta,
                        lIdsProyectos: [],
                        lIdsContratistas: []
                    };
                    this.lProyectosSeleccionados.forEach(p => {
                        if (p.id != 0) {
                            oDataFiltro.lIdsProyectos.push(p.id);
                        }
                    });
                    this.lContratistasSeleccionados.forEach(c => {
                        if (c.id != 0) {
                            oDataFiltro.lIdsContratistas.push(c.id);
");
                WriteLiteral(@"                        }
                    });
                    axios
                        .post(""/GestionCertificados/GetContratistasCertificados/"", oDataFiltro)
                        .then(res => {
                            const data = res.data;
                            if (data.isError)
                                toastr.error(data.mensaje, { timeOut: 2000 });
                            else {
                                this.lContrCertificados = data.lContrCertificados;
                                if (ejecutar) ejecutar();
                            }
                            this.buscandoContrCertificados = false;
                        });
                },
                buscarContratistas_x_Proyecto(proyectoId) {
                    axios
                        .get(""/GestionCertificados/GetContratistas_x_Proyecto/?ProyectoId="" + proyectoId)
                        .then(res => {
                            const data = res.data;
              ");
                WriteLiteral(@"              if (data.isError)
                                toastr.error(data.mensaje, { timeOut: 2000 });
                            else {
                                this.lContratistas_x_Proyecto = data.lContratistas;
                            }
                        });
                },
                verificarDescuetosSinGrabar() {
                    if (this.lProyContr_Descuentos.length != this.lProyContr_Descuentos_Copia.length)
                        return true;
                    else {
                        for (let i = 0; i < this.lProyContr_Descuentos.length; i++) {
                            let oProyContrDescuento = this.lProyContr_Descuentos[i];
                            let oProyContrDescuento_Copia = this.lProyContr_Descuentos_Copia[i];
                            if (oProyContrDescuento.fecha != oProyContrDescuento_Copia.fecha) return true;
                            if (oProyContrDescuento.documento != oProyContrDescuento_Copia.documento) return true");
                WriteLiteral(@";
                            if (oProyContrDescuento.numero != oProyContrDescuento_Copia.numero) return true;
                            if (oProyContrDescuento.monto != oProyContrDescuento_Copia.monto) return true;
                        }
                        return false;
                    }
                },
                limpiarABMDescuentos(ejecutar) {
                    const hayCambiosSinGrabar = this.verificarDescuetosSinGrabar();
                    if (hayCambiosSinGrabar) {
                        const confirmado = confirm(
                            ""Hay cambios sobre descuentos sin grabar, si continúa se perderán los mismos.\r¿Realmente desea continuar?"");
                        if (confirmado) {
                            this.lContrCertificados_FondoReparo = [];
                            this.lProyContr_Descuentos = [];
                            this.lProyContr_Descuentos_Copia = [];
                            if (ejecutar) ejecutar();
                    ");
                WriteLiteral(@"    }
                    }
                    else {
                        this.lContrCertificados_FondoReparo = [];
                        this.lProyContr_Descuentos = [];
                        this.lProyContr_Descuentos_Copia = [];
                        if (ejecutar) ejecutar();
                    }
                },
                buscarFondosReparo(ejecutar) {
                    if (this.oFiltroFondoReparo.proyectoId && this.oFiltroFondoReparo.contratistaId) {
                        let oDataFiltro = {
                            lIdsProyectos: [this.oFiltroFondoReparo.proyectoId],
                            lIdsContratistas: [this.oFiltroFondoReparo.contratistaId],
                        };
                        this.oFiltroFondoReparo.proyectoNombre = this.lProyectosFiltro
                            .find(p => p.id == this.oFiltroFondoReparo.proyectoId).nombre;
                        this.oFiltroFondoReparo.contratistaNombre = this.lContratistasFiltro
              ");
                WriteLiteral(@"              .find(c => c.id == this.oFiltroFondoReparo.contratistaId).nombre;
                        axios
                            .post(""/GestionCertificados/GetContratistasCertificados_ConData/"", oDataFiltro)
                            .then(res => {
                                const data = res.data;
                                if (data.isError)
                                    toastr.error(data.mensaje, { timeOut: 2000 });
                                else {
                                    this.lContrCertificados_FondoReparo = data.lContrCertificados;
                                    this.lProyContr_Descuentos = JSON.parse(JSON.stringify(data.lProyContr_Descuentos));
                                    let i = 0;
                                    this.lProyContr_Descuentos.forEach(pcd => {
                                        pcd._index = i;
                                        i++;
                                    });
                                 ");
                WriteLiteral(@"   this.lProyContr_Descuentos_Copia = JSON.parse(JSON.stringify(data.lProyContr_Descuentos));
                                    this.lContrCertificados_FondoReparo.sort((a, b) => {
                                        if (a.numeroCertificado < b.numeroCertificado) return -1;
                                        if (a.numeroCertificado > b.numeroCertificado) return 1;
                                        return 0;
                                    });
                                    if (ejecutar) ejecutar();
                                }
                                this.buscandoFondoReparo = false;
                            });
                    }
                    else {
                        toastr.warning(""Debe elegir un Proyecto y un Contratista."", { timeOut: 2000 });
                        this.buscandoFondoReparo = false;
                    }
                },
                seleccionarProyecto(proyectoId) {
                    if (proyectoId != 0) {");
                WriteLiteral(@"
                        this.lProyectosSeleccionados = this.lProyectosSeleccionados
                            .filter(p => p.id != 0);
                        let oProyectoSeleccionado = this.lProyectosSeleccionados.find(p => p.id == proyectoId);
                        if (!oProyectoSeleccionado) {
                            let oProyecto = this.lProyectosFiltro.find(p => p.id == proyectoId);
                            this.lProyectosSeleccionados.push(oProyecto);
                        }
                    }
                    else {
                        this.lProyectosSeleccionados = [{ nombre: 'Todos', id: 0 }];
                    }
                },
                deseleccionarProyecto(proyectoId) {
                    this.lProyectosSeleccionados = this.lProyectosSeleccionados
                        .filter(p => p.id != proyectoId);
                },
                seleccionarContratista(contratistaId) {
                    if (contratistaId != 0) {
                   ");
                WriteLiteral(@"     this.lContratistasSeleccionados = this.lContratistasSeleccionados
                            .filter(c => c.id != 0);
                        let oContratistaSeleccionado = this.lContratistasSeleccionados.find(p => p.id == contratistaId);
                        if (!oContratistaSeleccionado) {
                            let oContratista = this.lContratistasFiltro.find(p => p.id == contratistaId);
                            this.lContratistasSeleccionados.push(oContratista);
                        }
                    }
                    else {
                        this.lContratistasSeleccionados = [{ nombre: 'Todos', id: 0 }];
                    }
                },
                deseleccionarContratista(contratistaId) {
                    this.lContratistasSeleccionados = this.lContratistasSeleccionados
                        .filter(c => c.id != contratistaId);
                },
                verProyCertificado(pcId) {
                    axios
                     ");
                WriteLiteral(@"   .get(""/GestionCertificados/GetProyCertificado/?ProyCertificadoId="" + pcId)
                        .then(res => {
                            const data = res.data;
                            if (data.isError)
                                toastr.error(data.mensaje, { timeOut: 2000 });
                            else {
                                this.oProyCertificado = data.oProyCertificado;
                                this.vista = 'abm proy certificados';
                            }
                            this.idProyCertBuscado = 0;
                            //las siguientes tres lineas son necesarias para cuando volvemos de la vista ""Cert x contr""
                            this.modificoAlMenosUnRegistro = false;
                            this.recargandoProyCertificado = false;
                            this.vista = 'abm proy certificados';
                        });
                },
                abrirABMProyCertificados() {
                    this.oProy");
                WriteLiteral(@"Certificado = {
                        id: 0,
                        lPCPPAs: [],
                        fecDesde: getStringFecha_YYYYMMDD(new Date()),
                        fecHasta: getStringFecha_YYYYMMDD(new Date()),
                    };
                    this.vista = 'abm proy certificados';
                },
                volverAGrillaPpal() {
                    if (this.ajustado && !this.oProyCertificado.id) {
                        const confirmado = confirm(""¿Realmente desea volver? Se perderán los cambios"");
                        if (confirmado) {
                            this.ajustado = false;
                            this.puedeGrabar = false;
                            this.oProyCertificado = { id: 0 };
                            this.oProyCertificado.fecDesde = getStringFecha_YYYYMMDD(new Date());
                            this.oProyCertificado.fecHasta = getStringFecha_YYYYMMDD(new Date());
                            this.vista = 'grilla ppal';
      ");
                WriteLiteral(@"                  }
                    }
                    else {
                        this.vista = 'grilla ppal';
                    }
                },
                buscarPlanificaciones() {
                    let confirmado = true;
                    if (this.ajustado) confirmado =
                        confirm(""Al buscar nuevamente, se perderan los ajustes realizados ¿Realmente desea hacerlo?"");
                    if (confirmado) {
                        this.oProyCertificado.id = 0;
                        this.oProyCertificado.lPCPPAs = [];
                        if (this.oProyCertificado.proyectoId &&
                            this.oProyCertificado.fecDesde &&
                            this.oProyCertificado.fecHasta) {
                            axios
                                .get('/GestionCertificados/GetDatosVistaPreviaCertificado/' +
                                    ""?ProyectoId="" + this.oProyCertificado.proyectoId +
                               ");
                WriteLiteral(@"     ""&FechaDesde="" + this.oProyCertificado.fecDesde +
                                    ""&FechaHasta="" + this.oProyCertificado.fecHasta)
                                .then(res => {
                                    const data = res.data;
                                    if (data.isError)
                                        toastr.error(data.mensaje, { timeOut: 2000 });
                                    else {
                                        this.oProyCertificado = data.oProyCertificado;
                                        if (this.oProyCertificado.lPCPPAs.length == 0) {
                                            toastr.warning(""No hay planificación para el periodo seleccionado."", { timeOut: 2000 });
                                        }
                                        else {
                                            this.puedeGrabar = true;
                                        }
                                    }
                                ");
                WriteLiteral(@"    this.buscandoPlanificaciones = false;
                                });
                        }
                        else {
                            this.buscandoPlanificaciones = false;
                            toastr.warning(""Ingrese todos los datos."", { timeOut: 2000 });
                        }
                    }
                },
                descartarTodo() {
                    const confirmado = confirm(""¿Realmente descartar los cambios?"");
                    if (confirmado) {
                        this.ajustado = false;
                        this.puedeGrabar = false;
                        this.oProyCertificado = { id: 0 };
                        this.oProyCertificado.fecDesde = getStringFecha_YYYYMMDD(new Date());
                        this.oProyCertificado.fecHasta = getStringFecha_YYYYMMDD(new Date());
                    }
                },
                abrirAjustador(oPCPPA) {
                    this.oPCPPA = JSON.parse(JSON.stringify(oP");
                WriteLiteral(@"CPPA));
                    this.oPCPPA.porcentajeCumplido = this.oPCPPA.cantidadAcumActual * 100 / this.oPCPPA.cantidadPlanificada;
                    this.vista = 'ajustador';
                },
                ajustar() {
                    if (!this.ajustado) this.ajustado = true;
                    let oPCPPA = JSON.parse(JSON.stringify(this.oPCPPA));
                    oPCPPA.cantidadAcumActual = 0;
                    oPCPPA.cantidadAcumAjustePeriodo = 0;
                    oPCPPA.lContratistasAvances.forEach(ca => {
                        if (!ca.cantidadAcumAjustePeriodo) ca.cantidadAcumAjustePeriodo = 0;
                        ca.cantidadAcumAjustePeriodo = parseFloat(ca.cantidadAcumAjustePeriodo);
                        ca.cantidadAcumActual =
                            ca.cantidadAcumAnterior +
                            ca.cantidadAcumPeriodo +
                            ca.cantidadAcumAjustePeriodo;
                        ca.importeAcumPeriodo = oPCPPA.montoPlanificad");
                WriteLiteral(@"o * ca.cantidadAcumPeriodo;
                        ca.importeAcumAjustePeriodo = oPCPPA.montoPlanificado * ca.cantidadAcumAjustePeriodo;
                        ca.importeAcumActual = oPCPPA.montoPlanificado * ca.cantidadAcumActual;
                        oPCPPA.cantidadAcumAjustePeriodo += ca.cantidadAcumAjustePeriodo;
                        oPCPPA.cantidadAcumActual += ca.cantidadAcumActual;
                    });
                    oPCPPA.importeAcumPeriodo = oPCPPA.montoPlanificado * oPCPPA.cantidadAcumPeriodo;
                    oPCPPA.importeAcumAjustePeriodo = oPCPPA.montoPlanificado * oPCPPA.cantidadAcumAjustePeriodo;
                    oPCPPA.importeAcumActual = oPCPPA.montoPlanificado * oPCPPA.cantidadAcumActual;
                    if (oPCPPA.cantidadPlanificada > 0)
                        oPCPPA.porcentajeCumplido = oPCPPA.cantidadAcumActual * 100 / oPCPPA.cantidadPlanificada;
                    else oPCPPA.porcentajeCumplido = 0;
                    if (oPCPPA.importePlanific");
                WriteLiteral(@"ado > 0) {
                        oPCPPA.porcentajeCumplidoSobreImportePresupuestado =
                            oPCPPA.importeAcumActual * 100 / oPCPPA.importePlanificado;
                    }
                    oPCPPA.lContratistasAvances.forEach(ca => {
                        if (oPCPPA.cantidadAcumActual > 0)
                            ca.porcentajeCumplidoSobreAcumuladoActual = ca.cantidadAcumActual * 100 / oPCPPA.cantidadAcumActual;
                        else ca.porcentajeCumplidoSobreAcumuladoActual = 0;
                    });
                    this.oPCPPA = oPCPPA;
                },
                ajustarDesdeMontoUnitario() {
                    if (this.oPCPPA.cantidadAcumActual > 0) {
                        if (!this.oPCPPA.montoPlanificado) this.oPCPPA.montoPlanificado = 0;
                        else this.oPCPPA.montoPlanificado = parseFloat(this.oPCPPA.montoPlanificado);
                        this.ajustar();
                    }
                },
           ");
                WriteLiteral(@"     aplicarAjustes() {
                    let lPCPPAs_aux = [];
                    this.oProyCertificado.lPCPPAs
                        .forEach(pcppa => {
                            if (!pcppa.montoPlanificado) pcppa.montoPlanificado = 0;
                            else pcppa.montoPlanificado = parseFloat(pcppa.montoPlanificado);
                            if (pcppa.planProyActId == this.oPCPPA.planProyActId) {
                                this.oPCPPA.visada = false;
                                lPCPPAs_aux.push(JSON.parse(JSON.stringify(this.oPCPPA)));
                            }
                            else {
                                lPCPPAs_aux.push(pcppa);
                            }
                        });
                    this.oProyCertificado.lPCPPAs = lPCPPAs_aux;
                    this.vista = ""abm proy certificados"";
                },
                marcarComoVisada() {
                    this.oPCPPA.visada = true;
                    this.");
                WriteLiteral(@"oProyCertificado.lPCPPAs
                        .forEach(pcppa => {
                            if (pcppa.planProyActId == this.oPCPPA.planProyActId) {
                                pcppa.lContratistasAvances.forEach(ca => {
                                    ca.cantidadAcumAjustePeriodo = 0;
                                    ca.ajustado = false
                                });
                                pcppa.visada = true;
                            }
                        });
                },
                desmarcarComoVisada() {
                    this.oPCPPA.visada = false;
                    this.oProyCertificado.lPCPPAs
                        .forEach(pcppa => {
                            if (pcppa.planProyActId == this.oPCPPA.planProyActId)
                                pcppa.visada = false;
                        });
                },
                grabarProyCertificado() {
                    let confirmado = true;
                    const cantida");
                WriteLiteral(@"d = this.getCantidadPCPPAsExcedidasSinNotificar;
                    if (cantidad > 0) {
                        confirmado = confirm(""Hay "" + cantidad + "" ajustes que exceden el total planificado. "" +
                            ""Si graba los mismo se emitirán las notificaciones correspondientes al "" +
                            ""Coordinador de obra ¿Realmente desea hacerlo?"");
                    }
                    if (confirmado) {
                        let lAjustes = [];
                        let lVisadas = [];
                        let lPPAMontos = [];
                        let lExcedentes = [];
                        this.oProyCertificado.lPCPPAs.forEach(pcppa => {
                            lVisadas.push({ planProyActId: pcppa.planProyActId, visada: pcppa.visada });
                            pcppa.lContratistasAvances.forEach(ca => {
                                if (ca.cantidadAcumAjustePeriodo != 0) {
                                    if (typeof ca.cantidadAcumAjust");
                WriteLiteral(@"ePeriodo == 'string')
                                        ca.cantidadAcumAjustePeriodo = ca.cantidadAcumAjustePeriodo.replace(',', '.');
                                    lAjustes.push({
                                        planProyActId: pcppa.planProyActId,
                                        contratistaId: ca.contratistaId,
                                        ajuste: ca.cantidadAcumAjustePeriodo,
                                    })
                                }
                            });
                            lPPAMontos.push({
                                planProyActId: pcppa.planProyActId,
                                monto: pcppa.montoPlanificado
                            });
                            lExcedentes.push({
                                PlanProyActId: pcppa.planProyActId,
                                ExcedenteAutorizado: pcppa.excedenteAutorizado,
                                CantidadAutorizadaExcedente: pcppa.cantidadAutor");
                WriteLiteral(@"izadaExcedente
                            });
                            console.log(lExcedentes);
                        });
                        let oPC = {
                            ProyCertificadoId: this.oProyCertificado.id,
                            ProyectoId: this.oProyCertificado.proyectoId,
                            FechaDesde: this.oProyCertificado.fecDesde,
                            FechaHasta: this.oProyCertificado.fecHasta,
                            lVisadas: lVisadas,
                            lAjustes: lAjustes,
                            lPPAMontos: lPPAMontos,
                            lExcedentes: lExcedentes
                        };
                        axios.post('/GestionCertificados/grabarProyCertificado', oPC)
                            .then(res => {
                                if (res.data.isError) {
                                    toastr.error(res.data.mensaje, { timeOut: 2000 });
                                }
               ");
                WriteLiteral(@"                 else {
                                    if (oPC.id)
                                        toastr.success(""Certificado registrado correctamente."", { timeOut: 2000 });
                                    else
                                        toastr.success(""Certificado actualizado correctamente."", { timeOut: 2000 });
                                    this.oProyCertificado = res.data.oProyCertificado;
                                }
                                this.grabandoProyCertificado = false;
                            })
                            .catch(error => {
                                toastr.error(""Error!"", { timeOut: 2000 });
                                console.log(error);
                                this.grabandoProyCertificado = false;
                            });
                    }
                    else {
                        this.grabandoProyCertificado = false;
                    }
                },
          ");
                WriteLiteral(@"      descartarAjustes() {
                    const confirmado = confirm(""¿Realmente descartar los ajustes?"");
                    if (confirmado) {
                        this.oPCPPA = {};
                        this.vista = ""abm proy certificados"";
                    }
                },
                verCertificadosPorContratistas() {
                    axios
                        .get('/GestionCertificados/GetProyCert_Contratistas/' + ""?ProyCertificadoId="" + this.oProyCertificado.id)
                        .then(res => {
                            const data = res.data;
                            if (data.isError)
                                toastr.error(data.mensaje, { timeOut: 2000 });
                            else {
                                this.lPartidasPresupuestarias = data.lPartidasPresupuestarias;
                                this.oProyCertificado_x_Contr = data.oProyCertificado;
                                if (!this.desdeFiltrosMultiples)
       ");
                WriteLiteral(@"                             this.vista = 'certificados x contratistas';
                            }
                            this.buscandoCertificadosPorContratista = false;
                            if (this.desdeFiltrosMultiples) {
                                this.oContrCertificado = this.oProyCertificado_x_Contr.lContrCertificados
                                    .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)
                                this.abrirABMContrCertificados(this.oContrCertificado, false);
                            }
                        });
                    //#region CODIGO SUSPENDIDO

                    // .get('/GestionCertificados/GetProyCertificado_DetallePorContratistas/' +
                    //     ""?ProyCertificadoId="" + this.oProyCertificado.id)
                    //.then(res => {
                    //    const data = res.data;
                    //    if (data.isError)
                    //        toastr.error(data.m");
                WriteLiteral(@"ensaje, { timeOut: 2000 });
                    //    else {
                    //        this.lPartidasPresupuestarias = data.lPartidasPresupuestarias;
                    //        this.oProyCertificado_x_Contr = data.oProyCertificado;
                    //        if (!this.desdeFiltrosMultiples)
                    //            this.vista = 'certificados x contratistas';
                    //    }
                    //    this.buscandoCertificadosPorContratista = false;
                    //    if (this.desdeFiltrosMultiples) {
                    //        this.oContrCertificado = this.oProyCertificado_x_Contr.lContrCertificados
                    //            .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)
                    //        this.abrirABMContrCertificados(this.oContrCertificado, false);
                    //    }
                    //});
                    //#endregion
                },
                abrirABMContrCertificados(oContrCertificad");
                WriteLiteral(@"o, editable) {
                    this.certEditable = editable;
                    this.viendoCertificado = !editable;
                    oContrCertificado.lPCPPAs.forEach(pcppa =>
                        pcppa._ImporteAcumAnterior = this.getNumeroFormateadoEditable(pcppa._ImporteAcumAnterior.toString()));
                    this.oContrCertificado = JSON.parse(JSON.stringify(oContrCertificado));
                    this.recalcularTotales();
                    this.oContrCertificado_copia = JSON.parse(JSON.stringify(this.oContrCertificado));
                    this.vista = 'certificado contratista x'
                },
                agregarPCPDAC_Adicional(ajustable) {
                    let oPCPDAC_Nuevo = JSON.parse(JSON.stringify(
                        (ajustable ? this.oPCPDAC_A_Nuevo_Ajustable : this.oPCPDAC_A_Nuevo_NoAjustable)));
                    if (oPCPDAC_Nuevo.ubicacion &&
                        oPCPDAC_Nuevo.actividad &&
                        oPCPDAC_Nuevo.actividadD");
                WriteLiteral(@"escripcion &&
                        oPCPDAC_Nuevo.unidadMedida &&
                        oPCPDAC_Nuevo.codigoPartidaPresupuestaria &&
                        oPCPDAC_Nuevo.monto &&
                        oPCPDAC_Nuevo.cantidad) {
                        let cantidad = oPCPDAC_Nuevo.cantidad.toString();
                        if (cantidad.includes(',')) cantidad = cantidad.replace("","", ""."");
                        cantidad = parseFloat(cantidad);

                        let monto = oPCPDAC_Nuevo.monto.toString();
                        if (monto.includes(',')) monto = monto.replace("","", ""."");
                        monto = parseFloat(monto);

                        oPCPDAC_Nuevo.cantidad = cantidad;
                        oPCPDAC_Nuevo.importeAcumPeriodo = monto * cantidad;
                        oPCPDAC_Nuevo.importeAcumActual = this.oPCPDAC_A_Nuevo_Ajustable.importeAcumPeriodo;
                        oPCPDAC_Nuevo.proyCertificadoId = this.oProyCertificado.id;
                   ");
                WriteLiteral(@"     oPCPDAC_Nuevo.contratistaId = this.oContrCertificado.contratistaId;
                        this.oContrCertificado.lPCPDAC_As.push(oPCPDAC_Nuevo);
                        if (ajustable)
                            this.oPCPDAC_A_Nuevo_Ajustable = { id: 0 };
                        else
                            this.oPCPDAC_A_Nuevo_NoAjustable = { id: 0 };

                        this.recalcularTotales();
                    }
                    else { toastr.warning(""Ingrese todos los datos."", { timeOut: 2000 }) };
                },
                eliminarAdicional(index) {
                    let oAdicional = this.oContrCertificado.lPCPDAC_As.find(pcpdaca => pcpdaca._index == index);
                    const confirmado = confirm(""¿Realmente desde quitar el registro? "" +
                        (oAdicional.id > 0 ? ""El mismo sera eliminado por completo solo luego de hacer click en el botón 'Grabar')"" : """"));
                    if (confirmado) {
                        let i = 0;");
                WriteLiteral(@"
                        let lPCPDAC_As_aux = [];
                        this.oContrCertificado.lPCPDAC_As.forEach(a => {
                            if (i != index) lPCPDAC_As_aux.push(a);
                            i++;
                        });
                        this.oContrCertificado.lPCPDAC_As = lPCPDAC_As_aux;
                    }
                },
                eliminarDescuento(index) {
                    let oDescuento = this.lProyContr_Descuentos.find(pcpdaca => pcpdaca._index == index);
                    const confirmado = confirm(""¿Realmente desde quitar el registro? "" +
                        (oDescuento.id > 0 ? ""El mismo sera eliminado por completo solo luego de hacer click en el botón 'Grabar')"" : """"));
                    if (confirmado) {
                        let lProyContr_Descuentos_aux = [];
                        this.lProyContr_Descuentos.forEach(pcc => {
                            if (pcc._index != index) lProyContr_Descuentos_aux.push(pcc);
     ");
                WriteLiteral(@"                   });
                        this.lProyContr_Descuentos = lProyContr_Descuentos_aux;
                    }
                },
                grabarDescuentos() {
                    if (this.getTotalFondosReparo >= this.getTotalDescuentos) {
                        this.lProyContr_Descuentos.forEach(pcd => {
                            pcd.proyectoId = this.oFiltroFondoReparo.proyectoId;
                            pcd.contratistaId = this.oFiltroFondoReparo.contratistaId;
                        });
                        let path = '/GestionCertificados/grabarDescuentos';
                        let obj = this.lProyContr_Descuentos;
                        if (this.lProyContr_Descuentos.length == 0) {
                            path = '/GestionCertificados/eliminarDescuentos';
                            obj = {
                                ProyectoId: this.oFiltroFondoReparo.proyectoId,
                                ContratistaId: this.oFiltroFondoReparo.contratist");
                WriteLiteral(@"aId
                            };
                        }
                        axios.post(path, obj)
                            .then(res => {
                                if (res.data.isError) {
                                    toastr.error(res.data.mensaje, { timeOut: 2000 });
                                }
                                else {
                                    toastr.success(""Descuentos modificadas correctamente."", { timeOut: 2000 });
                                }
                                this.grabandoProyContrDescuentos = false;
                            })
                            .catch(error => {
                                toastr.error(""Error!"", { timeOut: 2000 });
                                console.log(error);
                                this.grabandoProyContrDescuentos = false;
                            });
                    }
                    else {
                        toastr.warning(""El total de Descuen");
                WriteLiteral(@"tos no puede ser mayor que el total de los Fondos de Respato. "" +
                            ""Revise los datos para ajustarlos."", { timeOut: 2000 });
                        this.grabandoProyContrDescuentos = false;
                    }
                },
                onClose(event) {
                    if (this.verificarDescuetosSinGrabar()) {
                        event.preventDefault()
                        event.returnValue = """"
                    }
                },
                recalcularTotales() {
                    let impTotal_anterior = 0;
                    let impTotal_periodo = 0;
                    let impTotal_acumulado = 0;

                    //#region SUBTOTAL PLANIFICADAS
                    let impTotal_plan_a_realizar = 0;
                    let impTotal_plan_anterior = 0;
                    let impTotal_plan_periodo = 0;
                    let impTotal_plan_acumulado = 0;
                    this.oContrCertificado.lPCPPAs.forEach(pcppa => {
  ");
                WriteLiteral(@"                      impTotal_plan_a_realizar += pcppa.cantidadPlanificada * pcppa.montoPlanificado;
                        if (this.oProyCertificado_x_Contr.esCertificadoCero)
                            pcppa.importeAcumAnterior = parseFloat(pcppa._ImporteAcumAnterior.toString().replace("","", "".""));
                        impTotal_plan_anterior += pcppa.importeAcumAnterior;
                        impTotal_plan_periodo += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                        impTotal_plan_acumulado += pcppa.importeAcumAnterior + pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                    });
                    this.oContrCertificado.impTotal_plan_a_realizar = impTotal_plan_a_realizar;
                    this.oContrCertificado.impTotal_plan_anterior = impTotal_plan_anterior;
                    this.oContrCertificado.impTotal_plan_periodo = impTotal_plan_periodo;
                    this.oContrCertificado.impTotal_plan_acumulado = impTotal_plan_ac");
                WriteLiteral(@"umulado;

                    //#endregion

                    //#region CON AJUSTES
                    let impTotal_ajustable_anterior = 0;
                    let impTotal_ajustable_periodo = 0;
                    let impTotal_ajustable_acumulado = 0;

                    //#region SUBTOTAL ADICIONALES PLANIFICADAS

                    let impTotal_ajustable_adic_plan_a_realizar = 0;
                    let impTotal_ajustable_adic_plan_anterior = 0;
                    let impTotal_ajustable_adic_plan_periodo = 0;
                    let impTotal_ajustable_adic_plan_acumulada = 0;
                    this.getPCPPA_AP_Ajustables.forEach(pcppa => {
                        impTotal_ajustable_adic_plan_a_realizar += pcppa.cantidadPlanificada * pcppa.montoPlanificado;
                        impTotal_ajustable_adic_plan_anterior += pcppa.importeAcumAnterior;
                        impTotal_ajustable_adic_plan_periodo += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
           ");
                WriteLiteral(@"             impTotal_ajustable_adic_plan_acumulada += pcppa.importeAcumActual;
                    });
                    this.oContrCertificado.impTotal_ajustable_adic_plan_a_realizar = impTotal_ajustable_adic_plan_a_realizar;
                    this.oContrCertificado.impTotal_ajustable_adic_plan_anterior = impTotal_ajustable_adic_plan_anterior;
                    this.oContrCertificado.impTotal_ajustable_adic_plan_periodo = impTotal_ajustable_adic_plan_periodo;
                    this.oContrCertificado.impTotal_ajustable_adic_plan_acumulada = impTotal_ajustable_adic_plan_acumulada;

                    impTotal_ajustable_anterior = impTotal_ajustable_adic_plan_anterior;
                    impTotal_ajustable_periodo = impTotal_ajustable_adic_plan_periodo;
                    impTotal_ajustable_acumulado = impTotal_ajustable_adic_plan_acumulada;

                    //#endregion
                    //#region SUBTOTAL ADICIONALES

                    let impTotal_ajustable_adic_anterior = 0");
                WriteLiteral(@";
                    let impTotal_ajustable_adic_periodo = 0;
                    let impTotal_ajustable_adic_acumulada = 0;
                    this.getPCPDAC_A_Ajustables.forEach(pcppa => {
                        impTotal_ajustable_adic_anterior += pcppa.importeAcumAnterior;
                        impTotal_ajustable_adic_periodo += pcppa.cantidad * pcppa.monto;
                        impTotal_ajustable_adic_acumulada += pcppa.cantidad * pcppa.monto;
                    });
                    this.oContrCertificado.impTotal_ajustable_adic_anterior = impTotal_ajustable_adic_anterior;
                    this.oContrCertificado.impTotal_ajustable_adic_periodo = impTotal_ajustable_adic_periodo;
                    this.oContrCertificado.impTotal_ajustable_adic_acumulada = impTotal_ajustable_adic_acumulada;

                    impTotal_ajustable_periodo += impTotal_ajustable_adic_periodo;
                    impTotal_ajustable_acumulado += impTotal_ajustable_adic_acumulada;

                 ");
                WriteLiteral(@"   this.oContrCertificado.impTotal_ajustable_anterior = impTotal_ajustable_anterior + impTotal_ajustable_adic_anterior;
                    this.oContrCertificado.impTotal_ajustable_periodo = impTotal_ajustable_periodo;
                    this.oContrCertificado.impTotal_ajustable_acumulado = impTotal_ajustable_acumulado + impTotal_ajustable_adic_anterior;

                    //#endregion
                    //#endregion

                    //#region SIN AJUSTES
                    let impTotal_noAjustable_anterior = 0;
                    let impTotal_noAjustable_periodo = 0;
                    let impTotal_noAjustable_acumulado = 0;

                    //#region SUBTOTAL ADICIONALES PLANIFICADAS

                    let impTotal_noAjustable_adic_plan_a_realizar = 0;
                    let impTotal_noAjustable_adic_plan_anterior = 0;
                    let impTotal_noAjustable_adic_plan_periodo = 0;
                    let impTotal_noAjustable_adic_plan_acumulada = 0;
                ");
                WriteLiteral(@"    this.getPCPPA_AP_NoAjustables.forEach(pcppa => {
                        impTotal_noAjustable_adic_plan_a_realizar += pcppa.cantidadPlanificada * pcppa.montoPlanificado;
                        impTotal_noAjustable_adic_plan_anterior += pcppa.importeAcumAnterior;
                        impTotal_noAjustable_adic_plan_periodo += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                        impTotal_noAjustable_adic_plan_acumulada += pcppa.importeAcumActual;
                    });
                    this.oContrCertificado.impTotal_noAjustable_adic_plan_a_realizar = impTotal_noAjustable_adic_plan_a_realizar;
                    this.oContrCertificado.impTotal_noAjustable_adic_plan_anterior = impTotal_noAjustable_adic_plan_anterior;
                    this.oContrCertificado.impTotal_noAjustable_adic_plan_periodo = impTotal_noAjustable_adic_plan_periodo;
                    this.oContrCertificado.impTotal_noAjustable_adic_plan_acumulada = impTotal_noAjustable_adic_plan_acumulad");
                WriteLiteral(@"a;

                    impTotal_noAjustable_anterior = impTotal_noAjustable_adic_plan_anterior;
                    impTotal_noAjustable_periodo = impTotal_noAjustable_adic_plan_periodo;
                    impTotal_noAjustable_acumulado = impTotal_noAjustable_adic_plan_acumulada;

                    //#endregion
                    //#region SUBTOTAL ADICIONALES

                    let impTotal_noAjustable_adic_anterior = 0;
                    let impTotal_noAjustable_adic_periodo = 0;
                    let impTotal_noAjustable_adic_acumulada = 0;
                    this.getPCPDAC_A_NoAjustables.forEach(pcppa => {
                        impTotal_noAjustable_adic_anterior += pcppa.importeAcumAnterior;
                        impTotal_noAjustable_adic_periodo += pcppa.cantidad * pcppa.monto;
                        impTotal_noAjustable_adic_acumulada += pcppa.cantidad * pcppa.monto;
                    });
                    this.oContrCertificado.impTotal_noAjustable_adic_anterior = ");
                WriteLiteral(@"impTotal_noAjustable_adic_anterior;
                    this.oContrCertificado.impTotal_noAjustable_adic_periodo = impTotal_noAjustable_adic_periodo;
                    this.oContrCertificado.impTotal_noAjustable_adic_acumulada = impTotal_noAjustable_adic_acumulada;

                    impTotal_noAjustable_periodo += impTotal_noAjustable_adic_periodo;
                    impTotal_noAjustable_acumulado += impTotal_noAjustable_adic_acumulada;

                    this.oContrCertificado.impTotal_noAjustable_anterior = impTotal_noAjustable_anterior + impTotal_noAjustable_adic_anterior;
                    this.oContrCertificado.impTotal_noAjustable_periodo = impTotal_noAjustable_periodo;
                    this.oContrCertificado.impTotal_noAjustable_acumulado = impTotal_noAjustable_acumulado + impTotal_noAjustable_adic_anterior;

                    //#endregion
                    //#endregion

                    impTotal_anterior =
                        this.oContrCertificado.impTotal_plan_");
                WriteLiteral(@"anterior +
                        this.oContrCertificado.impTotal_ajustable_anterior +
                        this.oContrCertificado.impTotal_noAjustable_anterior;
                    impTotal_periodo =
                        this.oContrCertificado.impTotal_plan_periodo +
                        this.oContrCertificado.impTotal_ajustable_periodo +
                        this.oContrCertificado.impTotal_noAjustable_periodo;
                    impTotal_acumulado =
                        this.oContrCertificado.impTotal_plan_acumulado +
                        this.oContrCertificado.impTotal_ajustable_acumulado +
                        this.oContrCertificado.impTotal_noAjustable_acumulado;

                    this.oContrCertificado.impTotal_anterior = impTotal_anterior;
                    this.oContrCertificado.impTotal_periodo = impTotal_periodo;
                    this.oContrCertificado.impTotal_acumulado = impTotal_acumulado;

                    this.recalcularAjustes();
             ");
                WriteLiteral(@"   },
                recalcularAjustes() {

                    //#region IMPORTE ANTICIPO PLANICFICADAS
                    let porcentaje = 0;
                    if (!this.oContrCertificado.porcentajeDescuentoAnticipo)
                        porcentaje = 0;
                    else {
                        porcentaje =
                            parseFloat(this.oContrCertificado.porcentajeDescuentoAnticipo
                                .toString().replace("","", "".""));
                    }
                    this.oContrCertificado.importeDescuentoAnticipo =
                        porcentaje * this.oContrCertificado.impTotal_plan_periodo / 100;
                    //#endregion

                    //#region IMPORTE ADELANTO
                    let adelanto = 0;
                    if (!this.oContrCertificado.adelanto)
                        adelanto = 0;
                    else {
                        adelanto =
                            parseFloat(this.oContrCertificado.a");
                WriteLiteral(@"delanto
                                .toString().replace("","", "".""));
                    }
                    this.oContrCertificado.importeAdelanto = adelanto;
                    //#endregion

                    //#region TOTAL SUJETO A AJUSTES
                    this.oContrCertificado.importeTotalSujetoAjuste =
                        this.oContrCertificado.impTotal_plan_periodo -
                        this.oContrCertificado.importeDescuentoAnticipo -
                        this.oContrCertificado.importeAdelanto +
                        this.oContrCertificado.impTotal_ajustable_periodo;
                    //#endregion

                    //#region COEFICIENTE ACTUALIZACION E IMPORTE CORRESPONDIENTE
                    let indiceBase = 0;
                    if (!this.oContrCertificado.indiceBase)
                        indiceBase = 0;
                    else {
                        indiceBase =
                            parseFloat(this.oContrCertificado.indiceBase
   ");
                WriteLiteral(@"                             .toString().replace("","", "".""));
                    }
                    let indiceActual = 0;
                    if (!this.oContrCertificado.indiceActual)
                        indiceActual = 0;
                    else {
                        indiceActual =
                            parseFloat(this.oContrCertificado.indiceActual
                                .toString().replace("","", "".""));
                    }
                    this.oContrCertificado.importeActualizacion = 0;
                    if (indiceBase && indiceActual) {
                        let diferencia = indiceActual - indiceBase;
                        let percentajeDiferencia = diferencia * 100 / indiceBase;
                        this.oContrCertificado.porcentajeActualizacion = percentajeDiferencia;
                        this.oContrCertificado.importeActualizacion =
                            this.oContrCertificado.porcentajeActualizacion *
                            this.oCo");
                WriteLiteral(@"ntrCertificado.importeTotalSujetoAjuste / 100;
                    }
                    //#endregion

                    //#region IMPORTE TOTAL NETO A FACTURAR
                    this.oContrCertificado.impTotal_NetoAFacturar =
                        this.oContrCertificado.importeTotalSujetoAjuste +
                        this.oContrCertificado.importeActualizacion +
                        this.oContrCertificado.impTotal_noAjustable_periodo;
                    //#endregion

                    //#region IMPORTE IVA
                    let porcentajeIVA = 0;
                    if (!this.oContrCertificado.porcentajeIVA)
                        porcentajeIVA = 0;
                    else {
                        porcentajeIVA =
                            parseFloat(this.oContrCertificado.porcentajeIVA
                                .toString().replace("","", "".""));
                    }
                    this.oContrCertificado.imp_IVA =
                        porcentajeIVA * this");
                WriteLiteral(@".oContrCertificado.impTotal_NetoAFacturar / 100;
                    this.oContrCertificado.impTotal_IVAIncluido =
                        this.oContrCertificado.imp_IVA +
                        this.oContrCertificado.impTotal_NetoAFacturar;
                    //#endregion

                    //#region IMPORTE FONDO REPARO
                    let porcentajeFondoReparo = 0;
                    if (!this.oContrCertificado.porcentajeFondoReparo)
                        porcentajeFondoReparo = 0;
                    else {
                        porcentajeFondoReparo =
                            parseFloat(this.oContrCertificado.porcentajeFondoReparo
                                .toString().replace("","", "".""));
                    }
                    let total = this.oContrCertificado.impTotal_plan_periodo +
                        this.oContrCertificado.impTotal_ajustable_periodo +
                        this.oContrCertificado.importeActualizacion +
                        this.oContr");
                WriteLiteral(@"Certificado.impTotal_noAjustable_periodo;
                    this.oContrCertificado.imp_FondoReparo = porcentajeFondoReparo * total / 100;
                    this.oContrCertificado.impTotal_DescFondoReparo =
                        this.oContrCertificado.impTotal_IVAIncluido -
                        this.oContrCertificado.imp_FondoReparo;
                    //#endregion

                    //#region PARTIDAS PRESUPUESTARIAS

                    let lPCPPAs = this.oContrCertificado.lPCPPAs;
                    let lPCPPA_AP_Ajustables = this.getPCPPA_AP_Ajustables;
                    let lPCPPA_AP_NoAjustables = this.getPCPPA_AP_NoAjustables;
                    let lPCPDC_A_Ajustables = this.getPCPDAC_A_Ajustables;
                    let lPCPDC_A_NoAjustables = this.getPCPDAC_A_NoAjustables;

                    let lDataPartidas = JSON.parse(JSON.stringify(this.oContrCertificado.lDataPartidas));

                    lDataPartidas.forEach(dp => {

                        dp.importeAc");
                WriteLiteral(@"umActualAjustado = 0;
                        let lPCPPAs_Filtradas = lPCPPAs.filter(pcppa =>
                            pcppa.codigoPartidaPresupuestaria == dp.codigo);
                        let lPCPPA_AP_Ajustables_Filtradas = lPCPPA_AP_Ajustables.filter(pcppa_ap =>
                            pcppa_ap.codigoPartidaPresupuestaria == dp.codigo.toUpperCase());
                        let lPCPPA_AP_NoAjustables_Filtradas = lPCPPA_AP_NoAjustables.filter(pcppa_ap =>
                            pcppa_ap.codigoPartidaPresupuestaria.toUpperCase() == dp.codigo.toUpperCase());
                        let lPCPDC_A_Ajustables_Filtradas = lPCPDC_A_Ajustables.filter(pcpdcaa =>
                            pcpdcaa.codigoPartidaPresupuestaria.toUpperCase() == dp.codigo.toUpperCase());
                        let lPCPDC_A_NoAjustables_Filtradas = lPCPDC_A_NoAjustables.filter(pcpdcaa =>
                            pcpdcaa.codigoPartidaPresupuestaria.toUpperCase() == dp.codigo.toUpperCase());

                  ");
                WriteLiteral(@"      dp.importeAcumAnterior = 0;
                        dp.importeAcumActual = 0;

                        lPCPPAs_Filtradas.forEach(pcppa => {
                            dp.importeAcumAnterior += pcppa.importeAcumAnterior;
                            dp.importeAcumActual += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                        });
                        lPCPPA_AP_Ajustables_Filtradas.forEach(pcppa => {
                            dp.importeAcumAnterior += pcppa.importeAcumAnterior;
                            dp.importeAcumActual += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                        });
                        lPCPPA_AP_NoAjustables_Filtradas.forEach(pcppa => {
                            dp.importeAcumAnterior += pcppa.importeAcumAnterior;
                            dp.importeAcumActual += pcppa.importeAcumPeriodo + pcppa.importeAcumAjustePeriodo;
                        });
                        lPCPDC_A_Ajustables_Filtradas");
                WriteLiteral(@".forEach(pcpdaca => {
                            dp.importeAcumActual += pcpdaca.cantidad * pcpdaca.monto;
                        });
                        lPCPDC_A_NoAjustables_Filtradas.forEach(pcpdaca => {
                            dp.importeAcumActual += pcpdaca.cantidad * pcpdaca.monto;
                        });

                    });
                    let impTotal_partidas_AcumAnterior = 0;
                    let impTotal_partidas_AcumActual = 0;
                    let impTotal_partidas_AcumActual_Ajustado = 0;

                    lDataPartidas.forEach(dp => {
                        impTotal_partidas_AcumAnterior += dp.importeAcumAnterior;
                        impTotal_partidas_AcumActual += dp.importeAcumActual;
                    })
                    lDataPartidas.forEach(dp => {
                        dp.importeAcumActualAjustado =
                            this.oContrCertificado.impTotal_NetoAFacturar / impTotal_partidas_AcumActual *
                      ");
                WriteLiteral(@"      dp.importeAcumActual;
                        impTotal_partidas_AcumActual_Ajustado += parseFloat(dp.importeAcumActualAjustado.toFixed(2));
                    })

                    let impTotal_partidas_FondoReparo = 0;
                    lDataPartidas.forEach(dp => {
                        dp.imp_FondoReparo = this.oContrCertificado.imp_FondoReparo /
                            impTotal_partidas_AcumActual_Ajustado *
                            dp.importeAcumActualAjustado;
                        impTotal_partidas_FondoReparo += parseFloat(dp.imp_FondoReparo.toFixed(2));
                        dp.imp_Diferencia = dp.importeAcumActualAjustado - dp.imp_FondoReparo;
                    })
                    this.oContrCertificado.lDataPartidas = lDataPartidas;
                    this.oContrCertificado.impTotal_partidas_AcumAnterior = impTotal_partidas_AcumAnterior;
                    this.oContrCertificado.impTotal_partidas_AcumActual_Ajustado = impTotal_partidas_AcumActual_Ajustad");
                WriteLiteral(@"o;
                    this.oContrCertificado.impTotal_partidas_FondoReparo = impTotal_partidas_FondoReparo;
                    this.oContrCertificado.impTotal_partidas_Diferencia = impTotal_partidas_AcumActual_Ajustado - impTotal_partidas_FondoReparo;

                    //#endregion
                },
                cerrarContrCertificado(oContrCertificado) {
                    this.oContrCertificado = JSON.parse(JSON.stringify(oContrCertificado));
                    this.recalcularTotales();
                    let confirmado = confirm(
                        ""Si cierra el certificado ya no podrá editar sus valores."" +
                        "" Además, los ajustes realizados serán registrados como avances ¿Realmente desea hacerlo?"");
                    if (confirmado) {
                        let partidasBalanceadas = this.consultarPartidasBalanceadas();
                        if (partidasBalanceadas) {
                            let oData = {
                                ProyC");
                WriteLiteral(@"ertificadoId: this.oProyCertificado.id,
                                ContratistaId: this.oContrCertificado.contratistaId
                            };
                            axios.post('/GestionCertificados/CerrarContrCertificado', oData)
                                .then(res => {
                                    if (res.data.isError) {
                                        toastr.error(res.data.mensaje, { timeOut: 2000 });
                                    }
                                    else {
                                        toastr.success(""Certificado Cerrado correctamente."", { timeOut: 2000 });
                                        this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                    }
                                    this.cerrandoContrCertificado = false;
                                    this.modificoAlMenosUnRegistro = true;
                                })
                                .catch(error =>");
                WriteLiteral(@" {
                                    toastr.error(""Error!"", { timeOut: 2000 });
                                    console.log(error);
                                    this.cerrandoContrCertificado = false;
                                });
                        }
                        else {
                            toastr.warning(""La suma de los totales por partidas no coincide con el NETO A FACTURAR. "" +
                                ""Revise los datos para comprobar que estan balanceados."", { timeOut: 2000 });
                            this.cerrandoContrCertificado = false;
                        }
                    }
                    else {
                        this.cerrandoContrCertificado = false;
                    }
                },
                consultarPartidasBalanceadas() {
                    let resto = this.oContrCertificado.impTotal_NetoAFacturar -
                        this.oContrCertificado.impTotal_partidas_AcumActual_Ajustado;
        ");
                WriteLiteral(@"            return resto < 0.01 && resto > -0.01;
                },
                grabarAdicionales() {
                    let path = '/GestionCertificados/grabarAdicionales';
                    let obj = this.oContrCertificado.lPCPDAC_As
                        .filter(pcpdaca => pcpdaca.proyCertificadoId == this.oProyCertificado.id);
                    if (this.oContrCertificado.lPCPDAC_As.length == 0) {
                        path = '/GestionCertificados/EliminarAdicionales';
                        obj = {
                            ProyCertificadoId: this.oProyCertificado.id,
                            ContratistaId: this.oContrCertificado.contratistaId
                        };
                    }
                    axios.post(path, obj)
                        .then(res => {
                            if (res.data.isError) {
                                toastr.error(res.data.mensaje, { timeOut: 2000 });
                            }
                            else {");
                WriteLiteral(@"
                                toastr.success(""Adicionales modificadas correctamente."", { timeOut: 2000 });
                                this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                let oContrCertificado = JSON.parse(JSON.stringify(
                                    this.oProyCertificado_x_Contr.lContrCertificados
                                        .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)));

                                let lPCEs = JSON.parse(JSON.stringify(this.oContrCertificado.lProyCert_Empleados));
                                this.oContrCertificado = oContrCertificado;
                                this.recalcularTotales();
                                this.oContrCertificado.lProyCert_Empleados = lPCEs;

                            }
                            this.grabandoAdicionales = false;
                        })
                        .catch(error => {
                            to");
                WriteLiteral(@"astr.error(""Error!"", { timeOut: 2000 });
                            console.log(error);
                            this.grabandoAdicionales = false;
                        });
                },
                grabarAdicionalesPlanificadas() {
                    let lPCPPA_A_Ajustables = this.getPCPPA_AP_Ajustables;
                    let lPCPPA_A_NoAjustables = this.getPCPPA_AP_NoAjustables;
                    let lDataMontosAjustables = [];
                    lPCPPA_A_Ajustables.forEach(pcppa => {
                        lDataMontosAjustables.push({
                            ProyCertificadoId: this.oProyCertificado_x_Contr.id,
                            ContratistaId: this.oContrCertificado.contratistaId,
                            PlanProyActId: pcppa.planProyActId,
                            montosAjustables: true
                        });
                    });
                    lPCPPA_A_NoAjustables.forEach(pcppa => {
                        lDataMontosAjustables.push");
                WriteLiteral(@"({
                            ProyCertificadoId: this.oProyCertificado_x_Contr.id,
                            ContratistaId: this.oContrCertificado.contratistaId,
                            PlanProyActId: pcppa.planProyActId,
                            montosAjustables: false
                        });
                    });
                    axios.post('/GestionCertificados/grabarAdicionalesPlanificadas', lDataMontosAjustables)
                        .then(res => {
                            if (res.data.isError) {
                                toastr.error(res.data.mensaje, { timeOut: 2000 });
                            }
                            else {
                                toastr.success(""Adicionales Planificadas modificadas correctamente."", { timeOut: 2000 });
                                this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                let oContrCertificado = JSON.parse(JSON.stringify(
                                ");
                WriteLiteral(@"    this.oProyCertificado_x_Contr.lContrCertificados
                                        .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)));
                                this.oContrCertificado = oContrCertificado;
                                this.recalcularTotales();
                            }
                            this.grabandoAdicionalesPlanificadas = false;
                        })
                        .catch(error => {
                            toastr.error(""Error!"", { timeOut: 2000 });
                            console.log(error);
                            this.grabandoAdicionalesPlanificadas = false;
                        });
                },
                consultarCambios() {
                    let hayCambios = false;
                    let mensaje = ""Hay cambios sin grabar:"";

                    const cambiosAnticipo = parseFloat(this.oContrCertificado.porcentajeDescuentoAnticipo) !=
                        this.oContrCerti");
                WriteLiteral(@"ficado_copia.porcentajeDescuentoAnticipo;
                    hayCambios = hayCambios || cambiosAnticipo;
                    if (cambiosAnticipo) mensaje += ""\r - Descuento por Anticipo."";

                    const cambiosAdelanto = parseFloat(this.oContrCertificado.importeAdelanto) !=
                        this.oContrCertificado_copia.importeAdelanto;
                    hayCambios = hayCambios || cambiosAdelanto;
                    if (cambiosAdelanto) mensaje += ""\r - Descuento por Adelanto."";

                    const cambiosIndBase = parseFloat(this.oContrCertificado.indiceBase) !=
                        this.oContrCertificado_copia.indiceBase;
                    hayCambios = hayCambios || cambiosIndBase;
                    if (cambiosIndBase) mensaje += ""\r - Índice Base."";

                    const cambiosIndActual = parseFloat(this.oContrCertificado.indiceActual) !=
                        this.oContrCertificado_copia.indiceActual;
                    hayCambios = hayCambios ");
                WriteLiteral(@"|| cambiosIndActual;
                    if (cambiosIndActual) mensaje += ""\r - Índice Actual."";

                    const cambiosIVA = parseFloat(this.oContrCertificado.porcentajeIVA) !=
                        this.oContrCertificado_copia.porcentajeIVA;
                    hayCambios = hayCambios || cambiosIVA;
                    if (cambiosIVA) mensaje += ""\r - IVA."";

                    const cambiosFondoReparo = parseFloat(this.oContrCertificado.porcentajeFondoReparo) !=
                        this.oContrCertificado_copia.porcentajeFondoReparo;
                    hayCambios = hayCambios || cambiosFondoReparo;
                    if (cambiosFondoReparo) mensaje += ""\r - Fondo de reparo."";
                    
                    const cambiosCantidadEmpleados = this.oContrCertificado.lProyCert_Empleados.length !=
                        this.oContrCertificado_copia.lProyCert_Empleados.length;
                    hayCambios = hayCambios || cambiosCantidadEmpleados;
                    ");
                WriteLiteral(@"if (cambiosCantidadEmpleados)
                        mensaje += ""\r - Aplicación de pagos."";
                    else {
                        let cambiosDatosEmpleados = false;
                        this.oContrCertificado.lProyCert_Empleados.forEach(pce => {
                            cambiosDatosEmpleados = cambiosDatosEmpleados || pce.editando;
                        });
                        this.oContrCertificado.lProyCert_Empleados.forEach(pce => {
                            let pce_original = this.oContrCertificado_copia.lProyCert_Empleados
                                .find(pceo => pceo.id == pce.id);
                            cambiosDatosEmpleados = cambiosDatosEmpleados || pce_original.monto != pce.monto;
                            cambiosDatosEmpleados = cambiosDatosEmpleados || pce_original.apellidoNombre != pce.apellidoNombre;
                        });
                        hayCambios = hayCambios || cambiosDatosEmpleados;
                        if (cambiosDatosE");
                WriteLiteral(@"mpleados) mensaje += ""\r - Aplicación de pagos."";
                    }
                    return {
                        hayCambios: hayCambios,
                        mensaje: mensaje
                    };
                },
                volverListaContrCertificados() {
                    if (this.desdeFiltrosMultiples) {
                        this.vista = 'grilla ppal';
                        this.oPCPDAC_A_Nuevo_Ajustable = { id: 0 }
                        this.desdeFiltrosMultiples = false;
                        this.idContrCertBuscado = 0;
                        setTimeout(function () { tabFiltroPorContratista.click(); }, 100);
                    }
                    else {
                        let oConsulta = this.consultarCambios();
                        if (oConsulta.hayCambios) {
                            if (confirm(oConsulta.mensaje)) {
                                this.vista = 'certificados x contratistas';
                                this.oPCPD");
                WriteLiteral(@"AC_A_Nuevo_Ajustable = { id: 0 }
                            }
                        }
                        else {
                            this.vista = 'certificados x contratistas';
                            this.oPCPDAC_A_Nuevo_Ajustable = { id: 0 }
                        }
                    }
                },
                imprimirContrCertificado() {
                    let oConsulta = this.consultarCambios();
                    if (!oConsulta.hayCambios) {
                        let oData = {
                            ProyCertificadoId: this.oProyCertificado_x_Contr.id,
                            ContratistaId: this.oContrCertificado.contratistaId
                        };
                        axios.post(""/GestionCertificados/GetNombreCertificadoPDF"", oData)
                            .then(res => {
                                if (res.data.isError) {
                                    toastr.error(res.data.mensaje, { timeOut: 2000 });
                 ");
                WriteLiteral(@"               }
                                else {
                                    let esAdministracion = this.esAdministracion;
                                    let lPrintables = document.getElementsByClassName(""printable"");
                                    let lNoPrintables = document.getElementsByClassName(""no-printable"");
                                    if (esAdministracion) {
                                        for (let i = 0; i < lPrintables.length; i++) {
                                            lPrintables[i].style.display = ""unset"";
                                        }
                                    }
                                    for (let i = 0; i < lNoPrintables.length; i++) {
                                        lNoPrintables[i].style.display = ""none"";
                                    }
                                    let envia = !this.oContrCertificado.abierto && !this.desdeFiltrosMultiples;
                                    cons");
                WriteLiteral(@"t proyCertificadoId = this.oProyCertificado.id;
                                    const contratistaId = this.oContrCertificado.contratistaId;
                                    const nombrePDF = res.data.nombreCertificadoPDF;
                                    kendo.drawing.drawDOM($(""#divCertificado""))
                                        .then(function (group) {
                                            // Render the result as a PDF file
                                            return kendo.drawing.exportPDF(group, {
                                                paperSize: ""auto"",
                                                margin: { left: ""1cm"", top: ""1cm"", right: ""1cm"", bottom: ""1cm"" }
                                            });
                                        })
                                        .done(function (data) {
                                            kendo.saveAs({
                                                dataURI: data,
                ");
                WriteLiteral(@"                                fileName: nombrePDF,
                                            });
                                            data = data.replace(""data:application/pdf;base64,"", """");
                                            if (envia) {
                                                console.log(""Enviando mail."");
                                                $.post(""/GestionCertificados/EnviarPDF"",
                                                    { StringPDF: data, ProyCertificadoId: proyCertificadoId, ContratistaId: contratistaId })
                                                    .done(function (e) {
                                                        if (e.isError) {
                                                            toastr.error(e.mensaje, { timeOut: 2000 });
                                                        } else {
                                                            toastr.success(e.mensaje, { timeOut: 2000 });
                       ");
                WriteLiteral(@"                                     if (esAdministracion) {
                                                                for (let i = 0; i < lPrintables.length; i++) {
                                                                    lPrintables[i].style.display = ""none"";
                                                                }
                                                            }
                                                            for (let i = 0; i < lNoPrintables.length; i++) {
                                                                console.log(""pasó por acá"");
                                                                lNoPrintables[i].style.display = ""unset"";
                                                            }
                                                        }
                                                    });
                                            } else {
                                                if (esAdministracion");
                WriteLiteral(@") {
                                                    for (let i = 0; i < lPrintables.length; i++) {
                                                        lPrintables[i].style.display = ""none"";
                                                    }
                                                }
                                                for (let i = 0; i < lNoPrintables.length; i++) {
                                                    lNoPrintables[i].style.display = ""unset"";
                                                }
                                            }
                                        });
                                }
                            })
                            .catch(error => {
                                toastr.error(""Error!"", { timeOut: 2000 });
                                console.log(error);
                            });
                    }
                    else {
                        toastr.warning(oConsulta.mensa");
                WriteLiteral(@"je.replace(""\r"", ""<br/>"") +
                            ""<br/> Para enviar el certificado precisa grabar los cambios realizados."", { timeOut: 2000 });
                    }
                },
                agregarProyCertEmpleado() {
                    if (this.oProyCert_EmpleadoNuevo.apellidoNombre && this.oProyCert_EmpleadoNuevo.monto) {
                        if (!this.oContrCertificado.lProyCert_Empleados)
                            this.oContrCertificado.lProyCert_Empleados = [];
                        let apellidoNombre = this.oProyCert_EmpleadoNuevo.apellidoNombre;
                        let monto = this.oProyCert_EmpleadoNuevo.monto;
                        if (!monto) monto = 0;
                        monto = parseFloat(monto);
                        this.oContrCertificado.lProyCert_Empleados
                            .push({ id: 0, apellidoNombre: apellidoNombre, monto: monto });
                        this.oProyCert_EmpleadoNuevo = { id: 0 };
                    }
      ");
                WriteLiteral(@"              else {
                        toastr.warning(""Ingrese todos los datos."", { timeOut: 2000 });
                    }
                },
                eliminarProyCertEmpleado(index) {
                    let oPCE = this.oContrCertificado.lProyCert_Empleados[index];
                    const confirmado = confirm(""¿Realmente desea quitar el registro? "" +
                        (oPCE.id > 0 ? ""El mismo sera eliminado por completo solo luego de hacer click en el botón 'Grabar')"" : """"));
                    if (confirmado) {
                        let i = 0;
                        let lPCE_aux = [];
                        this.oContrCertificado.lProyCert_Empleados.forEach(pce => {
                            if (i != index) lPCE_aux.push(pce);
                            i++;
                        });
                        this.oContrCertificado.lProyCert_Empleados = lPCE_aux;
                    }
                },
                grabarContrCertificado() {
             ");
                WriteLiteral(@"       const oProyCertContratista = {
                        id: this.oContrCertificado.id,
                        proyCertificadoId: this.oProyCertificado.id,
                        contratistaId: this.oContrCertificado.contratistaId,
                        emiteFactura: this.oContrCertificado.emiteFactura,
                        porcentajeIVA: this.oContrCertificado.porcentajeIVA
                            .toString().replace("","", "".""),
                        indiceBase: this.oContrCertificado.indiceBase
                            .toString().replace("","", "".""),
                        indiceActual: this.oContrCertificado.indiceActual
                            .toString().replace("","", "".""),
                        porcentajeActualizacion: this.oContrCertificado.porcentajeActualizacion
                            .toString().replace("","", "".""),
                        adelanto: this.oContrCertificado.adelanto
                            .toString().replace("","", "".""),
                  ");
                WriteLiteral(@"      porcentajeDescuentoAnticipo: this.oContrCertificado.porcentajeDescuentoAnticipo
                            .toString().replace("","", "".""),
                        porcentajeFondoReparo: this.oContrCertificado.porcentajeFondoReparo
                            .toString().replace("","", "".""),
                    };
                    axios.post('/GestionCertificados/grabarContrCertificado', oProyCertContratista)
                        .then(res => {
                            if (res.data.isError) {
                                toastr.error(res.data.mensaje, { timeOut: 2000 });
                            }
                            else {
                                let estabaCerrado = !this.oContrCertificado.abierto;
                                this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                let oContrCertificado = JSON.parse(JSON.stringify(
                                    this.oProyCertificado_x_Contr.lContrCertificados
       ");
                WriteLiteral(@"                                 .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)));

                                let lPCEs = JSON.parse(JSON.stringify(this.oContrCertificado.lProyCert_Empleados));
                                let lPCPDAC_As = JSON.parse(JSON.stringify(this.oContrCertificado.lPCPDAC_As));
                                this.oContrCertificado = oContrCertificado;
                                this.recalcularTotales();
                                this.oContrCertificado.lProyCert_Empleados = lPCEs;
                                this.oContrCertificado.lPCPDAC_As = lPCPDAC_As;
                                this.grabandoProyCertEmpleados = true;

                                this.grabarProyCertEmpleados(estabaCerrado);
                            }
                            this.grabandoProyCertContratista = false;
                        })
                        .catch(error => {
                            toastr.error(""Error!"", { timeO");
                WriteLiteral(@"ut: 2000 });
                            console.log(error);
                            this.grabandoProyCertContratista = false;
                        });
                },
                grabarProyCertEmpleados(debeEnviarCert) {
                    let resto = this.oContrCertificado.impTotal_DescFondoReparo - this.getTotalEmpleados;
                    if (resto >= 0) {
                        this.oContrCertificado.lProyCert_Empleados.forEach(pce => {
                            pce.proyCertificadoId = this.oProyCertificado.id;
                            pce.contratistaId = this.oContrCertificado.contratistaId;
                        });
                        axios.post('/GestionCertificados/GrabarProyCertEmpleados', {    
                            proyCertificadoId: this.oProyCertificado.id,
                            contratistaId: this.oContrCertificado.contratistaId,
                            lProyCert_Empleados: this.oContrCertificado.lProyCert_Empleados
                 ");
                WriteLiteral(@"       })
                            .then(res => {
                                if (res.data.isError) {
                                    toastr.error(res.data.mensaje, { timeOut: 2000 });
                                }
                                else {
                                    this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                    let oContrCertificado = JSON.parse(JSON.stringify(
                                        this.oProyCertificado_x_Contr.lContrCertificados
                                            .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId)));
                                    let lPCPDAC_As = JSON.parse(JSON.stringify(this.oContrCertificado.lPCPDAC_As));
                                    this.oContrCertificado = oContrCertificado;
                                    this.recalcularTotales();
                                    this.oContrCertificado.lPCPDAC_As = lPCPDAC_As;
           ");
                WriteLiteral(@"                         this.oContrCertificado_copia = JSON.parse(JSON.stringify(this.oContrCertificado));
                                    toastr.success(""Datos grabados correctamente."", { timeOut: 2000 });
                                }
                                this.grabandoProyCertEmpleados = false;
                                if (debeEnviarCert) {
                                    this.imprimirContrCertificado();
                                }
                            })
                            .catch(error => {
                                toastr.error(""Error!"", { timeOut: 2000 });
                                console.log(error);
                                this.grabandoProyCertEmpleados = false;
                            });
                    }
                    else {
                        this.grabandoProyCertEmpleados = false;
                        toastr.warning(""'TOTAL CONTRATISTA' no puede ser negativo."" +
                         ");
                WriteLiteral(@"   "" Verifique que la sumatoria de monto asigando a cada obrero no supere el 'TOTAL A FACTURAR'"",
                            { timeOut: 2000 }
                        );
                    }
                },
                getNumeroFormateado(numero) {
                    if (numero) {
                        numero = parseFloat(numero.toString().replace("","", "".""));
                        return numero.toFixed(2).toString().replace(""."", "","").replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ""."");
                    }
                    else return ""0,00"";
                },
                getNumeroFormateadoEditable(numero) {
                    if (numero) {
                        numero = numero.toString();
                        numero = numero.replace("","", ""."");
                        try {
                            numero = parseFloat(numero).toFixed(2);
                        }
                        catch {
                            numero = """";
                         ");
                WriteLiteral(@"   toastr.warning(""El dato ingresado no tiene el formato correcto. Formato esperado: '0000,00'"");
                        }
                        numero = numero.toString().replace(""."", "","");
                        return numero;
                    }
                    else return ""0,00"";
                },
                recargarProyCertificado() {
                    if (this.modificoAlMenosUnRegistro) {
                        this.verProyCertificado(this.oProyCertificado.id);
                    }
                    else {
                        this.recargandoProyCertificado = false;
                        this.vista = 'abm proy certificados';
                    }
                },
                grabarImportesAnteriores() {
                    this.modificoAlMenosUnRegistro = true;
                    let lItemsPCPDACs = [];
                    this.oContrCertificado.lPCPPAs.forEach(pcppa => {
                        let importe = 0;
                        if (pcppa._Im");
                WriteLiteral(@"porteAcumAnterior != """") {
                            importe = parseFloat(pcppa._ImporteAcumAnterior.toString().replace("","", "".""));
                        }
                        lItemsPCPDACs.push({
                            proyCertificadoId: this.oProyCertificado_x_Contr.id,
                            planProyActId: pcppa.planProyActId,
                            importeAcumAnterior: importe,
                            contratistaId: this.oContrCertificado.contratistaId
                        });
                    });
                    axios.post('/GestionCertificados/GrabarImportesAnteriores', lItemsPCPDACs)
                        .then(res => {
                            if (res.data.isError) {
                                toastr.error(res.data.mensaje, { timeOut: 2000 });
                            }
                            else {
                                toastr.success(""Importes anteriores registrados exitosamente."", { timeOut: 2000 });
                 ");
                WriteLiteral(@"               this.oProyCertificado_x_Contr = res.data.oProyCertificado;
                                this.abrirABMContrCertificados(this.oProyCertificado_x_Contr.lContrCertificados
                                    .find(cc => cc.contratistaId == this.oContrCertificado.contratistaId), true);
                            }
                            this.grabandoImportesAnteriores = false;
                        })
                        .catch(error => {
                            toastr.error(""Error!"", { timeOut: 2000 });
                            console.log(error);
                            this.grabandoImportesAnteriores = false;
                        });
                },
                agregarDescuento() {
                    if (this.oProyContrDescuentoNuevo.fecha && this.oProyContrDescuentoNuevo.documento &&
                        this.oProyContrDescuentoNuevo.numero && this.oProyContrDescuentoNuevo.monto) {
                        if (!this.lProyContr_Descuentos) thi");
                WriteLiteral(@"s.lProyContr_Descuentos = [];
                        let fecha = this.oProyContrDescuentoNuevo.fecha;
                        let documento = this.oProyContrDescuentoNuevo.documento;
                        let numero = this.oProyContrDescuentoNuevo.numero;
                        let monto = this.oProyContrDescuentoNuevo.monto;
                        if (!monto) monto = 0;
                        monto = parseFloat(monto);
                        this.lProyContr_Descuentos
                            .push({
                                id: 0,
                                fecha: fecha,
                                documento: documento,
                                numero: numero,
                                monto: monto,
                                _index: this.lProyContr_Descuentos.length
                            });
                        this.oProyContrDescuentoNuevo = { id: 0 };
                        window.addEventListener('beforeunload', this.onClose);
    ");
                WriteLiteral(@"                }
                    else {
                        toastr.warning(""Ingrese todos los datos."", { timeOut: 2000 });
                    }
                },
            },
            computed: {
                getPCPPAs_SinAjustar() {
                    return this.oProyCertificado.lPCPPAs
                        .filter(pcppa => pcppa.lContratistasAvances.find(ca => ca.cantidadAcumAjustePeriodo != 0) == null &&
                            pcppa.montoPlanificado == pcppa.montoPlanificadoOriginal &&
                            (pcppa.visada == false) &&
                            (this.ubicacionFiltro == """" || pcppa.ubicacion.toUpperCase().includes(this.ubicacionFiltro.toUpperCase())) &&
                            (this.actividadFiltro == """" || pcppa.actividad.toUpperCase().includes(this.actividadFiltro.toUpperCase())) &&
                            (this.excedidosFiltro == false || pcppa.cantidadAcumActual > pcppa.cantidadPlanificada)
                        );
           ");
                WriteLiteral(@"     },
                getPCPPAs_Visadas() {
                    return this.oProyCertificado.lPCPPAs.filter(pcppa => pcppa.visada == true &&
                        (this.ubicacionFiltro == """" || pcppa.ubicacion.toUpperCase().includes(this.ubicacionFiltro.toUpperCase())) &&
                        (this.actividadFiltro == """" || pcppa.actividad.toUpperCase().includes(this.actividadFiltro.toUpperCase())) &&
                        (this.excedidosFiltro == false || pcppa.cantidadAcumActual > pcppa.cantidadPlanificada));
                },
                getPCPPAs_Ajustadas() {
                    return this.oProyCertificado.lPCPPAs
                        .filter(pcppa => (pcppa.lContratistasAvances.find(ca => ca.cantidadAcumAjustePeriodo != 0) != null ||
                            pcppa.montoPlanificado != pcppa.montoPlanificadoOriginal) &&
                            (pcppa.visada == false) &&
                            (this.ubicacionFiltro == """" || pcppa.ubicacion.toUpperCase().includes(thi");
                WriteLiteral(@"s.ubicacionFiltro.toUpperCase())) &&
                            (this.actividadFiltro == """" || pcppa.actividad.toUpperCase().includes(this.actividadFiltro.toUpperCase())) &&
                            (this.excedidosFiltro == false || pcppa.cantidadAcumActual > pcppa.cantidadPlanificada)
                        );
                },
                getPCPPAsExcedidasSinNotificar() {
                    return this.oProyCertificado.lPCPPAs.filter(pcppa => pcppa.porcentajeCumplido > 100 &&
                        pcppa.notificacionId == 0);
                },
                getCantidadPCPPAsExcedidasSinNotificar() {
                    return this.getPCPPAsExcedidasSinNotificar.length;
                },
                getTotalEmpleados() {
                    if (this.oContrCertificado.lProyCert_Empleados) {
                        let suma = 0;
                        this.oContrCertificado.lProyCert_Empleados.forEach(cce => {
                            let monto = cce.monto;
           ");
                WriteLiteral(@"                 if (!monto) monto = 0;
                            monto = parseFloat(monto);
                            suma += monto
                        });
                        return suma;
                    }
                    else return 0;
                },
                getTotalImportePartidaAjustado() {
                    let suma = 0;
                    this.oContrCertificado.lDataPartidas.forEach(p => suma += p.importePartidaAjustado);
                    return suma;
                },
                getTotalImporteFondoReparo() {
                    let suma = 0;
                    this.oContrCertificado.lDataPartidas.forEach(p => suma += p.importeFondoReparo);
                    return suma;
                },
                getTotalDiferenciaAjustadoFondoResparo() {
                    return this.getTotalImportePartidaAjustado - this.getTotalImporteFondoReparo;
                },
                getPartidas() {
                    return this.oContrCe");
                WriteLiteral(@"rtificado.lDataPartidas
                        .filter(p => p.importeAcumActualAjustado && p.importeAcumActualAjustado != 0);
                },
                consultarSiAjustado() {
                    return this.oPCPPA.lContratistasAvances
                        .find(ca => ca.cantidadAcumAjustePeriodo != 0 || ca.ajustado == true) != null;
                },
                getPCPPA_AP_Ajustables() {
                    index = 0;
                    this.oContrCertificado.lPCPDAC_As.forEach(pcpdaca => {
                        pcpdaca._index = index;
                        index++;
                    });
                    return this.oContrCertificado.lPCPPA_APs.filter(pcppa => pcppa.montosAjustables == true);
                },
                getPCPDAC_A_Ajustables() {
                    index = 0;
                    this.oContrCertificado.lPCPDAC_As.forEach(pcpdaca => {
                        pcpdaca._index = index;
                        index++;
                    });");
                WriteLiteral(@"
                    return this.oContrCertificado.lPCPDAC_As.filter(pcpdaca => pcpdaca.montosAjustables == true);
                },
                getPCPPA_AP_NoAjustables() {
                    return this.oContrCertificado.lPCPPA_APs.filter(pcppa => pcppa.montosAjustables == false);
                },
                getPCPDAC_A_NoAjustables() {
                    return this.oContrCertificado.lPCPDAC_As.filter(pcpdaca => pcpdaca.montosAjustables == false);
                },
                getTotalFondosReparo() {
                    let suma = 0;
                    this.lContrCertificados_FondoReparo.forEach(pcd => suma += pcd.fondoReparo);
                    return suma;
                },
                getTotalDescuentos() {
                    let suma = 0;
                    this.lProyContr_Descuentos.forEach(pcd => suma += parseFloat(pcd.monto));
                    return suma;
                }
            }
        });
        const vm = app.mount('#vapp');
       ");
                WriteLiteral(@" const urlParams = new URLSearchParams(window.location.search);
        const ProyCertificadoId = urlParams.get('ProyCertificadoId');
        if (ProyCertificadoId) {
            vm.buscarSegunProyCertificadoId(ProyCertificadoId);
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<object> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
