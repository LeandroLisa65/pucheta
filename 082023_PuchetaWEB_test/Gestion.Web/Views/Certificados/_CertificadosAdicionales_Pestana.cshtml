@model Gestion.EF.ReturnData

<link href="~/plugins/kendoui_2022_2_802/styles/kendo.bootstrap.min.css" rel="stylesheet" />



<div class="row">
    <div class="col-lg-12">
        <div class="form-group">
            <div class="card">
            </div>
        </div>
        <div class="form-group" style="box-shadow: 10px 10px 15px 8px grey;border-radius:5px;">
            <div class="card" title="">
                <header style="text-align:center;background-color:#3b4394;color:white;padding-top:3px">
                        <h6 style="justify-content: center;font-weight: bold;">Agregar Adicional</h6>
                </header>
                <div class="card-body" >
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">Ubicacion:</label>
                                <input id="Adicional_UbicacionId" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">Rubros:</label>
                                <input id="Adicional_RubroId" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">Actividad</label>
                                <input id="Adicional_ActividadId" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                             <div class="form-group">
                                <label>Cantidad:</label>
                                <input id="txtCantidad" type="number" title="" min="0" max="99999999" step="1" />
                             </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">Unidad Medida</label>
                                <input id="Adicional_UnidadMedidaId" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Monto Unitario:</label>
                                <input id="txtMontounitario" type="number" title="" min="0" max="99999999" step="1" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <button class="btn-graba float-right" style="margin-top:1.9em"
                                    onclick="GrabarAdicional()">
                                <i class="fas fa-check"></i>
                                Grabar
                            </button>
                        </div>

                    </div>

                </div>
            </div>
        </div>
       
        <div class="card  card-rojo">
            
       
            <div id="GrillaKendoAdicional"></div>
                <br />
            <br />
            <button id="botonHistorico" onclick="toggleZona()">Mostrar Historico Adicionales</button>
            <div id="miZona">
                <div class="form-group" style="box-shadow: 10px 10px 15px 8px grey;border-radius:5px;">
                    <div class="card" title="">
                        <div class="card-body">
                            <div id="GrillaKendoAdicionalHistorico"></div>
                        </div>
                        <br />
                        <br />
                    </div>
                </div>
            </div>
        
        </div>



        <button style="float:right;" Id="btnGuardarAprobar" class="btn btn-primary" id="" onclick="_aprobacionAdicionales()">
                Aprobar Adicionales
            </button>
    
    </div>
</div>


<script src="~/plugins/kendoui_2022_2_802/js/jquery.min.js"></script>
<script src="~/plugins/kendoui_2022_2_802/js/kendo.all.min.js"></script>
<style>
  /*  Este estilo es para Esconder el Historico de ADicionales*/
    #miZona {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.5s ease-out;
    }

    #botonHistorico{
        text-align: center;
        background-color: #3b4394;
        color: white;
        padding-top: 3px;
        justify-content: center;
        font-weight: bold;
    }
</style>
<script type="text/x-kendo-template" id="Grid-Btn-template3">
  
    <div>  #= act_Esta_Liquidado ? '<img width:"2px", src="../dist/img/pagado.png" />' : act_Presenta_Liquidacion ? '<img src="../dist/img/checkbox.png" />' : '<img src="../dist/img/uncheckbox.png" />' # </div>

</script>
<script>
   
    //var dataGlobalCertificadosAdicional = JSON.parse('Html.Raw(Json.Serialize(Model))');
    var dataGlobalCertificadosAdicional = JSON.parse(JSON.stringify(@Html.Raw(Json.Serialize(Model))));
    var idCertificado = dataGlobalCertificadosAdicional.data1;
    var _cantidadRegistrosAdicional=0;
    var IdProyecto= dataGlobalCertificadosAdicional.data;
    //#region SeccionAdicional
    //#region DefincionesGenerales
    grillaAdicionales();


    var dataUnidadMedida = [

        {
            id: 'Unidad',
            nombre: 'Unidad'
        },
        {
            id: 'Metros',
            nombre: 'Metros'

        },
        {
            id: 'Metros 2',
            nombre: 'Metros 2'

        }
    ];
    //#endregion
    //#region InstanciasCombos
    cargaRubro();
    cargaUbicacion();
    cargaUnidadMedida();
    $("#txtCantidad").kendoNumericTextBox({
        decimals: 2
    });
    $("#txtMontounitario").kendoNumericTextBox({
        format: "c",
        decimals: 2
    });

    //#endregion
    //#region CargarCombos
    function cargaRubro(refrezcar = 0) {
        if (refrezcar = 0) {
            $.get("@Url.Action("GetAllRubros","Certificados")/", function (data) {
                if (!data.isError) {
                    $("#Adicional_RubroId").kendoDropDownList({
                        filter: "startswith",
                        dataTextField: "nombre",
                        dataValueField: "id",
                        optionLabel: "Elegir Rubro",
                        change: Rubro_onChange,
                        dataSource: data.data,
                        height: 400
                    });
                };
            });

            $("#Adicional_ActividadId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Actividad",
                dataSource: [],
                height: 400
            });
        }
        else {
            $("#Adicional_RubroId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Rubro",
                dataSource: [],
                height: 400
            });

            $.get("@Url.Action("GetAllRubros","Certificados")/", function (data) {
                if (!data.isError) {
                    $("#Adicional_RubroId").kendoDropDownList({
                        filter: "startswith",
                        dataTextField: "nombre",
                        dataValueField: "id",
                        optionLabel: "Elegir Rubro",
                        change: Rubro_onChange,
                        dataSource: data.data,
                        height: 400
                    });
                };
            });

            $("#Adicional_ActividadId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Actividad",
                dataSource: [],
                height: 400
            });
        }

    }
    function Rubro_onChange() {
        IdRubro = $('#Adicional_RubroId').val();
        CargarActividad(IdRubro);

    }
    function CargarActividad(IdRubro) {
        $.get("@Url.Action("GetAllActividadXRubro","Certificados")/?IdRubro=" + IdRubro, function (data) {
            if (!data.isError) {
                $("#Adicional_ActividadId").kendoDropDownList({
                    filter: "startswith",
                    dataTextField: "nombre",
                    dataValueField: "id",
                    optionLabel: "Elegir Actividad",
                    //  change: MostrarCamposxActividad,
                    dataSource: data.data,
                    height: 400
                });
            };
        });
    }
    function cargaUbicacion(refrezcar = 0) {
        if (refrezcar = 0) {
            $.get("@Url.Action("GetAllUbicaciones","Certificados")/?IdProyecto=" + IdProyecto, function (data) {
                
                if (!data.isError) {
                  
                    $("#Adicional_UbicacionId").kendoDropDownList({
                        filter: "startswith",
                        dataTextField: "nombre",
                        dataValueField: "id",
                        optionLabel: "Elegir Ubicacion",
                        change: Rubro_onChange,
                        dataSource: data.data,
                        height: 400
                    });

                };
            });
        } else {
           
            $("#Adicional_UbicacionId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Ubicacion",
                change: Rubro_onChange,
                dataSource: [],
                height: 400
            });
            $.get("@Url.Action("GetAllUbicaciones","Certificados")/?IdProyecto=" + IdProyecto, function (data) {
           
                if (!data.isError) {
                    $("#Adicional_UbicacionId").kendoDropDownList({
                        filter: "startswith",
                        dataTextField: "nombre",
                        dataValueField: "id",
                        optionLabel: "Elegir Ubicacion",
                        change: Rubro_onChange,
                        dataSource: data.data,
                        height: 400
                    });
                };
            });
        }

    }
    function cargaUnidadMedida(refrezcar = 0) {
        if (refrezcar = 0) {
            $("#Adicional_UnidadMedidaId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Unidad Medida",
                dataSource: dataUnidadMedida,
                height: 400
            });
        } else {
            $("#Adicional_UnidadMedidaId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Unidad Medida",
                dataSource: [],
                height: 400
            });
            $("#Adicional_UnidadMedidaId").kendoDropDownList({
                filter: "startswith",
                dataTextField: "nombre",
                dataValueField: "id",
                optionLabel: "Elegir Unidad Medida",
                dataSource: dataUnidadMedida,
                height: 400
            });
        }

    }
    //#endregion

    //#region ABM
    function GrabarAdicional() {
        var IdCertificadoInsert = idCertificado;
        if (dataGlobalCertificadosAdicional.data2 == "Lectura") {
            toastr.error("No se generar un adicional si se ingreso en modo lectura.", { timeOut: 3000 });
            return;
        }
        if (dataGlobalCertificadosAdicional.data2 == "A Pagar") {
            toastr.error("No se puede editar adicionales si esta pendiente de pagar el Certificado.", { timeOut: 3000 });
            return;
        }
        //Controles de Campos Completos
        if ($('#Adicional_UbicacionId').val() == "0" || $('#Adicional_UbicacionId').val() == "") {
            toastr.error("Debe seleccionar una ubicación.", { timeOut: 2000 });
            return;
        }
        if ($('#Adicional_RubroId').val() == "0" || $('#Adicional_RubroId').val() == "") {
            toastr.error("Debe seleccionar un rubro.", { timeOut: 2000 });
            return;

        }
        if ($('#Adicional_ActividadId').val() == "0" || $('#Adicional_ActividadId').val() == "") {
            toastr.error("Debe seleccionar una actividad.", { timeOut: 2000 });
            return;
        }
        if ($("#txtCantidad").val() == "0" || $("#txtCantidad").val() == "") {
            toastr.error("Debe ingresar una cantidad.", { timeOut: 2000 });
            return;
        }
        if ($("#txtMontounitario").val() == "0" || $("#txtMontounitario").val() == "") {
            toastr.error("Debe ingresar una cantidad.", { timeOut: 2000 });
            return;
        }
        if ($('#Adicional_UnidadMedidaId').val() == "0" || $('#Adicional_UnidadMedidaId').val() == "") {
            toastr.error("Debe seleccionar una unidad de medida.", { timeOut: 2000 });
            return;
        }
        //---
        var model = {
            IdUbicacion: $('#Adicional_UbicacionId').val(),
            IdRubro: $('#Adicional_RubroId').val(),
            IdActividad: $('#Adicional_ActividadId').val(),
            Cantidad: $('#txtCantidad').val(),
            MontoUnitario: $('#txtMontounitario').val(),
            IdCertificado: IdCertificadoInsert,
            UnidadMedida: $('#Adicional_UnidadMedidaId').val()
        };
        $.post("/Certificados/CargarNuevoAdicional", model).done(
            function (e) {
                if (!e.isError) {
                    toastr.success('Se grabo correctamente el Adicional', { timeOut: 2000 });
                    limpiarFormulario();
                    cargarPestanaAdicionales(idCertificado)
                } else {
                    toastr.error('Hubo un problema al grabar el Adicional', { timeOut: 2000 });
                }
            });


    }

    function limpiarFormulario() {
        cargaRubro(1);
        cargaUbicacion(1);
        cargaUnidadMedida(1);
        $("#txtCantidad").val("");
        $("#txtMontounitario").val("");


    }



    //#endregion
 
    //#region DEFINICIONES-GENERALES
    var dataSourcAdicional = null;
   
    //#endregion
    //#region DEFINICIONES-GRILLA (Lectura/Edicion)
    function grillaAdicionales()
    {
    if (dataGlobalCertificadosAdicional.data2 == "Lectura") {
            dataSourcAdicional = new kendo.data.DataSource({
                transport: {
                    read: {
                    url: "/Certificados/MostrarDetallesCertificadosAdicionales/?IdCertificado=" + idCertificado,
                        type: "POST"
                    },
                    update: {
                        url: "/Certificados/Update_Actividad",
                        type: "POST",
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return options.models[0];
                        }
                    }
                },
                requestStart: function (e) {
                    if (e.type == "update") {
                    cargoActividades(dataGlobalCertificadosAdicional.data1);   cargoActividades(dataGlobalCertificadosAdicional.data1);
                    }
                },
                batch: true,
                pageSize: 50,
                autoSync: true,
            aggregate: [
                { field: "cda_Moneda_Certificado_Actual", aggregate: "sum" , format: "{0:N2}" }
            ],
                schema: {

                    model: {
                        id: "id",
                        fields: {
                        id: { editable: false, nullable: false },
                        vis_cda_UbicacionNombre: { editable: false, nullable: false },
                        vis_cda_RubroNombre: { editable: false, nullable: false },
                        vis_cda_ActividadNombre: { editable: false, nullable: false },
                        cda_Comentario: { editable: false, nullable: false },
                        vis_cda_PartidaNombre: { editable: false, nullable: false },
                        cda_UnidadMedida: { editable: false, nullable: false },
                        //-
                        cda_Importe_Cantidad_Asignada: { editable: false, nullable: false },
                        cda_Importe_Cantidad_Asignada_UnidadMedida: { editable: false, nullable: false },
                        cda_Importe_Monto_Unitario: { editable: false, nullable: false },
                        vis_cda_Importe_FHasta: { editable: false, nullable: false },
                        //-
                        cda_Moneda_Certificado_Actual: { editable: false, nullable: false },
                        vis_cda_EstaAprobada: { editable: false }
                        //--
                    }
                    }
                }
            });
        }else{
        dataSourcAdicional = new kendo.data.DataSource({
                transport: {
                    read: {
                    url: "/Certificados/MostrarDetallesCertificadosAdicionales/?IdCertificado=" + idCertificado,
                        type: "POST"
                    },
                    update: {
                        url: "/Certificados/Update_Actividad",
                        type: "POST",
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return options.models[0];
                        }
                    }
                },
                requestStart: function (e) {
                    if (e.type == "update") {
                    //cargoActividades(dataGlobalCertificadosAdicional.data1);

                    }
                },
                batch: true,
                pageSize: 50,
                autoSync: true,
                aggregate: [
                { field: "cda_Moneda_Certificado_Actual", aggregate: "sum" , format: "{0:N2}" }
                ],
                schema: {

                    model: {
                        id: "id",
                        fields: {
                        id: { editable: false, nullable: false },
                        vis_cda_UbicacionNombre: { editable: false, nullable: false },
                        vis_cda_RubroNombre: { editable: false, nullable: false },
                        vis_cda_ActividadNombre: { editable: false, nullable: false },
                        cda_Comentario: { editable: false, nullable: false },
                        vis_cda_PartidaNombre: { editable: false, nullable: false },
                        cda_UnidadMedida: { editable: false, nullable: false },
                        //-
                        cda_Importe_Cantidad_Asignada: { editable: false, nullable: false },
                        cda_Importe_Cantidad_Asignada_UnidadMedida: { editable: false, nullable: false },
                        cda_Importe_Monto_Unitario: { editable: false, nullable: false },
                        vis_cda_Importe_FHasta: { editable: false, nullable: false },
                        //--
                        cda_Moneda_Certificado_Actual: { editable: false, nullable: false },
                        vis_cda_EstaAprobada: { editable: false }
                        //--
                    }
                    }
                }
            });
        }
    
       
        //Definimos Ubicacion de la grilla
    $("#GrillaKendoAdicional").html("<div id='grillaAdicional'></div>");
        //Definimos las Columnas Grilla
        var colGrillaAdicional=[
        {
            title: "<span style='color: black; font-weight: bold;'>ACTIVIDADES ADICIONALES NO PRESUPUESTADAS</span>",
            headerAttributes: { style: "background-color: #0774a9;" },
            columns:[
                    {
                    title: "",
                        columns:[
                        { field: "vis_cda_UbicacionNombre", title: "Ubicación", width: "4px" },
                        { field: "vis_cda_RubroNombre", title: "Rubro", width: "5.5px" },
                        { field: "vis_cda_ActividadNombre", title: "Actividad", width: "4px" },
                        { field: "cda_Comentario", title: "Detalle", width: "4.5px" },
                        //{ field: "cda_UnidadMedida", title: "Unidad </br> Medida", width: "3px", attributes: { style: "text-align:center;" } },
                        { field: "vis_cda_PartidaNombre", title: "Partida", width: "3px", attributes: { style: "text-align:center;" } },
                        { field: "vis_cda_EstaAprobada", title: " Esta </br> Aprobada", width: "3px", attributes: { style: "text-align:center;" } }
                         ]
                    },
                    {
                        title: "<span style='color: black; font-weight: bold;'>EVENTUALES</span>",
                    headerAttributes: { style: "background-color:#0c98db;" },
                        columns: [
                        { field: "cda_Importe_Cantidad_Asignada_UnidadMedida", title: "Cantidad", width: "3.5px", filterable: false, attributes: { style: "text-align:center;" } },
                        { field: "cda_Importe_Monto_Unitario", title: "Monto </br> Unitario", format: "{0:c}",filterable: false, width: "3.5px", attributes: { style: "text-align:center;" } },
                        { field: "vis_cda_Importe_FHasta", title: "Fecha </br>  Hasta", filterable: false, width: "3.7px", attributes: { style: "text-align:center;" } }
                        ]
                    },
                    {
                        title: "<span style='color: black; font-weight: bold;'>IMPORTE</span>",
                    headerAttributes: { style: "background-color: #39bdfd;" },
                        columns:[
                        { field: "cda_Moneda_Certificado_Actual", title: "Certificado </br> Actual", filterable: false, format: "{0:c}", width: "4px", attributes: { style: "text-align:center;" }, aggregates: ["sum"], footerTemplate: "<div>$ #=sum#</div>" }
                       
                        ]
                    },
                    { command: { name: "kdelete", text: "", click: BorrarAdicional }, title: "Borrar", width: "4px", attributes: { style: "text-align:center;" } }

               
            ]
        }
    ]
        //Instanciamos la grilla
    var GrillaAdicional = $("#grillaAdicional").kendoGrid({
        columns: colGrillaAdicional,
        navigatable: true,
        filterable: false,
        pageable: {
            refresh: true,
            pageSizes: true,
            buttonCount: 20,
        },
        dataSource: dataSourcAdicional,
        editable: true,
        scrollable: true,
        reorderable: true,
        sortable: true,
        dataBound: function (e) {
            dataView = this.dataSource.view();
            
            _cantidadRegistrosAdicional = dataView.length;
            var gridAdicional = e.sender;
            var dataItems = gridAdicional.dataSource.view();
            for (var i = 0; i < dataItems.length; i++) {
                var uid = dataItems[i].uid;
                if (dataItems[i].vis_cda_EstaAprobada == "SI") {
                    $("#grillaAdicional tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_V");
                }else{
                    $("#grillaAdicional tbody").find("tr[data-uid=" + uid + "]").addClass("K-bacgraundRow_R");
                }

            }
        },
        height: _calcularAlturaGrillaAdicional(),
    }).data("kendoGrid");
}
    function BorrarAdicional(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.cda_Id;
        if (dataGlobalCertificadosAdicional.data2 == "Lectura") {
            toastr.error("No se puede eliminar un adicional si se ingreso en modo lectura.", { timeOut: 3000 });
            return;
        }
        if (dataGlobalCertificadosAdicional.data2 == "A Pagar") {
            toastr.error("No se puede editar adicionales si esta pendiente de pagar el Certificado.", { timeOut: 3000 });
            return;
        }
        $.post("/Certificados/BorraAdicional/?id=" + id).done(function (e) {
            if (!e.isError) {
                toastr.success("Se elimino correctamente el adicional.", { timeOut: 2000 });
                cargarPestanaAdicionales(idCertificado)
            } else {
                toastr.error("Hubo un error al borrar el adicional.", { timeOut: 2000 });
            }

        });
    }
    function _calcularAlturaGrillaAdicional() {
        let Altura = "500px";

        if (_cantidadRegistrosAdicional > 3) {
            let Cantidad = (_cantidadRegistrosAdicional) * 110;
            Altura = Cantidad.toString() + "px";
        }

        return Altura;

    }
    //#endregion

    //#region HistoricoAdicionales
    function toggleZona() {
        var zona = document.getElementById("miZona");
        if (zona.style.maxHeight) {
            zona.style.maxHeight = null;
        } else {
            zona.style.maxHeight = zona.scrollHeight + "px";
        }
    }
    //#region GrillaHistorico
    dataSourcAdicionalHistorico = new kendo.data.DataSource({
            transport: {
                read: {
                url: "/Certificados/MostrarDetallesCertificadosAdicionalesHistorico/?IdCertificado=" + idCertificado,
                    type: "POST"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return options.models[0];
                    }
                }
            },
            requestStart: function (e) {
                if (e.type == "update") {
                    cargoActividades(dataGlobalCertificadosAdicional.data1); cargoActividades(dataGlobalCertificadosAdicional.data1);
                }
            },
            batch: true,
            pageSize: 50,
            autoSync: true,
            aggregate: [
                { field: "cda_Moneda_Certificado_Actual", aggregate: "sum" }
            ],
            schema: {

                model: {
                    id: "id",
                    fields: {
                        id: { editable: false, nullable: false },
                    vis_nro_Certificado_Historico: { editable: false, nullable: false },
                    vis_fecha_certificado_Historico: { editable: false, nullable: false },
                        //--
                        vis_cda_UbicacionNombre: { editable: false, nullable: false },
                        vis_cda_RubroNombre: { editable: false, nullable: false },
                        vis_cda_ActividadNombre: { editable: false, nullable: false },
                        cda_Comentario: { editable: false, nullable: false },
                        vis_cda_PartidaNombre: { editable: false, nullable: false }, 
                        cda_UnidadMedida: { editable: false, nullable: false },
                        //-
                        cda_Importe_Cantidad_Asignada: { editable: false, nullable: false },
                        cda_Importe_Cantidad_Asignada_UnidadMedida: { editable: false, nullable: false },
                        cda_Importe_Monto_Unitario: { editable: false, nullable: false },
                        vis_cda_Importe_FHasta: { editable: false, nullable: false },
                        //-
                        cda_Moneda_Certificado_Actual: { editable: false, nullable: false }

                        //--
                    }
                }
            }
        });
   
    //Definimos Ubicacion de la grilla
    $("#GrillaKendoAdicionalHistorico").html("<div id='grillaAdicionalHistorico'></div>");
    //Definimos las Columnas Grilla
    var colGrillaAdicionalHistorico = [
        {
            title: "<span style='color: black; font-weight: bold;'>ACTIVIDADES ADICIONALES HISTORICO</span>",
            headerAttributes: { style: "background-color: #0774a9;" },
            columns: [
                {
                    title: "",
                    columns: [
                        { field: "vis_nro_Certificado_Historico", title: "Nro Certificado", width: "4px" },
                        { field: "vis_fecha_certificado_Historico", title: "Fecha de Creacion", width: "4px" },
                        { field: "vis_cda_UbicacionNombre", title: "Ubicación", width: "4px" },
                        { field: "vis_cda_RubroNombre", title: "Rubro", width: "5.5px" },
                        { field: "vis_cda_ActividadNombre", title: "Actividad", width: "4px" },
                        { field: "cda_Comentario", title: "Detalle", width: "4.5px" },
                        { field: "vis_cda_PartidaNombre", title: "Partida", width: "3px", attributes: { style: "text-align:center;" } }
                    ]
                },
                {
                    title: "<span style='color: black; font-weight: bold;'>EVENTUALES</span>",
                    headerAttributes: { style: "background-color:#0c98db;" },
                    columns: [
                        { field: "cda_Importe_Cantidad_Asignada_UnidadMedida", title: "Cantidad", width: "3.5px", filterable: false, attributes: { style: "text-align:center;" } },
                        { field: "cda_Importe_Monto_Unitario", title: "Monto </br> Unitario", format: "{0:c}", filterable: false, width: "3.5px", attributes: { style: "text-align:center;" } },
                        { field: "vis_cda_Importe_FHasta", title: "Fecha </br>  Hasta", filterable: false, width: "3.7px", attributes: { style: "text-align:center;" } }
                    ]
                },
                {
                    title: "<span style='color: black; font-weight: bold;'>IMPORTE</span>",
                    headerAttributes: { style: "background-color: #39bdfd;" },
                    columns: [
                        { field: "cda_Moneda_Certificado_Actual", title: "Certificado </br> Actual", filterable: false, format: "{0:c}", width: "4px", attributes: { style: "text-align:center;" }, aggregates: ["sum"], footerTemplate: "<div>$ #=sum#</div>" }

                    ]
                }


            ]
        }
    ]
    //Instanciamos la grilla
    var GrillaAdicionalHistorico = $("#grillaAdicionalHistorico").kendoGrid({
        columns: colGrillaAdicionalHistorico,
        navigatable: true,
        filterable: false,
        pageable: {
            refresh: true,
            pageSizes: true,
            buttonCount: 20,
        },
        dataSource: dataSourcAdicionalHistorico,
        editable: true,
        scrollable: true,

        reorderable: true,
        sortable: true,
        dataBound: function () {
            dataView = this.dataSource.view();
            _cantidadRegistrosAdicional = dataView.length;  
        },
        height: _calcularAlturaGrillaAdicionalHistorico(),
    }).data("kendoGrid");

    function _calcularAlturaGrillaAdicionalHistorico() {
        let Altura = "900px";

        if (_cantidadRegistrosAdicional > 8) {
            let Cantidad = (_cantidadRegistrosAdicional) * 130;
            Altura = Cantidad.toString() + "px";
        }

        return Altura;

    }
    //#endregion
   
     //#endregion

    //#region GuardaryAprobarLiquidacion

    function _aprobacionAdicionales(Estado = '') {
        if (dataGlobalCertificadosAdicional.data2 == "Lectura") {
            toastr.error("No se realizan operaciones en Modo lectura.", { timeOut: 3000 });
            return;
        }
        if (dataGlobalCertificadosAdicional.data2 == "A Pagar") {
            toastr.error("No se puede editar adicionales si esta pendiente de Pagar el Certificado.", { timeOut: 3000 });
            return;
        }
        var model = {
            IdCertificado: dataGlobalCertificados.data1
        };

        $.post("/Certificados/_AprobarAdicionales", model).done(function (e) {
            if (!e.isError) {
                toastr.success(e.data2, { timeOut: 2000 });
                grillaAdicionales();
               
            } else {
                toastr.error(e.data, { timeOut: 2000 });
                _cargarGrilla(lstActividades);
            }
        });
    }

   //#endregion


</script>

