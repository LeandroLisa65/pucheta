@model object

<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            <strong>Certificados - % de incidencia de Trabajos Adicionales sobre el Proyecto y Total Empresa</strong>
        </h3>
    </div>
    <div class="card-body">
        <div class="form-group">
            <div class="row" style="margin-bottom:0.5em">
                <div class="col-md-4">
                    <select id="slcProyectos_EstCert" class="form-control"></select>
                </div>
                <div class="col-md-2">
                    <input id="inpFecDesde_EstCert"
                           type="date"
                           class="form-control" />
                </div>
                <div class="col-md-2">
                    <input id="inpFecHasta_EstCert"
                           type="date"
                           class="form-control" />
                </div>
                <div class="col-md-4">
                    <label id="lblPeriodo" style="font-size:1.2em"></label>
                    <button type="button" class="btn btn-default float-right"
                            onclick="recargar_EstCert()">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
            <div class="row">
                <div id="divTotales_EstCert" class="col-md-12"></div>
                <div id="divAdicionales_EstCert" class="col-md-6"></div>
                <div id="divGrafico_EstCert" class="col-md-6"></div>
            </div>
        </div>
    </div>
</div>

<script>

        var data = JSON.parse('@Html.Raw(Json.Serialize(Model))');
        var oEstCert = data.oEstCert;
        var oEstCert_Todos = data.oEstCert_Todos;
        cargarSelect("slcProyectos_EstCert", data.lProyectos, 'id', 'nombre');
        inpFecDesde_EstCert.value = data.fecDesde;
        inpFecHasta_EstCert.value = data.fecHasta;
        cargar_EstCert();

        function cargar_EstCert() {
            cargarTotales_EstCert();
            cargarRankingAdicionales_EstCert();
            cargarGraficoBarras_EstCert();
        }

        function cargarTotales_EstCert() {
            lblPeriodo.innerHTML = "Periodo: " + oEstCert.Periodo;
            let table = "<table class='table table-hover table-striped'><tbody>";
            table += "<tr>";
            table += "<th colspan='3'>Proyecto: " + oEstCert.ProyectoNombre + "</th>";
            table += "<th></th>";
            table += "<th colspan='2'>Pucheta Construcciones</th>";
            table += "</tr>";
            table += "<tr>";
            table += "<th></th>";
            table += "<th style='text-align: right'>Cantidad</th>";
            table += "<th style='text-align: right'>Monto</th>";
            table += "<th></th>";
            table += "<th style='text-align: right'>Cantidad</th>";
            table += "<th style='text-align: right'>Monto</th>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>Total Act. Plan.</th>";
            table += "<td style='text-align: right'>" + oEstCert.TotalActividadesPlanificadas + "</td>";
            table += "<td style='text-align: right'>$" + getNumeroFormateado(oEstCert.ImporteTotalActPlanificadas) + "</td>";
            table += "<th></th>";
            table += "<td style='text-align: right'>" + oEstCert_Todos.TotalActividadesPlanificadas + "</td>";
            table += "<td style='text-align: right'>$" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActPlanificadas) + "</td>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>Total Act. Adic.</th>";
            table += "<td style='text-align: right'>" + oEstCert.TotalActividadesAdicionales + "</td>";
            table += "<td style='text-align: right'>$" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales) + "</td>";
            table += "<th></th>";
            table += "<td style='text-align: right'>" + oEstCert_Todos.TotalActividadesAdicionales+ "</td>";
            table += "<td style='text-align: right'>$" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActAdicionales) + "</td>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>Totales</th>";
            table += "<th style='text-align: right'>" + (oEstCert.TotalActividadesPlanificadas + oEstCert.TotalActividadesAdicionales) + "</th>";
            table += "<th style='text-align: right'>$" + getNumeroFormateado(oEstCert.ImporteTotalActPlanificadas + oEstCert.ImporteTotalActAdicionales) + "</th>";
            table += "<th></th>";
            table += "<th style='text-align: right'>" + (oEstCert_Todos.TotalActividadesPlanificadas + oEstCert_Todos.TotalActividadesAdicionales) + "</th>";
            table += "<th style='text-align: right'>$" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActPlanificadas + oEstCert_Todos.ImporteTotalActAdicionales) + "</th>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>% Adicionales del Proyecto</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert.TotalActividadesAdicionales * 100 / (oEstCert.TotalActividadesPlanificadas + oEstCert.TotalActividadesAdicionales)) + "%</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales * 100 / (oEstCert.ImporteTotalActPlanificadas + oEstCert.ImporteTotalActAdicionales))  + "%</th>";
            table += "<th style='text-align: right'>% Adicionales Total Empresa</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert_Todos.TotalActividadesAdicionales * 100 / (oEstCert_Todos.TotalActividadesPlanificadas + oEstCert_Todos.TotalActividadesAdicionales)) + "%</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert_Todos.ImporteTotalActAdicionales * 100 / (oEstCert_Todos.ImporteTotalActPlanificadas + oEstCert_Todos.ImporteTotalActAdicionales)) + "%</th>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>% Adicionales Proyecto / Empresa</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert.TotalActividadesAdicionales * 100 / oEstCert_Todos.TotalActividadesAdicionales) + "%</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(oEstCert.ImporteTotalActAdicionales * 100 / oEstCert_Todos.ImporteTotalActAdicionales) + "%</th>";
            table += "<th></th>";
            table += "<th></th>";
            table += "<th></th>";
            table += "</tr>";
            table += "</tbody><table>";
            divTotales_EstCert.innerHTML = table;
        }

        function cargarRankingAdicionales_EstCert() {
            let table = "<table class='table table-hover table-striped'><tbody>";
            table += "<tr>";
            table += "<th colspan='3'>Ranking Adicionales</th>";
            table += "</tr>";
            table += "<tr>";
            table += "<th>#</th>";
            table += "<th>Actividad</th>";
            table += "<th style='text-align: right'>Monto</th>";
            table += "</tr>";
            let contador = 1;
            let acumulador = 0;
            oEstCert.lAdicionales.forEach(a => {
                table += "<tr>";
                table += "<td>" + contador + "</td>";
                table += "<td>" + a.Actividad + "</td>";
                table += "<td style='text-align: right'>$" + getNumeroFormateado(a.Importe) + "</td>";
                table += "</tr>";
                acumulador += a.Importe;
                contador++;
            });
            table += "<tr>";
            table += "<th colspan='2' style='text-align: right'>TOTAL</th>";
            table += "<th style='text-align: right'>" + getNumeroFormateado(acumulador) + "</th>";
            table += "</tr>";
            table += "</tbody><table>";
            divAdicionales_EstCert.innerHTML = table;
        }

        function cargarGraficoBarras_EstCert() {
            let series = [];
            oEstCert.lContratistas.forEach(c => {
                series.push({ name: c.Contratista, data: [c.Importe] });
            });
            $("#divGrafico_EstCert").kendoChart({
                title: {
                    text: "Ranking Contratistas"
                },
                legend: {
                    position: "top"
                },
                seriesDefaults: {
                    type: "column"
                },
                series: series,
                valueAxis: {
                    labels: {
                        format: "0.00"
                    },
                    line: {
                        visible: false
                    },
                    axisCrossingValue: 0
                },
                tooltip: {
                    visible: true,
                    format: "0.00",
                    template: "#= series.name #: #= value #"
                }
            });
        }

        function recargar_EstCert() {
            const oFiltro = {};
            oFiltro.proyectoId = slcProyectos_EstCert.value;
            oFiltro.fecDesde = inpFecDesde_EstCert.value;
            oFiltro.fecHasta = inpFecHasta_EstCert.value;
            $.post("/Estadisticas/RecargarEstCertificados", oFiltro)
                .done(
                    function (res) {
                        if (res.isError) {
                            toastr.error(res.data, { timeOut: 2000 });
                        } else {
                            oEstCert = res.oEstCert;
                            oEstCert_Todos = res.oEstCert_Todos;
                            cargar_EstCert();
                        }
                    }
                );
        }

</script>
